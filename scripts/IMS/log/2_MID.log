1> 2> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> (1 row affected)

------------------------------------------------------------------------------
------------------------------
1.                                   City
------------------------------------------------------------------------------
------------------------------
1> 2> 3> 4> 5> 6> (0 rows affected)
1> 2> 3> 4> 1> 2> 3> (57998 rows affected)
1> 2> (57998 rows affected)
1> 2> 3> 4> 1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 
------------------------------------------------------------------------------
------------------------------
2.                                   Slide 3 
------------------------------------------------------------------------------
------------------------------
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> (10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
1> 2> 1> 2> 3> 4> 5> (160 rows affected)
(160 rows affected)
1> 2> 3> 4> 5> 6> 7> 1> 2> 3> 4> 5> 6> 7> (160 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 
------------------------------------------------------------------------------
------------------------------
3.                                   Slide 2 
------------------------------------------------------------------------------
------------------------------
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> (6 rows affected)
(2 rows affected)
(6 rows affected)
(2 rows affected)
(6 rows affected)
(2 rows affected)
(6 rows affected)
(2 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> (16 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> (32 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (32 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (1 row affected)

------------------------------------------------------------------------------
------------------------------
4.                                   Slide 4 
------------------------------------------------------------------------------
------------------------------
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 
		
		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MAT' as varchar(20)) as [Period],'PN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(Mat00PN) as Mat00PN,sum(Mat12PN) as Mat12PN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(Mat00PN) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MTH' as varchar(20)) as [Period],'PN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(MTH00PN) as MTH00PN,sum(MTH12PN) as MTH12PN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(MTH00PN) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MQT' as varchar(20)) as [Period],'PN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(R3M00PN) as R3M00PN,sum(R3M12PN) as R3M12PN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(R3M00PN) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('YTD' as varchar(20)) as [Period],'PN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(YTD00PN) as YTD00PN,sum(YTD12PN) as YTD12PN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(YTD00PN) desc
		

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MAT' and MoneyType='PN'
				)
		begin
			print 'BMS COPR in Top 10 MAT PN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MAT','PN',1,1,CORP_cod,'',
				sum(Mat00PN) as Mat00PN,sum(Mat12PN) as Mat12PN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(Mat00PN) desc
		end

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MTH' and MoneyType='PN'
				)
		begin
			print 'BMS COPR in Top 10 MTH PN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MTH','PN',1,1,CORP_cod,'',
				sum(MTH00PN) as MTH00PN,sum(MTH12PN) as MTH12PN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(MTH00PN) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='YTD' and MoneyType='PN'
				)
		begin
			print 'BMS COPR in Top 10 YTD PN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'YTD','PN',1,1,CORP_cod,'',
				sum(YTD00PN) as YTD00PN,sum(YTD12PN) as YTD12PN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(YTD00PN) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MQT' and MoneyType='PN'
				)
		begin
			print 'BMS COPR in Top 10 MQT PN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MQT','PN',1,1,CORP_cod,'',
				sum(R3M00PN) as R3M00PN,sum(R3M12PN) as R3M12PN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(R3M00PN) desc
		end
		
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
BMS COPR in Top 10 MAT PN
BMS COPR in Top 10 MTH PN
BMS COPR in Top 10 YTD PN
BMS COPR in Top 10 MQT PN

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat00PN) desc ) as
Rank,CORP_cod,sum(Mat00PN) as Mat00PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='PN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat12PN) desc ) as
Rank,CORP_cod,sum(Mat12PN) as Mat12PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='PN'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M00PN) desc ) as
Rank,CORP_cod,sum(R3M00PN) as R3M00PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='PN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M12PN) desc ) as
Rank,CORP_cod,sum(R3M12PN) as R3M12PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='PN'
		
		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH00PN) desc ) as
Rank,CORP_cod,sum(MTH00PN) as MTH00PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='PN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH12PN) desc ) as
Rank,CORP_cod,sum(MTH12PN) as MTH12PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='PN'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD00PN) desc ) as
Rank,CORP_cod,sum(YTD00PN) as YTD00PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='PN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD12PN) desc ) as
Rank,CORP_cod,sum(YTD12PN) as YTD12PN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='PN'

		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(Mat00PN)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='PN' and Period='MAT'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(R3M00PN)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='PN' and Period='MQT'
		
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(MTH00PN)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='PN' and Period='MTH'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(YTD00PN)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='PN' and Period='YTD'
		
		
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)

		
		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MAT' as varchar(20)) as [Period],'US',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(Mat00US) as Mat00US,sum(Mat12US) as Mat12US,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(Mat00US) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MTH' as varchar(20)) as [Period],'US',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(MTH00US) as MTH00US,sum(MTH12US) as MTH12US,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(MTH00US) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MQT' as varchar(20)) as [Period],'US',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(R3M00US) as R3M00US,sum(R3M12US) as R3M12US,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(R3M00US) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('YTD' as varchar(20)) as [Period],'US',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(YTD00US) as YTD00US,sum(YTD12US) as YTD12US,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(YTD00US) desc
		

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MAT' and MoneyType='US'
				)
		begin
			print 'BMS COPR in Top 10 MAT US'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MAT','US',1,1,CORP_cod,'',
				sum(Mat00US) as Mat00US,sum(Mat12US) as Mat12US,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(Mat00US) desc
		end

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MTH' and MoneyType='US'
				)
		begin
			print 'BMS COPR in Top 10 MTH US'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MTH','US',1,1,CORP_cod,'',
				sum(MTH00US) as MTH00US,sum(MTH12US) as MTH12US,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(MTH00US) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='YTD' and MoneyType='US'
				)
		begin
			print 'BMS COPR in Top 10 YTD US'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'YTD','US',1,1,CORP_cod,'',
				sum(YTD00US) as YTD00US,sum(YTD12US) as YTD12US,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(YTD00US) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MQT' and MoneyType='US'
				)
		begin
			print 'BMS COPR in Top 10 MQT US'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MQT','US',1,1,CORP_cod,'',
				sum(R3M00US) as R3M00US,sum(R3M12US) as R3M12US,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(R3M00US) desc
		end
		
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat00US) desc ) as
Rank,CORP_cod,sum(Mat00US) as Mat00US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='US'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat12US) desc ) as
Rank,CORP_cod,sum(Mat12US) as Mat12US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='US'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M00US) desc ) as
Rank,CORP_cod,sum(R3M00US) as R3M00US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='US'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M12US) desc ) as
Rank,CORP_cod,sum(R3M12US) as R3M12US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='US'
		
		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH00US) desc ) as
Rank,CORP_cod,sum(MTH00US) as MTH00US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='US'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH12US) desc ) as
Rank,CORP_cod,sum(MTH12US) as MTH12US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='US'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD00US) desc ) as
Rank,CORP_cod,sum(YTD00US) as YTD00US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='US'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD12US) desc ) as
Rank,CORP_cod,sum(YTD12US) as YTD12US 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='US'

		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(Mat00US)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='US' and Period='MAT'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(R3M00US)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='US' and Period='MQT'
		
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(MTH00US)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='US' and Period='MTH'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(YTD00US)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='US' and Period='YTD'
		
		
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)

		
		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MAT' as varchar(20)) as [Period],'LC',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(Mat00LC) as Mat00LC,sum(Mat12LC) as Mat12LC,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(Mat00LC) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MTH' as varchar(20)) as [Period],'LC',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(MTH00LC) as MTH00LC,sum(MTH12LC) as MTH12LC,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(MTH00LC) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MQT' as varchar(20)) as [Period],'LC',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(R3M00LC) as R3M00LC,sum(R3M12LC) as R3M12LC,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(R3M00LC) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('YTD' as varchar(20)) as [Period],'LC',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(YTD00LC) as YTD00LC,sum(YTD12LC) as YTD12LC,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(YTD00LC) desc
		

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MAT' and MoneyType='LC'
				)
		begin
			print 'BMS COPR in Top 10 MAT LC'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MAT','LC',1,1,CORP_cod,'',
				sum(Mat00LC) as Mat00LC,sum(Mat12LC) as Mat12LC,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(Mat00LC) desc
		end

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MTH' and MoneyType='LC'
				)
		begin
			print 'BMS COPR in Top 10 MTH LC'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MTH','LC',1,1,CORP_cod,'',
				sum(MTH00LC) as MTH00LC,sum(MTH12LC) as MTH12LC,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(MTH00LC) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='YTD' and MoneyType='LC'
				)
		begin
			print 'BMS COPR in Top 10 YTD LC'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'YTD','LC',1,1,CORP_cod,'',
				sum(YTD00LC) as YTD00LC,sum(YTD12LC) as YTD12LC,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(YTD00LC) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MQT' and MoneyType='LC'
				)
		begin
			print 'BMS COPR in Top 10 MQT LC'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MQT','LC',1,1,CORP_cod,'',
				sum(R3M00LC) as R3M00LC,sum(R3M12LC) as R3M12LC,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(R3M00LC) desc
		end
		
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat00LC) desc ) as
Rank,CORP_cod,sum(Mat00LC) as Mat00LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='LC'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat12LC) desc ) as
Rank,CORP_cod,sum(Mat12LC) as Mat12LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='LC'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M00LC) desc ) as
Rank,CORP_cod,sum(R3M00LC) as R3M00LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='LC'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M12LC) desc ) as
Rank,CORP_cod,sum(R3M12LC) as R3M12LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='LC'
		
		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH00LC) desc ) as
Rank,CORP_cod,sum(MTH00LC) as MTH00LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='LC'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH12LC) desc ) as
Rank,CORP_cod,sum(MTH12LC) as MTH12LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='LC'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD00LC) desc ) as
Rank,CORP_cod,sum(YTD00LC) as YTD00LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='LC'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD12LC) desc ) as
Rank,CORP_cod,sum(YTD12LC) as YTD12LC 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='LC'

		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(Mat00LC)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='LC' and Period='MAT'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(R3M00LC)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='LC' and Period='MQT'
		
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(MTH00LC)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='LC' and Period='MTH'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(YTD00LC)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='LC' and Period='YTD'
		
		
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)

		
		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MAT' as varchar(20)) as [Period],'UN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(Mat00UN) as Mat00UN,sum(Mat12UN) as Mat12UN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(Mat00UN) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MTH' as varchar(20)) as [Period],'UN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(MTH00UN) as MTH00UN,sum(MTH12UN) as MTH12UN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(MTH00UN) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('MQT' as varchar(20)) as [Period],'UN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(R3M00UN) as R3M00UN,sum(R3M12UN) as R3M12UN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(R3M00UN) desc

		insert into OutputKeyMNCsPerformance 
		select top 10 cast('YTD' as varchar(20)) as [Period],'UN',1 as CurrRank,1 as
PrevRank,CORP_cod,'',
			sum(YTD00UN) as YTD00UN,sum(YTD12UN) as YTD12UN,0
		from dbo.MTHCHPA_PKAU A 
		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod and
B.MNFL_COD='I')
		group by CORP_cod
		order by sum(YTD00UN) desc
		

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MAT' and MoneyType='UN'
				)
		begin
			print 'BMS COPR in Top 10 MAT UN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MAT','UN',1,1,CORP_cod,'',
				sum(Mat00UN) as Mat00UN,sum(Mat12UN) as Mat12UN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(Mat00UN) desc
		end

		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MTH' and MoneyType='UN'
				)
		begin
			print 'BMS COPR in Top 10 MTH UN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MTH','UN',1,1,CORP_cod,'',
				sum(MTH00UN) as MTH00UN,sum(MTH12UN) as MTH12UN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(MTH00UN) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='YTD' and MoneyType='UN'
				)
		begin
			print 'BMS COPR in Top 10 YTD UN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'YTD','UN',1,1,CORP_cod,'',
				sum(YTD00UN) as YTD00UN,sum(YTD12UN) as YTD12UN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(YTD00UN) desc
		end
		
		if exists(
				select * from OutputKeyMNCsPerformance 
				where CORP_Cod =   (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			and Period='MQT' and MoneyType='UN'
				)
		begin
			print 'BMS COPR in Top 10 MQT UN'
		end
		else
		begin
			insert into OutputKeyMNCsPerformance
			select 'MQT','UN',1,1,CORP_cod,'',
				sum(R3M00UN) as R3M00UN,sum(R3M12UN) as R3M12UN,0
			from dbo.MTHCHPA_PKAU A 
			where CORP_Cod =  (select Corporation_ID from Dim_Manufacturer where
Manufacturer_Abbr like '%BSG%')
			group by CORP_cod
			order by sum(R3M00UN) desc
		end
		
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(1 row affected)
BMS COPR in Top 10 MTH UN
(1 row affected)
BMS COPR in Top 10 MQT UN

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat00UN) desc ) as
Rank,CORP_cod,sum(Mat00UN) as Mat00UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='UN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(Mat12UN) desc ) as
Rank,CORP_cod,sum(Mat12UN) as Mat12UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MAT' and MoneyType='UN'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M00UN) desc ) as
Rank,CORP_cod,sum(R3M00UN) as R3M00UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='UN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(R3M12UN) desc ) as
Rank,CORP_cod,sum(R3M12UN) as R3M12UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MQT' and MoneyType='UN'
		
		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH00UN) desc ) as
Rank,CORP_cod,sum(MTH00UN) as MTH00UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='UN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(MTH12UN) desc ) as
Rank,CORP_cod,sum(MTH12UN) as MTH12UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='MTH' and MoneyType='UN'

		update OutputKeyMNCsPerformance
		set CurrRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD00UN) desc ) as
Rank,CORP_cod,sum(YTD00UN) as YTD00UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='UN'

		update OutputKeyMNCsPerformance
		set PrevRank=B.Rank 
		from OutputKeyMNCsPerformance A 
		inner join (
			select RANK ( )OVER (order by sum(YTD12UN) desc ) as
Rank,CORP_cod,sum(YTD12UN) as YTD12UN 
			from dbo.MTHCHPA_PKAU A where exists(select * from MTHCHPA_PKAU B  
				where A.CORP_Cod=B.CORP_Cod and B.MNFL_COD='I')
			group by CORP_cod) B
		on A.CORP_cod=B.CORP_cod and A.[Period]='YTD' and MoneyType='UN'

		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(Mat00UN)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='UN' and Period='MAT'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(R3M00UN)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='UN' and Period='MQT'
		
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(MTH00UN)  as Total 
				from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='UN' and Period='MTH'
	    
		update OutputKeyMNCsPerformance
		set Total=B.Total 
		from OutputKeyMNCsPerformance A,
			(	select sum(YTD00UN)  as Total from  dbo.MTHCHPA_PKAU A 
		   		where exists(select * from MTHCHPA_PKAU B  where A.CORP_Cod=B.CORP_Cod
and B.MNFL_COD='I')
			) B
		where A.MoneyType='UN' and Period='YTD'
		
		
(11 rows affected)
(11 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(10 rows affected)
(10 rows affected)
(11 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> (170 rows affected)
(170 rows affected)
(170 rows affected)
1> 2> 3> 4> 5> 6> 7> (170 rows affected)
1> 2> 3> 4> 5> 6> 1> 2> 3> 1> 2> 3> (170 rows affected)
1> 2> 3> 4> 5> 6> (42 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> (10 rows affected)
BMS COPR in Top 10 MAT PN
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(1 row affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(10 rows affected)
(1 row affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(10 rows affected)
(1 row affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (43 rows affected)
(43 rows affected)
(43 rows affected)
1> 2> 3> 4> 5> (43 rows affected)
1> 2> 3> 1> 2> 3> (43 rows affected)
1> 2> 3> 4> (7 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (1 row affected)

------------------------------------------------------------------------------
------------------------------
5.                                   Slide 5
------------------------------------------------------------------------------
------------------------------
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> PN
(10 rows affected)
(1 row affected)
(10 rows affected)
(1 row affected)
(10 rows affected)
(1 row affected)
(10 rows affected)
(1 row affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(8 rows affected)
(8 rows affected)
(44 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
US
(10 rows affected)
Baraclude COPR in Top 10 MAT US
(10 rows affected)
Baraclude COPR in Top 10 MQT US
(10 rows affected)
Baraclude COPR in Top 10 MTH US
(10 rows affected)
Baraclude COPR in Top 10 YTD US
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(80 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
LC
(10 rows affected)
Baraclude COPR in Top 10 MAT LC
(10 rows affected)
Baraclude COPR in Top 10 MQT LC
(10 rows affected)
Baraclude COPR in Top 10 MTH LC
(10 rows affected)
Baraclude COPR in Top 10 YTD LC
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(9 rows affected)
(116 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
(10 rows affected)
UN
(10 rows affected)
(1 row affected)
(10 rows affected)
(1 row affected)
(10 rows affected)
(1 row affected)
(10 rows affected)
(1 row affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(160 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
(11 rows affected)
1> 2> 3> 1> 2> 3> (168 rows affected)
1> 2> 3> (168 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (168 rows affected)
1> 2> 3> 4> 5> 6> (168 rows affected)
1> 2> 1> 2> 3> (168 rows affected)
1> 2> 3> 4> 5> 6> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> 261> 262> 263> 264> 265> 266> 267> 268> 269> 270> 271> 272> 273> 274> 275> 276> 277> 278> 279> 280> 281> 282> 283> 284> 285> 286> 287> 288> 289> 290> 291> 292> 293> 294> 295> 296> 297> 298> 299> 300> 301> 302> 303> 304> 305> 306> 307> 308> 309> 310> 311> 312> 313> 314> 315> 316> 317> 318> 319> 320> 321> 322> 323> 324> 325> 326> 327> 328> 329> 330> 331> 332> 333> 334> 335> 336> 337> 338> 339> 340> 341> 342> 343> 344> 345> 346> 347> 348> 349> 350> 351> 352> 353> 354> 355> 356> 357> 358> 359> 360> 361> 362> 363> 364> 365> 366> 367> 368> 369> 370> 371> 372> 373> 374> 375> 376> 377> 378> 379> 380> 381> 382> 383> 384> 385> 386> 387> 388> 389> 390> 391> 392> 393> 394> 395> 396> 397> 398> 399> 400> 401> 402> 403> 404> 405> 406> 407> 408> 409> 410> 411> 412> 413> 414> 415> 416> 417> 418> 419> 420> 421> 422> 423> 424> 425> 426> 427> 428> 429> 430> 431> 432> 433> 434> 435> 436> 437> 438> 439> 440> 441> 442> 443> 444> 445> 446> 447> 448> 449> 450> 451> 452> 453> 454> 455> 456> 457> 458> 459> 460> 461> 462> 463> 464> 465> 466> 467> 468> 469> 470> 471> 472> 473> 474> 475> 476> 477> 478> 479> 480> 481> 482> 483> 484> 485> 486> 487> 488> 489> 490> 491> 492> 493> 494> 495> 496> 497> 498> 499> 500> 501> 502> 503> 504> 505> 506> 507> 508> 509> 510> 511> 512> 513> 514> 515> 516> 517> 518> 519> 520> 521> 522> 523> 524> 525> 526> 527> 528> 529> 530> 531> 532> 533> 534> 535> 536> 537> 538> 539> 540> 541> 542> 543> 544> 545> 546> 547> 548> 549> 550> 551> 552> 553> 554> 555> 556> 557> 558> 559> 560> 561> 562> 563> 564> 565> 566> 567> 568> 569> 570> 571> 572> 573> 574> 575> 576> 577> 578> 579> 580> 581> 582> 583> 584> 585> 586> 587> 588> 589> 590> 591> 592> 593> 594> 595> 596> 597> 598> 599> 600> 601> 602> 603> 604> 605> 606> 607> 608> 609> 610> 611> 612> 613> 614> 615> 616> 617> 618> 619> 620> 621> 622> 623> 624> 625> 626> 627> 628> 629> 630> 631> 632> 633> 634> 635> 636> 637> 638> 639> 640> 641> 642> 643> 644> 645> (1 row affected)

------------------------------------------------------------------------------
------------------------------
9.                                   Slide 10 : inHKAPI_New
------------------------------------------------------------------------------
------------------------------
1> 2> (845 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> (845 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (10 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> BMS COPR in Top 10 YTD
1> 2> 3> 4> 5> 6> 7> 8> 9> (10 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> (10 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> BMS COPR in Top 10 LastYear
1> 2> 3> 4> 5> 6> (10 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (20 rows affected)
1> 2> 3> 4> 5> 6> 7> (20 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (20 rows affected)
(20 rows affected)
(20 rows affected)
1> 2> 3> 4> 5> (20 rows affected)
1> 2> 1> 2> 3> (20 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> (20 rows affected)
1> 2> 3> 4> (28 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 
------------------------------------------------------------------------------
------------------------------
10.                                   Slide 11 :
OutputKeyMNCsProdPerformance_HKAPI
------------------------------------------------------------------------------
------------------------------
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 1> 2> 3> 4> 5> 6> 7> 8> 9> (10 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> BARACLUDE Prod in Top 10 YTD
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> (10 rows affected)
(10 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> BARACLUDE Prod in Top 10 LastYear
1> 2> 3> 4> 5> 6> 7> 8> 9> (10 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (20 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (20 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> (20 rows affected)
(20 rows affected)
(20 rows affected)
1> 2> 3> (20 rows affected)
1> 2> 1> 2> 3> (20 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> (20 rows affected)
1> 2> 3> 4> (8 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> (1 row affected)

------------------------------------------------------------------------------
------------------------------
11.                                   Slide 12 :
OutputProdSalesPerformanceInChina
------------------------------------------------------------------------------
------------------------------
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> PN

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','PN',B.mkt,a.prod_cod,''
			,sum(mat00PN),sum(mat12PN),sum(mat24PN)
			,sum(mat36PN) ,sum(mat48PN)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','PN',B.mkt,B.mkt,''
			,sum(mat00PN),sum(mat12PN),sum(mat24PN)
			,sum(mat36PN) ,sum(mat48PN)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','PN',B.mkt,a.prod_cod,''
			,sum(R3M00PN),sum(R3M12PN),sum(R3M24PN)
			,sum(R3M36PN) ,sum(R3M48PN)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','PN',B.mkt,B.mkt,''
			,sum(R3M00PN),sum(R3M12PN),sum(R3M24PN)
			,sum(R3M36PN) ,sum(R3M48PN)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','PN',B.mkt,a.prod_cod,''
			,sum(YTD00PN),sum(YTD12PN) ,sum(YTD24PN)
			,sum(YTD36PN) ,sum(YTD48PN)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100'and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','PN',B.mkt,B.mkt,''
			,sum(YTD00PN),sum(YTD12PN) ,sum(YTD24PN)
			,sum(YTD36PN) ,sum(YTD48PN)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
		
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','PN',B.mkt,a.prod_cod,''
			,sum(MTH00PN)
			,sum(MTH01PN)
			,sum(MTH02PN)
			,sum(MTH03PN)
			,sum(MTH04PN)
			,sum(MTH05PN)
			,sum(MTH06PN)
			,sum(MTH07PN)
			,sum(MTH08PN)
			,sum(MTH09PN)
			,sum(MTH10PN)
			,sum(MTH11PN)
			
			,sum(MTH12PN)		
			,sum(MTH13PN)
			,sum(MTH14PN)
			,sum(MTH15PN)
			,sum(MTH16PN)
			,sum(MTH17PN)
			,sum(MTH18PN)
			,sum(MTH19PN)
			,sum(MTH20PN)
			,sum(MTH21PN)
			,sum(MTH22PN)
			,sum(MTH23PN)		
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%' 
		) B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','PN',B.mkt,B.mkt,''
			,sum(MTH00PN)
			,sum(MTH01PN)
			,sum(MTH02PN)
			,sum(MTH03PN)
			,sum(MTH04PN)
			,sum(MTH05PN)
			,sum(MTH06PN)
			,sum(MTH07PN)
			,sum(MTH08PN)
			,sum(MTH09PN)
			,sum(MTH10PN)
			,sum(MTH11PN)
			
			,sum(MTH12PN)		
			,sum(MTH13PN)
			,sum(MTH14PN)
			,sum(MTH15PN)
			,sum(MTH16PN)
			,sum(MTH17PN)
			,sum(MTH18PN)
			,sum(MTH19PN)
			,sum(MTH20PN)
			,sum(MTH21PN)
			,sum(MTH22PN)
			,sum(MTH23PN)			
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
(6 rows affected)
(3 rows affected)
US

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','US',B.mkt,a.prod_cod,''
			,sum(mat00US),sum(mat12US),sum(mat24US)
			,sum(mat36US) ,sum(mat48US)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','US',B.mkt,B.mkt,''
			,sum(mat00US),sum(mat12US),sum(mat24US)
			,sum(mat36US) ,sum(mat48US)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','US',B.mkt,a.prod_cod,''
			,sum(R3M00US),sum(R3M12US),sum(R3M24US)
			,sum(R3M36US) ,sum(R3M48US)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','US',B.mkt,B.mkt,''
			,sum(R3M00US),sum(R3M12US),sum(R3M24US)
			,sum(R3M36US) ,sum(R3M48US)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','US',B.mkt,a.prod_cod,''
			,sum(YTD00US),sum(YTD12US) ,sum(YTD24US)
			,sum(YTD36US) ,sum(YTD48US)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100'and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','US',B.mkt,B.mkt,''
			,sum(YTD00US),sum(YTD12US) ,sum(YTD24US)
			,sum(YTD36US) ,sum(YTD48US)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
		
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','US',B.mkt,a.prod_cod,''
			,sum(MTH00US)
			,sum(MTH01US)
			,sum(MTH02US)
			,sum(MTH03US)
			,sum(MTH04US)
			,sum(MTH05US)
			,sum(MTH06US)
			,sum(MTH07US)
			,sum(MTH08US)
			,sum(MTH09US)
			,sum(MTH10US)
			,sum(MTH11US)
			
			,sum(MTH12US)		
			,sum(MTH13US)
			,sum(MTH14US)
			,sum(MTH15US)
			,sum(MTH16US)
			,sum(MTH17US)
			,sum(MTH18US)
			,sum(MTH19US)
			,sum(MTH20US)
			,sum(MTH21US)
			,sum(MTH22US)
			,sum(MTH23US)		
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%' 
		) B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','US',B.mkt,B.mkt,''
			,sum(MTH00US)
			,sum(MTH01US)
			,sum(MTH02US)
			,sum(MTH03US)
			,sum(MTH04US)
			,sum(MTH05US)
			,sum(MTH06US)
			,sum(MTH07US)
			,sum(MTH08US)
			,sum(MTH09US)
			,sum(MTH10US)
			,sum(MTH11US)
			
			,sum(MTH12US)		
			,sum(MTH13US)
			,sum(MTH14US)
			,sum(MTH15US)
			,sum(MTH16US)
			,sum(MTH17US)
			,sum(MTH18US)
			,sum(MTH19US)
			,sum(MTH20US)
			,sum(MTH21US)
			,sum(MTH22US)
			,sum(MTH23US)			
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
(6 rows affected)
(3 rows affected)
LC

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','LC',B.mkt,a.prod_cod,''
			,sum(mat00LC),sum(mat12LC),sum(mat24LC)
			,sum(mat36LC) ,sum(mat48LC)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','LC',B.mkt,B.mkt,''
			,sum(mat00LC),sum(mat12LC),sum(mat24LC)
			,sum(mat36LC) ,sum(mat48LC)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','LC',B.mkt,a.prod_cod,''
			,sum(R3M00LC),sum(R3M12LC),sum(R3M24LC)
			,sum(R3M36LC) ,sum(R3M48LC)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','LC',B.mkt,B.mkt,''
			,sum(R3M00LC),sum(R3M12LC),sum(R3M24LC)
			,sum(R3M36LC) ,sum(R3M48LC)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','LC',B.mkt,a.prod_cod,''
			,sum(YTD00LC),sum(YTD12LC) ,sum(YTD24LC)
			,sum(YTD36LC) ,sum(YTD48LC)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100'and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','LC',B.mkt,B.mkt,''
			,sum(YTD00LC),sum(YTD12LC) ,sum(YTD24LC)
			,sum(YTD36LC) ,sum(YTD48LC)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
		
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','LC',B.mkt,a.prod_cod,''
			,sum(MTH00LC)
			,sum(MTH01LC)
			,sum(MTH02LC)
			,sum(MTH03LC)
			,sum(MTH04LC)
			,sum(MTH05LC)
			,sum(MTH06LC)
			,sum(MTH07LC)
			,sum(MTH08LC)
			,sum(MTH09LC)
			,sum(MTH10LC)
			,sum(MTH11LC)
			
			,sum(MTH12LC)		
			,sum(MTH13LC)
			,sum(MTH14LC)
			,sum(MTH15LC)
			,sum(MTH16LC)
			,sum(MTH17LC)
			,sum(MTH18LC)
			,sum(MTH19LC)
			,sum(MTH20LC)
			,sum(MTH21LC)
			,sum(MTH22LC)
			,sum(MTH23LC)		
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%' 
		) B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','LC',B.mkt,B.mkt,''
			,sum(MTH00LC)
			,sum(MTH01LC)
			,sum(MTH02LC)
			,sum(MTH03LC)
			,sum(MTH04LC)
			,sum(MTH05LC)
			,sum(MTH06LC)
			,sum(MTH07LC)
			,sum(MTH08LC)
			,sum(MTH09LC)
			,sum(MTH10LC)
			,sum(MTH11LC)
			
			,sum(MTH12LC)		
			,sum(MTH13LC)
			,sum(MTH14LC)
			,sum(MTH15LC)
			,sum(MTH16LC)
			,sum(MTH17LC)
			,sum(MTH18LC)
			,sum(MTH19LC)
			,sum(MTH20LC)
			,sum(MTH21LC)
			,sum(MTH22LC)
			,sum(MTH23LC)			
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
(6 rows affected)
(3 rows affected)
UN

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','UN',B.mkt,a.prod_cod,''
			,sum(mat00UN/(b.Rat)),sum(mat12UN/(b.Rat)),sum(mat24UN/(b.Rat))
			,sum(mat36UN/(b.Rat)) ,sum(mat48UN/(b.Rat))
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','UN',B.mkt,B.mkt,''
			,sum(mat00UN/(b.Rat)),sum(mat12UN/(b.Rat)),sum(mat24UN/(b.Rat))
			,sum(mat36UN/(b.Rat)) ,sum(mat48UN/(b.Rat))
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','UN',B.mkt,a.prod_cod,''
			,sum(R3M00UN/(b.Rat)),sum(R3M12UN/(b.Rat)),sum(R3M24UN/(b.Rat))
			,sum(R3M36UN/(b.Rat)) ,sum(R3M48UN/(b.Rat))
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','UN',B.mkt,B.mkt,''
			,sum(R3M00UN/(b.Rat)),sum(R3M12UN/(b.Rat)),sum(R3M24UN/(b.Rat))
			,sum(R3M36UN/(b.Rat)) ,sum(R3M48UN/(b.Rat))
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','UN',B.mkt,a.prod_cod,''
			,sum(YTD00UN/(b.Rat)),sum(YTD12UN/(b.Rat)) ,sum(YTD24UN/(b.Rat))
			,sum(YTD36UN/(b.Rat)) ,sum(YTD48UN/(b.Rat))
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100'and a.mkt not like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','UN',B.mkt,B.mkt,''
			,sum(YTD00UN/(b.Rat)),sum(YTD12UN/(b.Rat)) ,sum(YTD24UN/(b.Rat))
			,sum(YTD36UN/(b.Rat)) ,sum(YTD48UN/(b.Rat))
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
		
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
(6 rows affected)
(3 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','UN',B.mkt,a.prod_cod,''
			,sum(MTH00UN/(b.Rat))
			,sum(MTH01UN/(b.Rat))
			,sum(MTH02UN/(b.Rat))
			,sum(MTH03UN/(b.Rat))
			,sum(MTH04UN/(b.Rat))
			,sum(MTH05UN/(b.Rat))
			,sum(MTH06UN/(b.Rat))
			,sum(MTH07UN/(b.Rat))
			,sum(MTH08UN/(b.Rat))
			,sum(MTH09UN/(b.Rat))
			,sum(MTH10UN/(b.Rat))
			,sum(MTH11UN/(b.Rat))
			
			,sum(MTH12UN/(b.Rat))		
			,sum(MTH13UN/(b.Rat))
			,sum(MTH14UN/(b.Rat))
			,sum(MTH15UN/(b.Rat))
			,sum(MTH16UN/(b.Rat))
			,sum(MTH17UN/(b.Rat))
			,sum(MTH18UN/(b.Rat))
			,sum(MTH19UN/(b.Rat))
			,sum(MTH20UN/(b.Rat))
			,sum(MTH21UN/(b.Rat))
			,sum(MTH22UN/(b.Rat))
			,sum(MTH23UN/(b.Rat))		
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat 
			from tblMktDef_MRBIChina A 
			inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt not like 'eliquis%' 
		) B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','UN',B.mkt,B.mkt,''
			,sum(MTH00UN/(b.Rat))
			,sum(MTH01UN/(b.Rat))
			,sum(MTH02UN/(b.Rat))
			,sum(MTH03UN/(b.Rat))
			,sum(MTH04UN/(b.Rat))
			,sum(MTH05UN/(b.Rat))
			,sum(MTH06UN/(b.Rat))
			,sum(MTH07UN/(b.Rat))
			,sum(MTH08UN/(b.Rat))
			,sum(MTH09UN/(b.Rat))
			,sum(MTH10UN/(b.Rat))
			,sum(MTH11UN/(b.Rat))
			
			,sum(MTH12UN/(b.Rat))		
			,sum(MTH13UN/(b.Rat))
			,sum(MTH14UN/(b.Rat))
			,sum(MTH15UN/(b.Rat))
			,sum(MTH16UN/(b.Rat))
			,sum(MTH17UN/(b.Rat))
			,sum(MTH18UN/(b.Rat))
			,sum(MTH19UN/(b.Rat))
			,sum(MTH20UN/(b.Rat))
			,sum(MTH21UN/(b.Rat))
			,sum(MTH22UN/(b.Rat))
			,sum(MTH23UN/(b.Rat))			
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt
in('DPP4','NIAD','ARV','ONCFCS','HYP','CCB','Platinum') and Molecule='N' and
Class='N'and B.Active='Y'
		group by B.mkt
(6 rows affected)
(3 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> PN

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','PN',B.mkt,a.prod_cod,''
			,sum(mat00PN*b.Rat),sum(mat12PN*b.Rat),sum(mat24PN*b.Rat)
			,sum(mat36PN*b.Rat) ,sum(mat48PN*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','PN',B.mkt,B.mkt,''
			,sum(mat00PN*b.Rat),sum(mat12PN*b.Rat),sum(mat24PN*b.Rat)
			,sum(mat36PN*b.Rat) ,sum(mat48PN*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','PN',B.mkt,a.prod_cod,''
			,sum(R3M00PN*b.Rat),sum(R3M12PN*b.Rat),sum(R3M24PN*b.Rat)
			,sum(R3M36PN*b.Rat) ,sum(R3M48PN*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','PN',B.mkt,B.mkt,''
			,sum(R3M00PN*b.Rat),sum(R3M12PN*b.Rat),sum(R3M24PN*b.Rat)
			,sum(R3M36PN*b.Rat) ,sum(R3M48PN*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','PN',B.mkt,a.prod_cod,''
			,sum(YTD00PN*b.Rat),sum(YTD12PN*b.Rat) ,sum(YTD24PN*b.Rat)
			,sum(YTD36PN*b.Rat) ,sum(YTD48PN*b.Rat)
		from mthchpa_pkau A inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','PN',B.mkt,B.mkt,''
			,sum(YTD00PN*b.Rat),sum(YTD12PN*b.Rat) ,sum(YTD24PN*b.Rat)
			,sum(YTD36PN*b.Rat) ,sum(YTD48PN*b.Rat)
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','PN',B.mkt,a.prod_cod,'',sum(MTH00PN*b.Rat)
			,sum(MTH01PN*b.Rat)
			,sum(MTH02PN*b.Rat)
			,sum(MTH03PN*b.Rat)
			,sum(MTH04PN*b.Rat)
			,sum(MTH05PN*b.Rat)
			,sum(MTH06PN*b.Rat)
			,sum(MTH07PN*b.Rat)
			,sum(MTH08PN*b.Rat)
			,sum(MTH09PN*b.Rat)
			,sum(MTH10PN*b.Rat)
			,sum(MTH11PN*b.Rat)
			
			,sum(MTH12PN*b.Rat)		
			,sum(MTH13PN*b.Rat)
			,sum(MTH14PN*b.Rat)
			,sum(MTH15PN*b.Rat)
			,sum(MTH16PN*b.Rat)
			,sum(MTH17PN*b.Rat)
			,sum(MTH18PN*b.Rat)
			,sum(MTH19PN*b.Rat)
			,sum(MTH20PN*b.Rat)
			,sum(MTH21PN*b.Rat)
			,sum(MTH22PN*b.Rat)
			,sum(MTH23PN*b.Rat)			
		from mthchpa_pkau A inner join
		(select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
		on A.productname=B.Product
		where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','PN',B.mkt,B.mkt,'',sum(MTH00PN*b.Rat)
			,sum(MTH01PN*b.Rat)
			,sum(MTH02PN*b.Rat)
			,sum(MTH03PN*b.Rat)
			,sum(MTH04PN*b.Rat)
			,sum(MTH05PN*b.Rat)
			,sum(MTH06PN*b.Rat)
			,sum(MTH07PN*b.Rat)
			,sum(MTH08PN*b.Rat)
			,sum(MTH09PN*b.Rat)
			,sum(MTH10PN*b.Rat)
			,sum(MTH11PN*b.Rat)
			
			,sum(MTH12PN*b.Rat)		
			,sum(MTH13PN*b.Rat)
			,sum(MTH14PN*b.Rat)
			,sum(MTH15PN*b.Rat)
			,sum(MTH16PN*b.Rat)
			,sum(MTH17PN*b.Rat)
			,sum(MTH18PN*b.Rat)
			,sum(MTH19PN*b.Rat)
			,sum(MTH20PN*b.Rat)
			,sum(MTH21PN*b.Rat)
			,sum(MTH22PN*b.Rat)
			,sum(MTH23PN*b.Rat)			
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') 
			and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
US

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','US',B.mkt,a.prod_cod,''
			,sum(mat00US*b.Rat),sum(mat12US*b.Rat),sum(mat24US*b.Rat)
			,sum(mat36US*b.Rat) ,sum(mat48US*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','US',B.mkt,B.mkt,''
			,sum(mat00US*b.Rat),sum(mat12US*b.Rat),sum(mat24US*b.Rat)
			,sum(mat36US*b.Rat) ,sum(mat48US*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','US',B.mkt,a.prod_cod,''
			,sum(R3M00US*b.Rat),sum(R3M12US*b.Rat),sum(R3M24US*b.Rat)
			,sum(R3M36US*b.Rat) ,sum(R3M48US*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','US',B.mkt,B.mkt,''
			,sum(R3M00US*b.Rat),sum(R3M12US*b.Rat),sum(R3M24US*b.Rat)
			,sum(R3M36US*b.Rat) ,sum(R3M48US*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','US',B.mkt,a.prod_cod,''
			,sum(YTD00US*b.Rat),sum(YTD12US*b.Rat) ,sum(YTD24US*b.Rat)
			,sum(YTD36US*b.Rat) ,sum(YTD48US*b.Rat)
		from mthchpa_pkau A inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','US',B.mkt,B.mkt,''
			,sum(YTD00US*b.Rat),sum(YTD12US*b.Rat) ,sum(YTD24US*b.Rat)
			,sum(YTD36US*b.Rat) ,sum(YTD48US*b.Rat)
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','US',B.mkt,a.prod_cod,'',sum(MTH00US*b.Rat)
			,sum(MTH01US*b.Rat)
			,sum(MTH02US*b.Rat)
			,sum(MTH03US*b.Rat)
			,sum(MTH04US*b.Rat)
			,sum(MTH05US*b.Rat)
			,sum(MTH06US*b.Rat)
			,sum(MTH07US*b.Rat)
			,sum(MTH08US*b.Rat)
			,sum(MTH09US*b.Rat)
			,sum(MTH10US*b.Rat)
			,sum(MTH11US*b.Rat)
			
			,sum(MTH12US*b.Rat)		
			,sum(MTH13US*b.Rat)
			,sum(MTH14US*b.Rat)
			,sum(MTH15US*b.Rat)
			,sum(MTH16US*b.Rat)
			,sum(MTH17US*b.Rat)
			,sum(MTH18US*b.Rat)
			,sum(MTH19US*b.Rat)
			,sum(MTH20US*b.Rat)
			,sum(MTH21US*b.Rat)
			,sum(MTH22US*b.Rat)
			,sum(MTH23US*b.Rat)			
		from mthchpa_pkau A inner join
		(select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
		on A.productname=B.Product
		where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','US',B.mkt,B.mkt,'',sum(MTH00US*b.Rat)
			,sum(MTH01US*b.Rat)
			,sum(MTH02US*b.Rat)
			,sum(MTH03US*b.Rat)
			,sum(MTH04US*b.Rat)
			,sum(MTH05US*b.Rat)
			,sum(MTH06US*b.Rat)
			,sum(MTH07US*b.Rat)
			,sum(MTH08US*b.Rat)
			,sum(MTH09US*b.Rat)
			,sum(MTH10US*b.Rat)
			,sum(MTH11US*b.Rat)
			
			,sum(MTH12US*b.Rat)		
			,sum(MTH13US*b.Rat)
			,sum(MTH14US*b.Rat)
			,sum(MTH15US*b.Rat)
			,sum(MTH16US*b.Rat)
			,sum(MTH17US*b.Rat)
			,sum(MTH18US*b.Rat)
			,sum(MTH19US*b.Rat)
			,sum(MTH20US*b.Rat)
			,sum(MTH21US*b.Rat)
			,sum(MTH22US*b.Rat)
			,sum(MTH23US*b.Rat)			
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') 
			and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
LC

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','LC',B.mkt,a.prod_cod,''
			,sum(mat00LC*b.Rat),sum(mat12LC*b.Rat),sum(mat24LC*b.Rat)
			,sum(mat36LC*b.Rat) ,sum(mat48LC*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','LC',B.mkt,B.mkt,''
			,sum(mat00LC*b.Rat),sum(mat12LC*b.Rat),sum(mat24LC*b.Rat)
			,sum(mat36LC*b.Rat) ,sum(mat48LC*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','LC',B.mkt,a.prod_cod,''
			,sum(R3M00LC*b.Rat),sum(R3M12LC*b.Rat),sum(R3M24LC*b.Rat)
			,sum(R3M36LC*b.Rat) ,sum(R3M48LC*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','LC',B.mkt,B.mkt,''
			,sum(R3M00LC*b.Rat),sum(R3M12LC*b.Rat),sum(R3M24LC*b.Rat)
			,sum(R3M36LC*b.Rat) ,sum(R3M48LC*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','LC',B.mkt,a.prod_cod,''
			,sum(YTD00LC*b.Rat),sum(YTD12LC*b.Rat) ,sum(YTD24LC*b.Rat)
			,sum(YTD36LC*b.Rat) ,sum(YTD48LC*b.Rat)
		from mthchpa_pkau A inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','LC',B.mkt,B.mkt,''
			,sum(YTD00LC*b.Rat),sum(YTD12LC*b.Rat) ,sum(YTD24LC*b.Rat)
			,sum(YTD36LC*b.Rat) ,sum(YTD48LC*b.Rat)
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','LC',B.mkt,a.prod_cod,'',sum(MTH00LC*b.Rat)
			,sum(MTH01LC*b.Rat)
			,sum(MTH02LC*b.Rat)
			,sum(MTH03LC*b.Rat)
			,sum(MTH04LC*b.Rat)
			,sum(MTH05LC*b.Rat)
			,sum(MTH06LC*b.Rat)
			,sum(MTH07LC*b.Rat)
			,sum(MTH08LC*b.Rat)
			,sum(MTH09LC*b.Rat)
			,sum(MTH10LC*b.Rat)
			,sum(MTH11LC*b.Rat)
			
			,sum(MTH12LC*b.Rat)		
			,sum(MTH13LC*b.Rat)
			,sum(MTH14LC*b.Rat)
			,sum(MTH15LC*b.Rat)
			,sum(MTH16LC*b.Rat)
			,sum(MTH17LC*b.Rat)
			,sum(MTH18LC*b.Rat)
			,sum(MTH19LC*b.Rat)
			,sum(MTH20LC*b.Rat)
			,sum(MTH21LC*b.Rat)
			,sum(MTH22LC*b.Rat)
			,sum(MTH23LC*b.Rat)			
		from mthchpa_pkau A inner join
		(select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
		on A.productname=B.Product
		where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','LC',B.mkt,B.mkt,'',sum(MTH00LC*b.Rat)
			,sum(MTH01LC*b.Rat)
			,sum(MTH02LC*b.Rat)
			,sum(MTH03LC*b.Rat)
			,sum(MTH04LC*b.Rat)
			,sum(MTH05LC*b.Rat)
			,sum(MTH06LC*b.Rat)
			,sum(MTH07LC*b.Rat)
			,sum(MTH08LC*b.Rat)
			,sum(MTH09LC*b.Rat)
			,sum(MTH10LC*b.Rat)
			,sum(MTH11LC*b.Rat)
			
			,sum(MTH12LC*b.Rat)		
			,sum(MTH13LC*b.Rat)
			,sum(MTH14LC*b.Rat)
			,sum(MTH15LC*b.Rat)
			,sum(MTH16LC*b.Rat)
			,sum(MTH17LC*b.Rat)
			,sum(MTH18LC*b.Rat)
			,sum(MTH19LC*b.Rat)
			,sum(MTH20LC*b.Rat)
			,sum(MTH21LC*b.Rat)
			,sum(MTH22LC*b.Rat)
			,sum(MTH23LC*b.Rat)			
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') 
			and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
UN

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 1,'Product','MAT','UN',B.mkt,a.prod_cod,''
			,sum(mat00UN*b.Rat),sum(mat12UN*b.Rat),sum(mat24UN*b.Rat)
			,sum(mat36UN*b.Rat) ,sum(mat48UN*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48])
		select 3,'Market Size','MAT','UN',B.mkt,B.mkt,''
			,sum(mat00UN*b.Rat),sum(mat12UN*b.Rat),sum(mat24UN*b.Rat)
			,sum(mat36UN*b.Rat) ,sum(mat48UN*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 1,'Product','MQT','UN',B.mkt,a.prod_cod,''
			,sum(R3M00UN*b.Rat),sum(R3M12UN*b.Rat),sum(R3M24UN*b.Rat)
			,sum(R3M36UN*b.Rat) ,sum(R3M48UN*b.Rat)
		from mthchpa_pkau A 
		inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[MQT00],[MQT12],[MQT24],[MQ
T36],[MQT48])
		select 3,'Market Size','MQT','UN',B.mkt,B.mkt,''
			,sum(R3M00UN*b.Rat),sum(R3M12UN*b.Rat),sum(R3M24UN*b.Rat)
			,sum(R3M36UN*b.Rat) ,sum(R3M48UN*b.Rat)
		from mthchpa_pkau A 
		inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N' and B.Active='Y'
		group by B.mkt

		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 1,'Product','YTD','UN',B.mkt,a.prod_cod,''
			,sum(YTD00UN*b.Rat),sum(YTD12UN*b.Rat) ,sum(YTD24UN*b.Rat)
			,sum(YTD36UN*b.Rat) ,sum(YTD48UN*b.Rat)
		from mthchpa_pkau A inner join
		(	select distinct A.mkt,B.PRod_cod,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
			on A.productname=B.Product
			where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[YTD00],[YTD12],[YTD24],[YT
D36],[YTD48])
		select 3, 'Market Size','YTD','UN',B.mkt,B.mkt,''
			,sum(YTD00UN*b.Rat),sum(YTD12UN*b.Rat) ,sum(YTD24UN*b.Rat)
			,sum(YTD36UN*b.Rat) ,sum(YTD48UN*b.Rat)
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 1,'Product','MTH','UN',B.mkt,a.prod_cod,'',sum(MTH00UN*b.Rat)
			,sum(MTH01UN*b.Rat)
			,sum(MTH02UN*b.Rat)
			,sum(MTH03UN*b.Rat)
			,sum(MTH04UN*b.Rat)
			,sum(MTH05UN*b.Rat)
			,sum(MTH06UN*b.Rat)
			,sum(MTH07UN*b.Rat)
			,sum(MTH08UN*b.Rat)
			,sum(MTH09UN*b.Rat)
			,sum(MTH10UN*b.Rat)
			,sum(MTH11UN*b.Rat)
			
			,sum(MTH12UN*b.Rat)		
			,sum(MTH13UN*b.Rat)
			,sum(MTH14UN*b.Rat)
			,sum(MTH15UN*b.Rat)
			,sum(MTH16UN*b.Rat)
			,sum(MTH17UN*b.Rat)
			,sum(MTH18UN*b.Rat)
			,sum(MTH19UN*b.Rat)
			,sum(MTH20UN*b.Rat)
			,sum(MTH21UN*b.Rat)
			,sum(MTH22UN*b.Rat)
			,sum(MTH23UN*b.Rat)			
		from mthchpa_pkau A inner join
		(select distinct A.mkt,B.PRod_cod ,a.pack_cod,a.Rat from tblMktDef_MRBIChina
A inner join tblProddef B
		on A.productname=B.Product
		where A.prod='100' and a.mkt like 'eliquis%') B
on A.pack_cod=B.pack_cod
group by B.mkt,a.prod_cod


		insert into OutputProdSalesPerformanceInChina([TypeIdx],[Type]
,[Period],[MoneyType],Market,[Prod_cod],[Prod_des],[Mat00],[Mat12],[Mat24],[Ma
t36],[Mat48],
	   		[Mth06], [Mth07], [Mth08], [Mth09], [Mth10], [Mth11], [Mth12], [Mth13],
[Mth14], [Mth15], [Mth16], [Mth17], [Mth18], [Mth19], [Mth20], [Mth21],
[Mth22], [Mth23], [Mth24])
		select 3,'Market Size','MTH','UN',B.mkt,B.mkt,'',sum(MTH00UN*b.Rat)
			,sum(MTH01UN*b.Rat)
			,sum(MTH02UN*b.Rat)
			,sum(MTH03UN*b.Rat)
			,sum(MTH04UN*b.Rat)
			,sum(MTH05UN*b.Rat)
			,sum(MTH06UN*b.Rat)
			,sum(MTH07UN*b.Rat)
			,sum(MTH08UN*b.Rat)
			,sum(MTH09UN*b.Rat)
			,sum(MTH10UN*b.Rat)
			,sum(MTH11UN*b.Rat)
			
			,sum(MTH12UN*b.Rat)		
			,sum(MTH13UN*b.Rat)
			,sum(MTH14UN*b.Rat)
			,sum(MTH15UN*b.Rat)
			,sum(MTH16UN*b.Rat)
			,sum(MTH17UN*b.Rat)
			,sum(MTH18UN*b.Rat)
			,sum(MTH19UN*b.Rat)
			,sum(MTH20UN*b.Rat)
			,sum(MTH21UN*b.Rat)
			,sum(MTH22UN*b.Rat)
			,sum(MTH23UN*b.Rat)			
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ELIQUIS VTEp','ELIQUIS VTEt','ELIQUIS
NOAC') 
			and Molecule='N' and Class='N'and B.Active='Y'
		group by B.mkt
(0 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> (96 rows affected)
(48 rows affected)
1> 2> (16 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> (128 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> (36 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> (60 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> (20 rows affected)
1> 2> 3> 4> 5> (80 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 1> 2> 3> 1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 1> 2> 3> (0 rows affected)
(0 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> (1 row affected)
PN
insert into TempCHPAPreReportsByMNC 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
			A.MNFL_COD,
			'PN' as Moneytype, sum(isnull(R3M00PN,0)) as R3M00,sum(isnull(R3M01PN,0))
as R3M01,sum(isnull(R3M02PN,0)) as R3M02,sum(isnull(R3M03PN,0)) as
R3M03,sum(isnull(R3M04PN,0)) as R3M04,sum(isnull(R3M05PN,0)) as
R3M05,sum(isnull(R3M06PN,0)) as R3M06,sum(isnull(R3M07PN,0)) as
R3M07,sum(isnull(R3M08PN,0)) as R3M08,sum(isnull(R3M09PN,0)) as
R3M09,sum(isnull(R3M10PN,0)) as R3M10,sum(isnull(R3M11PN,0)) as
R3M11,sum(isnull(R3M12PN,0)) as R3M12,sum(isnull(R3M13PN,0)) as
R3M13,sum(isnull(R3M14PN,0)) as R3M14,sum(isnull(R3M15PN,0)) as
R3M15,sum(isnull(R3M16PN,0)) as R3M16,sum(isnull(R3M17PN,0)) as
R3M17,sum(isnull(R3M18PN,0)) as R3M18,sum(isnull(R3M19PN,0)) as
R3M19,sum(isnull(R3M20PN,0)) as R3M20,sum(isnull(R3M21PN,0)) as
R3M21,sum(isnull(R3M22PN,0)) as R3M22,sum(isnull(R3M23PN,0)) as
R3M23,sum(isnull(R3M24PN,0)) as R3M24,sum(isnull(R3M25PN,0)) as
R3M25,sum(isnull(R3M26PN,0)) as R3M26,sum(isnull(R3M27PN,0)) as
R3M27,sum(isnull(R3M28PN,0)) as R3M28,sum(isnull(R3M29PN,0)) as
R3M29,sum(isnull(R3M30PN,0)) as R3M30,sum(isnull(R3M31PN,0)) as
R3M31,sum(isnull(R3M32PN,0)) as R3M32,sum(isnull(R3M33PN,0)) as
R3M33,sum(isnull(R3M34PN,0)) as R3M34,sum(isnull(R3M35PN,0)) as
R3M35,sum(isnull(R3M36PN,0)) as R3M36,sum(isnull(R3M37PN,0)) as
R3M37,sum(isnull(R3M38PN,0)) as R3M38,sum(isnull(R3M39PN,0)) as
R3M39,sum(isnull(R3M40PN,0)) as R3M40,sum(isnull(R3M41PN,0)) as
R3M41,sum(isnull(R3M42PN,0)) as R3M42,sum(isnull(R3M43PN,0)) as
R3M43,sum(isnull(R3M44PN,0)) as R3M44,sum(isnull(R3M45PN,0)) as
R3M45,sum(isnull(R3M46PN,0)) as R3M46,sum(isnull(R3M47PN,0)) as
R3M47,sum(isnull(R3M48PN,0)) as R3M48, sum(isnull(MTH00PN,0)) as
MTH00,sum(isnull(MTH01PN,0)) as MTH01,sum(isnull(MTH02PN,0)) as
MTH02,sum(isnull(MTH03PN,0)) as MTH03,sum(isnull(MTH04PN,0)) as
MTH04,sum(isnull(MTH05PN,0)) as MTH05,sum(isnull(MTH06PN,0)) as
MTH06,sum(isnull(MTH07PN,0)) as MTH07,sum(isnull(MTH08PN,0)) as
MTH08,sum(isnull(MTH09PN,0)) as MTH09,sum(isnull(MTH10PN,0)) as
MTH10,sum(isnull(MTH11PN,0)) as MTH11,sum(isnull(MTH12PN,0)) as
MTH12,sum(isnull(MTH13PN,0)) as MTH13,sum(isnull(MTH14PN,0)) as
MTH14,sum(isnull(MTH15PN,0)) as MTH15,sum(isnull(MTH16PN,0)) as
MTH16,sum(isnull(MTH17PN,0)) as MTH17,sum(isnull(MTH18PN,0)) as
MTH18,sum(isnull(MTH19PN,0)) as MTH19,sum(isnull(MTH20PN,0)) as
MTH20,sum(isnull(MTH21PN,0)) as MTH21,sum(isnull(MTH22PN,0)) as
MTH22,sum(isnull(MTH23PN,0)) as MTH23,sum(isnull(MTH24PN,0)) as
MTH24,sum(isnull(MTH25PN,0)) as MTH25,sum(isnull(MTH26PN,0)) as
MTH26,sum(isnull(MTH27PN,0)) as MTH27,sum(isnull(MTH28PN,0)) as
MTH28,sum(isnull(MTH29PN,0)) as MTH29,sum(isnull(MTH30PN,0)) as
MTH30,sum(isnull(MTH31PN,0)) as MTH31,sum(isnull(MTH32PN,0)) as
MTH32,sum(isnull(MTH33PN,0)) as MTH33,sum(isnull(MTH34PN,0)) as
MTH34,sum(isnull(MTH35PN,0)) as MTH35,sum(isnull(MTH36PN,0)) as
MTH36,sum(isnull(MTH37PN,0)) as MTH37,sum(isnull(MTH38PN,0)) as
MTH38,sum(isnull(MTH39PN,0)) as MTH39,sum(isnull(MTH40PN,0)) as
MTH40,sum(isnull(MTH41PN,0)) as MTH41,sum(isnull(MTH42PN,0)) as
MTH42,sum(isnull(MTH43PN,0)) as MTH43,sum(isnull(MTH44PN,0)) as
MTH44,sum(isnull(MTH45PN,0)) as MTH45,sum(isnull(MTH46PN,0)) as
MTH46,sum(isnull(MTH47PN,0)) as MTH47,sum(isnull(MTH48PN,0)) as MTH48,
sum(isnull(MAT00PN,0)) as MAT00,sum(isnull(MAT01PN,0)) as
MAT01,sum(isnull(MAT02PN,0)) as MAT02,sum(isnull(MAT03PN,0)) as
MAT03,sum(isnull(MAT04PN,0)) as MAT04,sum(isnull(MAT05PN,0)) as
MAT05,sum(isnull(MAT06PN,0)) as MAT06,sum(isnull(MAT07PN,0)) as
MAT07,sum(isnull(MAT08PN,0)) as MAT08,sum(isnull(MAT09PN,0)) as
MAT09,sum(isnull(MAT10PN,0)) as MAT10,sum(isnull(MAT11PN,0)) as
MAT11,sum(isnull(MAT12PN,0)) as MAT12,sum(isnull(MAT13PN,0)) as
MAT13,sum(isnull(MAT14PN,0)) as MAT14,sum(isnull(MAT15PN,0)) as
MAT15,sum(isnull(MAT16PN,0)) as MAT16,sum(isnull(MAT17PN,0)) as
MAT17,sum(isnull(MAT18PN,0)) as MAT18,sum(isnull(MAT19PN,0)) as
MAT19,sum(isnull(MAT20PN,0)) as MAT20,sum(isnull(MAT21PN,0)) as
MAT21,sum(isnull(MAT22PN,0)) as MAT22,sum(isnull(MAT23PN,0)) as
MAT23,sum(isnull(MAT24PN,0)) as MAT24,sum(isnull(MAT25PN,0)) as
MAT25,sum(isnull(MAT26PN,0)) as MAT26,sum(isnull(MAT27PN,0)) as
MAT27,sum(isnull(MAT28PN,0)) as MAT28,sum(isnull(MAT29PN,0)) as
MAT29,sum(isnull(MAT30PN,0)) as MAT30,sum(isnull(MAT31PN,0)) as
MAT31,sum(isnull(MAT32PN,0)) as MAT32,sum(isnull(MAT33PN,0)) as
MAT33,sum(isnull(MAT34PN,0)) as MAT34,sum(isnull(MAT35PN,0)) as
MAT35,sum(isnull(MAT36PN,0)) as MAT36,sum(isnull(MAT37PN,0)) as
MAT37,sum(isnull(MAT38PN,0)) as MAT38,sum(isnull(MAT39PN,0)) as
MAT39,sum(isnull(MAT40PN,0)) as MAT40,sum(isnull(MAT41PN,0)) as
MAT41,sum(isnull(MAT42PN,0)) as MAT42,sum(isnull(MAT43PN,0)) as
MAT43,sum(isnull(MAT44PN,0)) as MAT44,sum(isnull(MAT45PN,0)) as
MAT45,sum(isnull(MAT46PN,0)) as MAT46,sum(isnull(MAT47PN,0)) as
MAT47,sum(isnull(MAT48PN,0)) as MAT48, sum(isnull(YTD00PN,0)) as
YTD00,sum(isnull(YTD01PN,0)) as YTD01,sum(isnull(YTD02PN,0)) as
YTD02,sum(isnull(YTD03PN,0)) as YTD03,sum(isnull(YTD04PN,0)) as
YTD04,sum(isnull(YTD05PN,0)) as YTD05,sum(isnull(YTD06PN,0)) as
YTD06,sum(isnull(YTD07PN,0)) as YTD07,sum(isnull(YTD08PN,0)) as
YTD08,sum(isnull(YTD09PN,0)) as YTD09,sum(isnull(YTD10PN,0)) as
YTD10,sum(isnull(YTD11PN,0)) as YTD11,sum(isnull(YTD12PN,0)) as
YTD12,sum(isnull(YTD13PN,0)) as YTD13,sum(isnull(YTD14PN,0)) as
YTD14,sum(isnull(YTD15PN,0)) as YTD15,sum(isnull(YTD16PN,0)) as
YTD16,sum(isnull(YTD17PN,0)) as YTD17,sum(isnull(YTD18PN,0)) as
YTD18,sum(isnull(YTD19PN,0)) as YTD19,sum(isnull(YTD20PN,0)) as
YTD20,sum(isnull(YTD21PN,0)) as YTD21,sum(isnull(YTD22PN,0)) as
YTD22,sum(isnull(YTD23PN,0)) as YTD23,sum(isnull(YTD24PN,0)) as
YTD24,sum(isnull(YTD25PN,0)) as YTD25,sum(isnull(YTD26PN,0)) as
YTD26,sum(isnull(YTD27PN,0)) as YTD27,sum(isnull(YTD28PN,0)) as
YTD28,sum(isnull(YTD29PN,0)) as YTD29,sum(isnull(YTD30PN,0)) as
YTD30,sum(isnull(YTD31PN,0)) as YTD31,sum(isnull(YTD32PN,0)) as
YTD32,sum(isnull(YTD33PN,0)) as YTD33,sum(isnull(YTD34PN,0)) as
YTD34,sum(isnull(YTD35PN,0)) as YTD35,sum(isnull(YTD36PN,0)) as
YTD36,sum(isnull(YTD37PN,0)) as YTD37,sum(isnull(YTD38PN,0)) as
YTD38,sum(isnull(YTD39PN,0)) as YTD39,sum(isnull(YTD40PN,0)) as
YTD40,sum(isnull(YTD41PN,0)) as YTD41,sum(isnull(YTD42PN,0)) as
YTD42,sum(isnull(YTD43PN,0)) as YTD43,sum(isnull(YTD44PN,0)) as
YTD44,sum(isnull(YTD45PN,0)) as YTD45,sum(isnull(YTD46PN,0)) as
YTD46,sum(isnull(YTD47PN,0)) as YTD47,sum(isnull(YTD48PN,0)) as YTD48,
sum(isnull(Qtr00PN,0)) as Qtr00,sum(isnull(Qtr01PN,0)) as
Qtr01,sum(isnull(Qtr02PN,0)) as Qtr02,sum(isnull(Qtr03PN,0)) as
Qtr03,sum(isnull(Qtr04PN,0)) as Qtr04,sum(isnull(Qtr05PN,0)) as
Qtr05,sum(isnull(Qtr06PN,0)) as Qtr06,sum(isnull(Qtr07PN,0)) as
Qtr07,sum(isnull(Qtr08PN,0)) as Qtr08,sum(isnull(Qtr09PN,0)) as
Qtr09,sum(isnull(Qtr10PN,0)) as Qtr10,sum(isnull(Qtr11PN,0)) as
Qtr11,sum(isnull(Qtr12PN,0)) as Qtr12,sum(isnull(Qtr13PN,0)) as
Qtr13,sum(isnull(Qtr14PN,0)) as Qtr14,sum(isnull(Qtr15PN,0)) as
Qtr15,sum(isnull(Qtr16PN,0)) as Qtr16,sum(isnull(Qtr17PN,0)) as
Qtr17,sum(isnull(Qtr18PN,0)) as Qtr18,sum(isnull(Qtr19PN,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina B
on A.pack_cod=B.pack_cod where B.Active='Y'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname, A.MNFL_COD
(122 rows affected)
US
insert into TempCHPAPreReportsByMNC 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
			A.MNFL_COD,
			'US' as Moneytype, sum(isnull(R3M00US,0)) as R3M00,sum(isnull(R3M01US,0))
as R3M01,sum(isnull(R3M02US,0)) as R3M02,sum(isnull(R3M03US,0)) as
R3M03,sum(isnull(R3M04US,0)) as R3M04,sum(isnull(R3M05US,0)) as
R3M05,sum(isnull(R3M06US,0)) as R3M06,sum(isnull(R3M07US,0)) as
R3M07,sum(isnull(R3M08US,0)) as R3M08,sum(isnull(R3M09US,0)) as
R3M09,sum(isnull(R3M10US,0)) as R3M10,sum(isnull(R3M11US,0)) as
R3M11,sum(isnull(R3M12US,0)) as R3M12,sum(isnull(R3M13US,0)) as
R3M13,sum(isnull(R3M14US,0)) as R3M14,sum(isnull(R3M15US,0)) as
R3M15,sum(isnull(R3M16US,0)) as R3M16,sum(isnull(R3M17US,0)) as
R3M17,sum(isnull(R3M18US,0)) as R3M18,sum(isnull(R3M19US,0)) as
R3M19,sum(isnull(R3M20US,0)) as R3M20,sum(isnull(R3M21US,0)) as
R3M21,sum(isnull(R3M22US,0)) as R3M22,sum(isnull(R3M23US,0)) as
R3M23,sum(isnull(R3M24US,0)) as R3M24,sum(isnull(R3M25US,0)) as
R3M25,sum(isnull(R3M26US,0)) as R3M26,sum(isnull(R3M27US,0)) as
R3M27,sum(isnull(R3M28US,0)) as R3M28,sum(isnull(R3M29US,0)) as
R3M29,sum(isnull(R3M30US,0)) as R3M30,sum(isnull(R3M31US,0)) as
R3M31,sum(isnull(R3M32US,0)) as R3M32,sum(isnull(R3M33US,0)) as
R3M33,sum(isnull(R3M34US,0)) as R3M34,sum(isnull(R3M35US,0)) as
R3M35,sum(isnull(R3M36US,0)) as R3M36,sum(isnull(R3M37US,0)) as
R3M37,sum(isnull(R3M38US,0)) as R3M38,sum(isnull(R3M39US,0)) as
R3M39,sum(isnull(R3M40US,0)) as R3M40,sum(isnull(R3M41US,0)) as
R3M41,sum(isnull(R3M42US,0)) as R3M42,sum(isnull(R3M43US,0)) as
R3M43,sum(isnull(R3M44US,0)) as R3M44,sum(isnull(R3M45US,0)) as
R3M45,sum(isnull(R3M46US,0)) as R3M46,sum(isnull(R3M47US,0)) as
R3M47,sum(isnull(R3M48US,0)) as R3M48, sum(isnull(MTH00US,0)) as
MTH00,sum(isnull(MTH01US,0)) as MTH01,sum(isnull(MTH02US,0)) as
MTH02,sum(isnull(MTH03US,0)) as MTH03,sum(isnull(MTH04US,0)) as
MTH04,sum(isnull(MTH05US,0)) as MTH05,sum(isnull(MTH06US,0)) as
MTH06,sum(isnull(MTH07US,0)) as MTH07,sum(isnull(MTH08US,0)) as
MTH08,sum(isnull(MTH09US,0)) as MTH09,sum(isnull(MTH10US,0)) as
MTH10,sum(isnull(MTH11US,0)) as MTH11,sum(isnull(MTH12US,0)) as
MTH12,sum(isnull(MTH13US,0)) as MTH13,sum(isnull(MTH14US,0)) as
MTH14,sum(isnull(MTH15US,0)) as MTH15,sum(isnull(MTH16US,0)) as
MTH16,sum(isnull(MTH17US,0)) as MTH17,sum(isnull(MTH18US,0)) as
MTH18,sum(isnull(MTH19US,0)) as MTH19,sum(isnull(MTH20US,0)) as
MTH20,sum(isnull(MTH21US,0)) as MTH21,sum(isnull(MTH22US,0)) as
MTH22,sum(isnull(MTH23US,0)) as MTH23,sum(isnull(MTH24US,0)) as
MTH24,sum(isnull(MTH25US,0)) as MTH25,sum(isnull(MTH26US,0)) as
MTH26,sum(isnull(MTH27US,0)) as MTH27,sum(isnull(MTH28US,0)) as
MTH28,sum(isnull(MTH29US,0)) as MTH29,sum(isnull(MTH30US,0)) as
MTH30,sum(isnull(MTH31US,0)) as MTH31,sum(isnull(MTH32US,0)) as
MTH32,sum(isnull(MTH33US,0)) as MTH33,sum(isnull(MTH34US,0)) as
MTH34,sum(isnull(MTH35US,0)) as MTH35,sum(isnull(MTH36US,0)) as
MTH36,sum(isnull(MTH37US,0)) as MTH37,sum(isnull(MTH38US,0)) as
MTH38,sum(isnull(MTH39US,0)) as MTH39,sum(isnull(MTH40US,0)) as
MTH40,sum(isnull(MTH41US,0)) as MTH41,sum(isnull(MTH42US,0)) as
MTH42,sum(isnull(MTH43US,0)) as MTH43,sum(isnull(MTH44US,0)) as
MTH44,sum(isnull(MTH45US,0)) as MTH45,sum(isnull(MTH46US,0)) as
MTH46,sum(isnull(MTH47US,0)) as MTH47,sum(isnull(MTH48US,0)) as MTH48,
sum(isnull(MAT00US,0)) as MAT00,sum(isnull(MAT01US,0)) as
MAT01,sum(isnull(MAT02US,0)) as MAT02,sum(isnull(MAT03US,0)) as
MAT03,sum(isnull(MAT04US,0)) as MAT04,sum(isnull(MAT05US,0)) as
MAT05,sum(isnull(MAT06US,0)) as MAT06,sum(isnull(MAT07US,0)) as
MAT07,sum(isnull(MAT08US,0)) as MAT08,sum(isnull(MAT09US,0)) as
MAT09,sum(isnull(MAT10US,0)) as MAT10,sum(isnull(MAT11US,0)) as
MAT11,sum(isnull(MAT12US,0)) as MAT12,sum(isnull(MAT13US,0)) as
MAT13,sum(isnull(MAT14US,0)) as MAT14,sum(isnull(MAT15US,0)) as
MAT15,sum(isnull(MAT16US,0)) as MAT16,sum(isnull(MAT17US,0)) as
MAT17,sum(isnull(MAT18US,0)) as MAT18,sum(isnull(MAT19US,0)) as
MAT19,sum(isnull(MAT20US,0)) as MAT20,sum(isnull(MAT21US,0)) as
MAT21,sum(isnull(MAT22US,0)) as MAT22,sum(isnull(MAT23US,0)) as
MAT23,sum(isnull(MAT24US,0)) as MAT24,sum(isnull(MAT25US,0)) as
MAT25,sum(isnull(MAT26US,0)) as MAT26,sum(isnull(MAT27US,0)) as
MAT27,sum(isnull(MAT28US,0)) as MAT28,sum(isnull(MAT29US,0)) as
MAT29,sum(isnull(MAT30US,0)) as MAT30,sum(isnull(MAT31US,0)) as
MAT31,sum(isnull(MAT32US,0)) as MAT32,sum(isnull(MAT33US,0)) as
MAT33,sum(isnull(MAT34US,0)) as MAT34,sum(isnull(MAT35US,0)) as
MAT35,sum(isnull(MAT36US,0)) as MAT36,sum(isnull(MAT37US,0)) as
MAT37,sum(isnull(MAT38US,0)) as MAT38,sum(isnull(MAT39US,0)) as
MAT39,sum(isnull(MAT40US,0)) as MAT40,sum(isnull(MAT41US,0)) as
MAT41,sum(isnull(MAT42US,0)) as MAT42,sum(isnull(MAT43US,0)) as
MAT43,sum(isnull(MAT44US,0)) as MAT44,sum(isnull(MAT45US,0)) as
MAT45,sum(isnull(MAT46US,0)) as MAT46,sum(isnull(MAT47US,0)) as
MAT47,sum(isnull(MAT48US,0)) as MAT48, sum(isnull(YTD00US,0)) as
YTD00,sum(isnull(YTD01US,0)) as YTD01,sum(isnull(YTD02US,0)) as
YTD02,sum(isnull(YTD03US,0)) as YTD03,sum(isnull(YTD04US,0)) as
YTD04,sum(isnull(YTD05US,0)) as YTD05,sum(isnull(YTD06US,0)) as
YTD06,sum(isnull(YTD07US,0)) as YTD07,sum(isnull(YTD08US,0)) as
YTD08,sum(isnull(YTD09US,0)) as YTD09,sum(isnull(YTD10US,0)) as
YTD10,sum(isnull(YTD11US,0)) as YTD11,sum(isnull(YTD12US,0)) as
YTD12,sum(isnull(YTD13US,0)) as YTD13,sum(isnull(YTD14US,0)) as
YTD14,sum(isnull(YTD15US,0)) as YTD15,sum(isnull(YTD16US,0)) as
YTD16,sum(isnull(YTD17US,0)) as YTD17,sum(isnull(YTD18US,0)) as
YTD18,sum(isnull(YTD19US,0)) as YTD19,sum(isnull(YTD20US,0)) as
YTD20,sum(isnull(YTD21US,0)) as YTD21,sum(isnull(YTD22US,0)) as
YTD22,sum(isnull(YTD23US,0)) as YTD23,sum(isnull(YTD24US,0)) as
YTD24,sum(isnull(YTD25US,0)) as YTD25,sum(isnull(YTD26US,0)) as
YTD26,sum(isnull(YTD27US,0)) as YTD27,sum(isnull(YTD28US,0)) as
YTD28,sum(isnull(YTD29US,0)) as YTD29,sum(isnull(YTD30US,0)) as
YTD30,sum(isnull(YTD31US,0)) as YTD31,sum(isnull(YTD32US,0)) as
YTD32,sum(isnull(YTD33US,0)) as YTD33,sum(isnull(YTD34US,0)) as
YTD34,sum(isnull(YTD35US,0)) as YTD35,sum(isnull(YTD36US,0)) as
YTD36,sum(isnull(YTD37US,0)) as YTD37,sum(isnull(YTD38US,0)) as
YTD38,sum(isnull(YTD39US,0)) as YTD39,sum(isnull(YTD40US,0)) as
YTD40,sum(isnull(YTD41US,0)) as YTD41,sum(isnull(YTD42US,0)) as
YTD42,sum(isnull(YTD43US,0)) as YTD43,sum(isnull(YTD44US,0)) as
YTD44,sum(isnull(YTD45US,0)) as YTD45,sum(isnull(YTD46US,0)) as
YTD46,sum(isnull(YTD47US,0)) as YTD47,sum(isnull(YTD48US,0)) as YTD48,
sum(isnull(Qtr00US,0)) as Qtr00,sum(isnull(Qtr01US,0)) as
Qtr01,sum(isnull(Qtr02US,0)) as Qtr02,sum(isnull(Qtr03US,0)) as
Qtr03,sum(isnull(Qtr04US,0)) as Qtr04,sum(isnull(Qtr05US,0)) as
Qtr05,sum(isnull(Qtr06US,0)) as Qtr06,sum(isnull(Qtr07US,0)) as
Qtr07,sum(isnull(Qtr08US,0)) as Qtr08,sum(isnull(Qtr09US,0)) as
Qtr09,sum(isnull(Qtr10US,0)) as Qtr10,sum(isnull(Qtr11US,0)) as
Qtr11,sum(isnull(Qtr12US,0)) as Qtr12,sum(isnull(Qtr13US,0)) as
Qtr13,sum(isnull(Qtr14US,0)) as Qtr14,sum(isnull(Qtr15US,0)) as
Qtr15,sum(isnull(Qtr16US,0)) as Qtr16,sum(isnull(Qtr17US,0)) as
Qtr17,sum(isnull(Qtr18US,0)) as Qtr18,sum(isnull(Qtr19US,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina B
on A.pack_cod=B.pack_cod where B.Active='Y'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname, A.MNFL_COD
(122 rows affected)
LC
insert into TempCHPAPreReportsByMNC 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
			A.MNFL_COD,
			'LC' as Moneytype, sum(isnull(R3M00LC,0)) as R3M00,sum(isnull(R3M01LC,0))
as R3M01,sum(isnull(R3M02LC,0)) as R3M02,sum(isnull(R3M03LC,0)) as
R3M03,sum(isnull(R3M04LC,0)) as R3M04,sum(isnull(R3M05LC,0)) as
R3M05,sum(isnull(R3M06LC,0)) as R3M06,sum(isnull(R3M07LC,0)) as
R3M07,sum(isnull(R3M08LC,0)) as R3M08,sum(isnull(R3M09LC,0)) as
R3M09,sum(isnull(R3M10LC,0)) as R3M10,sum(isnull(R3M11LC,0)) as
R3M11,sum(isnull(R3M12LC,0)) as R3M12,sum(isnull(R3M13LC,0)) as
R3M13,sum(isnull(R3M14LC,0)) as R3M14,sum(isnull(R3M15LC,0)) as
R3M15,sum(isnull(R3M16LC,0)) as R3M16,sum(isnull(R3M17LC,0)) as
R3M17,sum(isnull(R3M18LC,0)) as R3M18,sum(isnull(R3M19LC,0)) as
R3M19,sum(isnull(R3M20LC,0)) as R3M20,sum(isnull(R3M21LC,0)) as
R3M21,sum(isnull(R3M22LC,0)) as R3M22,sum(isnull(R3M23LC,0)) as
R3M23,sum(isnull(R3M24LC,0)) as R3M24,sum(isnull(R3M25LC,0)) as
R3M25,sum(isnull(R3M26LC,0)) as R3M26,sum(isnull(R3M27LC,0)) as
R3M27,sum(isnull(R3M28LC,0)) as R3M28,sum(isnull(R3M29LC,0)) as
R3M29,sum(isnull(R3M30LC,0)) as R3M30,sum(isnull(R3M31LC,0)) as
R3M31,sum(isnull(R3M32LC,0)) as R3M32,sum(isnull(R3M33LC,0)) as
R3M33,sum(isnull(R3M34LC,0)) as R3M34,sum(isnull(R3M35LC,0)) as
R3M35,sum(isnull(R3M36LC,0)) as R3M36,sum(isnull(R3M37LC,0)) as
R3M37,sum(isnull(R3M38LC,0)) as R3M38,sum(isnull(R3M39LC,0)) as
R3M39,sum(isnull(R3M40LC,0)) as R3M40,sum(isnull(R3M41LC,0)) as
R3M41,sum(isnull(R3M42LC,0)) as R3M42,sum(isnull(R3M43LC,0)) as
R3M43,sum(isnull(R3M44LC,0)) as R3M44,sum(isnull(R3M45LC,0)) as
R3M45,sum(isnull(R3M46LC,0)) as R3M46,sum(isnull(R3M47LC,0)) as
R3M47,sum(isnull(R3M48LC,0)) as R3M48, sum(isnull(MTH00LC,0)) as
MTH00,sum(isnull(MTH01LC,0)) as MTH01,sum(isnull(MTH02LC,0)) as
MTH02,sum(isnull(MTH03LC,0)) as MTH03,sum(isnull(MTH04LC,0)) as
MTH04,sum(isnull(MTH05LC,0)) as MTH05,sum(isnull(MTH06LC,0)) as
MTH06,sum(isnull(MTH07LC,0)) as MTH07,sum(isnull(MTH08LC,0)) as
MTH08,sum(isnull(MTH09LC,0)) as MTH09,sum(isnull(MTH10LC,0)) as
MTH10,sum(isnull(MTH11LC,0)) as MTH11,sum(isnull(MTH12LC,0)) as
MTH12,sum(isnull(MTH13LC,0)) as MTH13,sum(isnull(MTH14LC,0)) as
MTH14,sum(isnull(MTH15LC,0)) as MTH15,sum(isnull(MTH16LC,0)) as
MTH16,sum(isnull(MTH17LC,0)) as MTH17,sum(isnull(MTH18LC,0)) as
MTH18,sum(isnull(MTH19LC,0)) as MTH19,sum(isnull(MTH20LC,0)) as
MTH20,sum(isnull(MTH21LC,0)) as MTH21,sum(isnull(MTH22LC,0)) as
MTH22,sum(isnull(MTH23LC,0)) as MTH23,sum(isnull(MTH24LC,0)) as
MTH24,sum(isnull(MTH25LC,0)) as MTH25,sum(isnull(MTH26LC,0)) as
MTH26,sum(isnull(MTH27LC,0)) as MTH27,sum(isnull(MTH28LC,0)) as
MTH28,sum(isnull(MTH29LC,0)) as MTH29,sum(isnull(MTH30LC,0)) as
MTH30,sum(isnull(MTH31LC,0)) as MTH31,sum(isnull(MTH32LC,0)) as
MTH32,sum(isnull(MTH33LC,0)) as MTH33,sum(isnull(MTH34LC,0)) as
MTH34,sum(isnull(MTH35LC,0)) as MTH35,sum(isnull(MTH36LC,0)) as
MTH36,sum(isnull(MTH37LC,0)) as MTH37,sum(isnull(MTH38LC,0)) as
MTH38,sum(isnull(MTH39LC,0)) as MTH39,sum(isnull(MTH40LC,0)) as
MTH40,sum(isnull(MTH41LC,0)) as MTH41,sum(isnull(MTH42LC,0)) as
MTH42,sum(isnull(MTH43LC,0)) as MTH43,sum(isnull(MTH44LC,0)) as
MTH44,sum(isnull(MTH45LC,0)) as MTH45,sum(isnull(MTH46LC,0)) as
MTH46,sum(isnull(MTH47LC,0)) as MTH47,sum(isnull(MTH48LC,0)) as MTH48,
sum(isnull(MAT00LC,0)) as MAT00,sum(isnull(MAT01LC,0)) as
MAT01,sum(isnull(MAT02LC,0)) as MAT02,sum(isnull(MAT03LC,0)) as
MAT03,sum(isnull(MAT04LC,0)) as MAT04,sum(isnull(MAT05LC,0)) as
MAT05,sum(isnull(MAT06LC,0)) as MAT06,sum(isnull(MAT07LC,0)) as
MAT07,sum(isnull(MAT08LC,0)) as MAT08,sum(isnull(MAT09LC,0)) as
MAT09,sum(isnull(MAT10LC,0)) as MAT10,sum(isnull(MAT11LC,0)) as
MAT11,sum(isnull(MAT12LC,0)) as MAT12,sum(isnull(MAT13LC,0)) as
MAT13,sum(isnull(MAT14LC,0)) as MAT14,sum(isnull(MAT15LC,0)) as
MAT15,sum(isnull(MAT16LC,0)) as MAT16,sum(isnull(MAT17LC,0)) as
MAT17,sum(isnull(MAT18LC,0)) as MAT18,sum(isnull(MAT19LC,0)) as
MAT19,sum(isnull(MAT20LC,0)) as MAT20,sum(isnull(MAT21LC,0)) as
MAT21,sum(isnull(MAT22LC,0)) as MAT22,sum(isnull(MAT23LC,0)) as
MAT23,sum(isnull(MAT24LC,0)) as MAT24,sum(isnull(MAT25LC,0)) as
MAT25,sum(isnull(MAT26LC,0)) as MAT26,sum(isnull(MAT27LC,0)) as
MAT27,sum(isnull(MAT28LC,0)) as MAT28,sum(isnull(MAT29LC,0)) as
MAT29,sum(isnull(MAT30LC,0)) as MAT30,sum(isnull(MAT31LC,0)) as
MAT31,sum(isnull(MAT32LC,0)) as MAT32,sum(isnull(MAT33LC,0)) as
MAT33,sum(isnull(MAT34LC,0)) as MAT34,sum(isnull(MAT35LC,0)) as
MAT35,sum(isnull(MAT36LC,0)) as MAT36,sum(isnull(MAT37LC,0)) as
MAT37,sum(isnull(MAT38LC,0)) as MAT38,sum(isnull(MAT39LC,0)) as
MAT39,sum(isnull(MAT40LC,0)) as MAT40,sum(isnull(MAT41LC,0)) as
MAT41,sum(isnull(MAT42LC,0)) as MAT42,sum(isnull(MAT43LC,0)) as
MAT43,sum(isnull(MAT44LC,0)) as MAT44,sum(isnull(MAT45LC,0)) as
MAT45,sum(isnull(MAT46LC,0)) as MAT46,sum(isnull(MAT47LC,0)) as
MAT47,sum(isnull(MAT48LC,0)) as MAT48, sum(isnull(YTD00LC,0)) as
YTD00,sum(isnull(YTD01LC,0)) as YTD01,sum(isnull(YTD02LC,0)) as
YTD02,sum(isnull(YTD03LC,0)) as YTD03,sum(isnull(YTD04LC,0)) as
YTD04,sum(isnull(YTD05LC,0)) as YTD05,sum(isnull(YTD06LC,0)) as
YTD06,sum(isnull(YTD07LC,0)) as YTD07,sum(isnull(YTD08LC,0)) as
YTD08,sum(isnull(YTD09LC,0)) as YTD09,sum(isnull(YTD10LC,0)) as
YTD10,sum(isnull(YTD11LC,0)) as YTD11,sum(isnull(YTD12LC,0)) as
YTD12,sum(isnull(YTD13LC,0)) as YTD13,sum(isnull(YTD14LC,0)) as
YTD14,sum(isnull(YTD15LC,0)) as YTD15,sum(isnull(YTD16LC,0)) as
YTD16,sum(isnull(YTD17LC,0)) as YTD17,sum(isnull(YTD18LC,0)) as
YTD18,sum(isnull(YTD19LC,0)) as YTD19,sum(isnull(YTD20LC,0)) as
YTD20,sum(isnull(YTD21LC,0)) as YTD21,sum(isnull(YTD22LC,0)) as
YTD22,sum(isnull(YTD23LC,0)) as YTD23,sum(isnull(YTD24LC,0)) as
YTD24,sum(isnull(YTD25LC,0)) as YTD25,sum(isnull(YTD26LC,0)) as
YTD26,sum(isnull(YTD27LC,0)) as YTD27,sum(isnull(YTD28LC,0)) as
YTD28,sum(isnull(YTD29LC,0)) as YTD29,sum(isnull(YTD30LC,0)) as
YTD30,sum(isnull(YTD31LC,0)) as YTD31,sum(isnull(YTD32LC,0)) as
YTD32,sum(isnull(YTD33LC,0)) as YTD33,sum(isnull(YTD34LC,0)) as
YTD34,sum(isnull(YTD35LC,0)) as YTD35,sum(isnull(YTD36LC,0)) as
YTD36,sum(isnull(YTD37LC,0)) as YTD37,sum(isnull(YTD38LC,0)) as
YTD38,sum(isnull(YTD39LC,0)) as YTD39,sum(isnull(YTD40LC,0)) as
YTD40,sum(isnull(YTD41LC,0)) as YTD41,sum(isnull(YTD42LC,0)) as
YTD42,sum(isnull(YTD43LC,0)) as YTD43,sum(isnull(YTD44LC,0)) as
YTD44,sum(isnull(YTD45LC,0)) as YTD45,sum(isnull(YTD46LC,0)) as
YTD46,sum(isnull(YTD47LC,0)) as YTD47,sum(isnull(YTD48LC,0)) as YTD48,
sum(isnull(Qtr00LC,0)) as Qtr00,sum(isnull(Qtr01LC,0)) as
Qtr01,sum(isnull(Qtr02LC,0)) as Qtr02,sum(isnull(Qtr03LC,0)) as
Qtr03,sum(isnull(Qtr04LC,0)) as Qtr04,sum(isnull(Qtr05LC,0)) as
Qtr05,sum(isnull(Qtr06LC,0)) as Qtr06,sum(isnull(Qtr07LC,0)) as
Qtr07,sum(isnull(Qtr08LC,0)) as Qtr08,sum(isnull(Qtr09LC,0)) as
Qtr09,sum(isnull(Qtr10LC,0)) as Qtr10,sum(isnull(Qtr11LC,0)) as
Qtr11,sum(isnull(Qtr12LC,0)) as Qtr12,sum(isnull(Qtr13LC,0)) as
Qtr13,sum(isnull(Qtr14LC,0)) as Qtr14,sum(isnull(Qtr15LC,0)) as
Qtr15,sum(isnull(Qtr16LC,0)) as Qtr16,sum(isnull(Qtr17LC,0)) as
Qtr17,sum(isnull(Qtr18LC,0)) as Qtr18,sum(isnull(Qtr19LC,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina B
on A.pack_cod=B.pack_cod where B.Active='Y'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname, A.MNFL_COD
(122 rows affected)
UN
insert into TempCHPAPreReportsByMNC 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
			A.MNFL_COD,
			'UN' as Moneytype, sum(isnull(R3M00UN/b.rat,0)) as
R3M00,sum(isnull(R3M01UN/b.rat,0)) as R3M01,sum(isnull(R3M02UN/b.rat,0)) as
R3M02,sum(isnull(R3M03UN/b.rat,0)) as R3M03,sum(isnull(R3M04UN/b.rat,0)) as
R3M04,sum(isnull(R3M05UN/b.rat,0)) as R3M05,sum(isnull(R3M06UN/b.rat,0)) as
R3M06,sum(isnull(R3M07UN/b.rat,0)) as R3M07,sum(isnull(R3M08UN/b.rat,0)) as
R3M08,sum(isnull(R3M09UN/b.rat,0)) as R3M09,sum(isnull(R3M10UN/b.rat,0)) as
R3M10,sum(isnull(R3M11UN/b.rat,0)) as R3M11,sum(isnull(R3M12UN/b.rat,0)) as
R3M12,sum(isnull(R3M13UN/b.rat,0)) as R3M13,sum(isnull(R3M14UN/b.rat,0)) as
R3M14,sum(isnull(R3M15UN/b.rat,0)) as R3M15,sum(isnull(R3M16UN/b.rat,0)) as
R3M16,sum(isnull(R3M17UN/b.rat,0)) as R3M17,sum(isnull(R3M18UN/b.rat,0)) as
R3M18,sum(isnull(R3M19UN/b.rat,0)) as R3M19,sum(isnull(R3M20UN/b.rat,0)) as
R3M20,sum(isnull(R3M21UN/b.rat,0)) as R3M21,sum(isnull(R3M22UN/b.rat,0)) as
R3M22,sum(isnull(R3M23UN/b.rat,0)) as R3M23,sum(isnull(R3M24UN/b.rat,0)) as
R3M24,sum(isnull(R3M25UN/b.rat,0)) as R3M25,sum(isnull(R3M26UN/b.rat,0)) as
R3M26,sum(isnull(R3M27UN/b.rat,0)) as R3M27,sum(isnull(R3M28UN/b.rat,0)) as
R3M28,sum(isnull(R3M29UN/b.rat,0)) as R3M29,sum(isnull(R3M30UN/b.rat,0)) as
R3M30,sum(isnull(R3M31UN/b.rat,0)) as R3M31,sum(isnull(R3M32UN/b.rat,0)) as
R3M32,sum(isnull(R3M33UN/b.rat,0)) as R3M33,sum(isnull(R3M34UN/b.rat,0)) as
R3M34,sum(isnull(R3M35UN/b.rat,0)) as R3M35,sum(isnull(R3M36UN/b.rat,0)) as
R3M36,sum(isnull(R3M37UN/b.rat,0)) as R3M37,sum(isnull(R3M38UN/b.rat,0)) as
R3M38,sum(isnull(R3M39UN/b.rat,0)) as R3M39,sum(isnull(R3M40UN/b.rat,0)) as
R3M40,sum(isnull(R3M41UN/b.rat,0)) as R3M41,sum(isnull(R3M42UN/b.rat,0)) as
R3M42,sum(isnull(R3M43UN/b.rat,0)) as R3M43,sum(isnull(R3M44UN/b.rat,0)) as
R3M44,sum(isnull(R3M45UN/b.rat,0)) as R3M45,sum(isnull(R3M46UN/b.rat,0)) as
R3M46,sum(isnull(R3M47UN/b.rat,0)) as R3M47,sum(isnull(R3M48UN/b.rat,0)) as
R3M48, sum(isnull(MTH00UN/b.rat,0)) as MTH00,sum(isnull(MTH01UN/b.rat,0)) as
MTH01,sum(isnull(MTH02UN/b.rat,0)) as MTH02,sum(isnull(MTH03UN/b.rat,0)) as
MTH03,sum(isnull(MTH04UN/b.rat,0)) as MTH04,sum(isnull(MTH05UN/b.rat,0)) as
MTH05,sum(isnull(MTH06UN/b.rat,0)) as MTH06,sum(isnull(MTH07UN/b.rat,0)) as
MTH07,sum(isnull(MTH08UN/b.rat,0)) as MTH08,sum(isnull(MTH09UN/b.rat,0)) as
MTH09,sum(isnull(MTH10UN/b.rat,0)) as MTH10,sum(isnull(MTH11UN/b.rat,0)) as
MTH11,sum(isnull(MTH12UN/b.rat,0)) as MTH12,sum(isnull(MTH13UN/b.rat,0)) as
MTH13,sum(isnull(MTH14UN/b.rat,0)) as MTH14,sum(isnull(MTH15UN/b.rat,0)) as
MTH15,sum(isnull(MTH16UN/b.rat,0)) as MTH16,sum(isnull(MTH17UN/b.rat,0)) as
MTH17,sum(isnull(MTH18UN/b.rat,0)) as MTH18,sum(isnull(MTH19UN/b.rat,0)) as
MTH19,sum(isnull(MTH20UN/b.rat,0)) as MTH20,sum(isnull(MTH21UN/b.rat,0)) as
MTH21,sum(isnull(MTH22UN/b.rat,0)) as MTH22,sum(isnull(MTH23UN/b.rat,0)) as
MTH23,sum(isnull(MTH24UN/b.rat,0)) as MTH24,sum(isnull(MTH25UN/b.rat,0)) as
MTH25,sum(isnull(MTH26UN/b.rat,0)) as MTH26,sum(isnull(MTH27UN/b.rat,0)) as
MTH27,sum(isnull(MTH28UN/b.rat,0)) as MTH28,sum(isnull(MTH29UN/b.rat,0)) as
MTH29,sum(isnull(MTH30UN/b.rat,0)) as MTH30,sum(isnull(MTH31UN/b.rat,0)) as
MTH31,sum(isnull(MTH32UN/b.rat,0)) as MTH32,sum(isnull(MTH33UN/b.rat,0)) as
MTH33,sum(isnull(MTH34UN/b.rat,0)) as MTH34,sum(isnull(MTH35UN/b.rat,0)) as
MTH35,sum(isnull(MTH36UN/b.rat,0)) as MTH36,sum(isnull(MTH37UN/b.rat,0)) as
MTH37,sum(isnull(MTH38UN/b.rat,0)) as MTH38,sum(isnull(MTH39UN/b.rat,0)) as
MTH39,sum(isnull(MTH40UN/b.rat,0)) as MTH40,sum(isnull(MTH41UN/b.rat,0)) as
MTH41,sum(isnull(MTH42UN/b.rat,0)) as MTH42,sum(isnull(MTH43UN/b.rat,0)) as
MTH43,sum(isnull(MTH44UN/b.rat,0)) as MTH44,sum(isnull(MTH45UN/b.rat,0)) as
MTH45,sum(isnull(MTH46UN/b.rat,0)) as MTH46,sum(isnull(MTH47UN/b.rat,0)) as
MTH47,sum(isnull(MTH48UN/b.rat,0)) as MTH48, sum(isnull(MAT00UN/b.rat,0)) as
MAT00,sum(isnull(MAT01UN/b.rat,0)) as MAT01,sum(isnull(MAT02UN/b.rat,0)) as
MAT02,sum(isnull(MAT03UN/b.rat,0)) as MAT03,sum(isnull(MAT04UN/b.rat,0)) as
MAT04,sum(isnull(MAT05UN/b.rat,0)) as MAT05,sum(isnull(MAT06UN/b.rat,0)) as
MAT06,sum(isnull(MAT07UN/b.rat,0)) as MAT07,sum(isnull(MAT08UN/b.rat,0)) as
MAT08,sum(isnull(MAT09UN/b.rat,0)) as MAT09,sum(isnull(MAT10UN/b.rat,0)) as
MAT10,sum(isnull(MAT11UN/b.rat,0)) as MAT11,sum(isnull(MAT12UN/b.rat,0)) as
MAT12,sum(isnull(MAT13UN/b.rat,0)) as MAT13,sum(isnull(MAT14UN/b.rat,0)) as
MAT14,sum(isnull(MAT15UN/b.rat,0)) as MAT15,sum(isnull(MAT16UN/b.rat,0)) as
MAT16,sum(isnull(MAT17UN/b.rat,0)) as MAT17,sum(isnull(MAT18UN/b.rat,0)) as
MAT18,sum(isnull(MAT19UN/b.rat,0)) as MAT19,sum(isnull(MAT20UN/b.rat,0)) as
MAT20,sum(isnull(MAT21UN/b.rat,0)) as MAT21,sum(isnull(MAT22UN/b.rat,0)) as
MAT22,sum(isnull(MAT23UN/b.rat,0)) as MAT23,sum(isnull(MAT24UN/b.rat,0)) as
MAT24,sum(isnull(MAT25UN/b.rat,0)) as MAT25,sum(isnull(MAT26UN/b.rat,0)) as
MAT26,sum(isnull(MAT27UN/b.rat,0)) as MAT27,sum(isnull(MAT28UN/b.rat,0)) as
MAT28,sum(isnull(MAT29UN/b.rat,0)) as MAT29,sum(isnull(MAT30UN/b.rat,0)) as
MAT30,sum(isnull(MAT31UN/b.rat,0)) as MAT31,sum(isnull(MAT32UN/b.rat,0)) as
MAT32,sum(isnull(MAT33UN/b.rat,0)) as MAT33,sum(isnull(MAT34UN/b.rat,0)) as
MAT34,sum(isnull(MAT35UN/b.rat,0)) as MAT35,sum(isnull(MAT36UN/b.rat,0)) as
MAT36,sum(isnull(MAT37UN/b.rat,0)) as MAT37,sum(isnull(MAT38UN/b.rat,0)) as
MAT38,sum(isnull(MAT39UN/b.rat,0)) as MAT39,sum(isnull(MAT40UN/b.rat,0)) as
MAT40,sum(isnull(MAT41UN/b.rat,0)) as MAT41,sum(isnull(MAT42UN/b.rat,0)) as
MAT42,sum(isnull(MAT43UN/b.rat,0)) as MAT43,sum(isnull(MAT44UN/b.rat,0)) as
MAT44,sum(isnull(MAT45UN/b.rat,0)) as MAT45,sum(isnull(MAT46UN/b.rat,0)) as
MAT46,sum(isnull(MAT47UN/b.rat,0)) as MAT47,sum(isnull(MAT48UN/b.rat,0)) as
MAT48, sum(isnull(YTD00UN/b.rat,0)) as YTD00,sum(isnull(YTD01UN/b.rat,0)) as
YTD01,sum(isnull(YTD02UN/b.rat,0)) as YTD02,sum(isnull(YTD03UN/b.rat,0)) as
YTD03,sum(isnull(YTD04UN/b.rat,0)) as YTD04,sum(isnull(YTD05UN/b.rat,0)) as
YTD05,sum(isnull(YTD06UN/b.rat,0)) as YTD06,sum(isnull(YTD07UN/b.rat,0)) as
YTD07,sum(isnull(YTD08UN/b.rat,0)) as YTD08,sum(isnull(YTD09UN/b.rat,0)) as
YTD09,sum(isnull(YTD10UN/b.rat,0)) as YTD10,sum(isnull(YTD11UN/b.rat,0)) as
YTD11,sum(isnull(YTD12UN/b.rat,0)) as YTD12,sum(isnull(YTD13UN/b.rat,0)) as
YTD13,sum(isnull(YTD14UN/b.rat,0)) as YTD14,sum(isnull(YTD15UN/b.rat,0)) as
YTD15,sum(isnull(YTD16UN/b.rat,0)) as YTD16,sum(isnull(YTD17UN/b.rat,0)) as
YTD17,sum(isnull(YTD18UN/b.rat,0)) as YTD18,sum(isnull(YTD19UN/b.rat,0)) as
YTD19,sum(isnull(YTD20UN/b.rat,0)) as YTD20,sum(isnull(YTD21UN/b.rat,0)) as
YTD21,sum(isnull(YTD22UN/b.rat,0)) as YTD22,sum(isnull(YTD23UN/b.rat,0)) as
YTD23,sum(isnull(YTD24UN/b.rat,0)) as YTD24,sum(isnull(YTD25UN/b.rat,0)) as
YTD25,sum(isnull(YTD26UN/b.rat,0)) as YTD26,sum(isnull(YTD27UN/b.rat,0)) as
YTD27,sum(isnull(YTD28UN/b.rat,0)) as YTD28,sum(isnull(YTD29UN/b.rat,0)) as
YTD29,sum(isnull(YTD30UN/b.rat,0)) as YTD30,sum(isnull(YTD31UN/b.rat,0)) as
YTD31,sum(isnull(YTD32UN/b.rat,0)) as YTD32,sum(isnull(YTD33UN/b.rat,0)) as
YTD33,sum(isnull(YTD34UN/b.rat,0)) as YTD34,sum(isnull(YTD35UN/b.rat,0)) as
YTD35,sum(isnull(YTD36UN/b.rat,0)) as YTD36,sum(isnull(YTD37UN/b.rat,0)) as
YTD37,sum(isnull(YTD38UN/b.rat,0)) as YTD38,sum(isnull(YTD39UN/b.rat,0)) as
YTD39,sum(isnull(YTD40UN/b.rat,0)) as YTD40,sum(isnull(YTD41UN/b.rat,0)) as
YTD41,sum(isnull(YTD42UN/b.rat,0)) as YTD42,sum(isnull(YTD43UN/b.rat,0)) as
YTD43,sum(isnull(YTD44UN/b.rat,0)) as YTD44,sum(isnull(YTD45UN/b.rat,0)) as
YTD45,sum(isnull(YTD46UN/b.rat,0)) as YTD46,sum(isnull(YTD47UN/b.rat,0)) as
YTD47,sum(isnull(YTD48UN/b.rat,0)) as YTD48, sum(isnull(Qtr00UN/b.rat,0)) as
Qtr00,sum(isnull(Qtr01UN/b.rat,0)) as Qtr01,sum(isnull(Qtr02UN/b.rat,0)) as
Qtr02,sum(isnull(Qtr03UN/b.rat,0)) as Qtr03,sum(isnull(Qtr04UN/b.rat,0)) as
Qtr04,sum(isnull(Qtr05UN/b.rat,0)) as Qtr05,sum(isnull(Qtr06UN/b.rat,0)) as
Qtr06,sum(isnull(Qtr07UN/b.rat,0)) as Qtr07,sum(isnull(Qtr08UN/b.rat,0)) as
Qtr08,sum(isnull(Qtr09UN/b.rat,0)) as Qtr09,sum(isnull(Qtr10UN
(122 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> (488 rows affected)
(1 row affected)
PN
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'PN' as Moneytype, sum(isnull(R3M00PN,0)) as R3M00,sum(isnull(R3M01PN,0)) as
R3M01,sum(isnull(R3M02PN,0)) as R3M02,sum(isnull(R3M03PN,0)) as
R3M03,sum(isnull(R3M04PN,0)) as R3M04,sum(isnull(R3M05PN,0)) as
R3M05,sum(isnull(R3M06PN,0)) as R3M06,sum(isnull(R3M07PN,0)) as
R3M07,sum(isnull(R3M08PN,0)) as R3M08,sum(isnull(R3M09PN,0)) as
R3M09,sum(isnull(R3M10PN,0)) as R3M10,sum(isnull(R3M11PN,0)) as
R3M11,sum(isnull(R3M12PN,0)) as R3M12,sum(isnull(R3M13PN,0)) as
R3M13,sum(isnull(R3M14PN,0)) as R3M14,sum(isnull(R3M15PN,0)) as
R3M15,sum(isnull(R3M16PN,0)) as R3M16,sum(isnull(R3M17PN,0)) as
R3M17,sum(isnull(R3M18PN,0)) as R3M18,sum(isnull(R3M19PN,0)) as
R3M19,sum(isnull(R3M20PN,0)) as R3M20,sum(isnull(R3M21PN,0)) as
R3M21,sum(isnull(R3M22PN,0)) as R3M22,sum(isnull(R3M23PN,0)) as
R3M23,sum(isnull(R3M24PN,0)) as R3M24,sum(isnull(R3M25PN,0)) as
R3M25,sum(isnull(R3M26PN,0)) as R3M26,sum(isnull(R3M27PN,0)) as
R3M27,sum(isnull(R3M28PN,0)) as R3M28,sum(isnull(R3M29PN,0)) as
R3M29,sum(isnull(R3M30PN,0)) as R3M30,sum(isnull(R3M31PN,0)) as
R3M31,sum(isnull(R3M32PN,0)) as R3M32,sum(isnull(R3M33PN,0)) as
R3M33,sum(isnull(R3M34PN,0)) as R3M34,sum(isnull(R3M35PN,0)) as
R3M35,sum(isnull(R3M36PN,0)) as R3M36,sum(isnull(R3M37PN,0)) as
R3M37,sum(isnull(R3M38PN,0)) as R3M38,sum(isnull(R3M39PN,0)) as
R3M39,sum(isnull(R3M40PN,0)) as R3M40,sum(isnull(R3M41PN,0)) as
R3M41,sum(isnull(R3M42PN,0)) as R3M42,sum(isnull(R3M43PN,0)) as
R3M43,sum(isnull(R3M44PN,0)) as R3M44,sum(isnull(R3M45PN,0)) as
R3M45,sum(isnull(R3M46PN,0)) as R3M46,sum(isnull(R3M47PN,0)) as
R3M47,sum(isnull(R3M48PN,0)) as R3M48, sum(isnull(MTH00PN,0)) as
MTH00,sum(isnull(MTH01PN,0)) as MTH01,sum(isnull(MTH02PN,0)) as
MTH02,sum(isnull(MTH03PN,0)) as MTH03,sum(isnull(MTH04PN,0)) as
MTH04,sum(isnull(MTH05PN,0)) as MTH05,sum(isnull(MTH06PN,0)) as
MTH06,sum(isnull(MTH07PN,0)) as MTH07,sum(isnull(MTH08PN,0)) as
MTH08,sum(isnull(MTH09PN,0)) as MTH09,sum(isnull(MTH10PN,0)) as
MTH10,sum(isnull(MTH11PN,0)) as MTH11,sum(isnull(MTH12PN,0)) as
MTH12,sum(isnull(MTH13PN,0)) as MTH13,sum(isnull(MTH14PN,0)) as
MTH14,sum(isnull(MTH15PN,0)) as MTH15,sum(isnull(MTH16PN,0)) as
MTH16,sum(isnull(MTH17PN,0)) as MTH17,sum(isnull(MTH18PN,0)) as
MTH18,sum(isnull(MTH19PN,0)) as MTH19,sum(isnull(MTH20PN,0)) as
MTH20,sum(isnull(MTH21PN,0)) as MTH21,sum(isnull(MTH22PN,0)) as
MTH22,sum(isnull(MTH23PN,0)) as MTH23,sum(isnull(MTH24PN,0)) as
MTH24,sum(isnull(MTH25PN,0)) as MTH25,sum(isnull(MTH26PN,0)) as
MTH26,sum(isnull(MTH27PN,0)) as MTH27,sum(isnull(MTH28PN,0)) as
MTH28,sum(isnull(MTH29PN,0)) as MTH29,sum(isnull(MTH30PN,0)) as
MTH30,sum(isnull(MTH31PN,0)) as MTH31,sum(isnull(MTH32PN,0)) as
MTH32,sum(isnull(MTH33PN,0)) as MTH33,sum(isnull(MTH34PN,0)) as
MTH34,sum(isnull(MTH35PN,0)) as MTH35,sum(isnull(MTH36PN,0)) as
MTH36,sum(isnull(MTH37PN,0)) as MTH37,sum(isnull(MTH38PN,0)) as
MTH38,sum(isnull(MTH39PN,0)) as MTH39,sum(isnull(MTH40PN,0)) as
MTH40,sum(isnull(MTH41PN,0)) as MTH41,sum(isnull(MTH42PN,0)) as
MTH42,sum(isnull(MTH43PN,0)) as MTH43,sum(isnull(MTH44PN,0)) as
MTH44,sum(isnull(MTH45PN,0)) as MTH45,sum(isnull(MTH46PN,0)) as
MTH46,sum(isnull(MTH47PN,0)) as MTH47,sum(isnull(MTH48PN,0)) as MTH48,
sum(isnull(MAT00PN,0)) as MAT00,sum(isnull(MAT01PN,0)) as
MAT01,sum(isnull(MAT02PN,0)) as MAT02,sum(isnull(MAT03PN,0)) as
MAT03,sum(isnull(MAT04PN,0)) as MAT04,sum(isnull(MAT05PN,0)) as
MAT05,sum(isnull(MAT06PN,0)) as MAT06,sum(isnull(MAT07PN,0)) as
MAT07,sum(isnull(MAT08PN,0)) as MAT08,sum(isnull(MAT09PN,0)) as
MAT09,sum(isnull(MAT10PN,0)) as MAT10,sum(isnull(MAT11PN,0)) as
MAT11,sum(isnull(MAT12PN,0)) as MAT12,sum(isnull(MAT13PN,0)) as
MAT13,sum(isnull(MAT14PN,0)) as MAT14,sum(isnull(MAT15PN,0)) as
MAT15,sum(isnull(MAT16PN,0)) as MAT16,sum(isnull(MAT17PN,0)) as
MAT17,sum(isnull(MAT18PN,0)) as MAT18,sum(isnull(MAT19PN,0)) as
MAT19,sum(isnull(MAT20PN,0)) as MAT20,sum(isnull(MAT21PN,0)) as
MAT21,sum(isnull(MAT22PN,0)) as MAT22,sum(isnull(MAT23PN,0)) as
MAT23,sum(isnull(MAT24PN,0)) as MAT24,sum(isnull(MAT25PN,0)) as
MAT25,sum(isnull(MAT26PN,0)) as MAT26,sum(isnull(MAT27PN,0)) as
MAT27,sum(isnull(MAT28PN,0)) as MAT28,sum(isnull(MAT29PN,0)) as
MAT29,sum(isnull(MAT30PN,0)) as MAT30,sum(isnull(MAT31PN,0)) as
MAT31,sum(isnull(MAT32PN,0)) as MAT32,sum(isnull(MAT33PN,0)) as
MAT33,sum(isnull(MAT34PN,0)) as MAT34,sum(isnull(MAT35PN,0)) as
MAT35,sum(isnull(MAT36PN,0)) as MAT36,sum(isnull(MAT37PN,0)) as
MAT37,sum(isnull(MAT38PN,0)) as MAT38,sum(isnull(MAT39PN,0)) as
MAT39,sum(isnull(MAT40PN,0)) as MAT40,sum(isnull(MAT41PN,0)) as
MAT41,sum(isnull(MAT42PN,0)) as MAT42,sum(isnull(MAT43PN,0)) as
MAT43,sum(isnull(MAT44PN,0)) as MAT44,sum(isnull(MAT45PN,0)) as
MAT45,sum(isnull(MAT46PN,0)) as MAT46,sum(isnull(MAT47PN,0)) as
MAT47,sum(isnull(MAT48PN,0)) as MAT48, sum(isnull(YTD00PN,0)) as
YTD00,sum(isnull(YTD01PN,0)) as YTD01,sum(isnull(YTD02PN,0)) as
YTD02,sum(isnull(YTD03PN,0)) as YTD03,sum(isnull(YTD04PN,0)) as
YTD04,sum(isnull(YTD05PN,0)) as YTD05,sum(isnull(YTD06PN,0)) as
YTD06,sum(isnull(YTD07PN,0)) as YTD07,sum(isnull(YTD08PN,0)) as
YTD08,sum(isnull(YTD09PN,0)) as YTD09,sum(isnull(YTD10PN,0)) as
YTD10,sum(isnull(YTD11PN,0)) as YTD11,sum(isnull(YTD12PN,0)) as
YTD12,sum(isnull(YTD13PN,0)) as YTD13,sum(isnull(YTD14PN,0)) as
YTD14,sum(isnull(YTD15PN,0)) as YTD15,sum(isnull(YTD16PN,0)) as
YTD16,sum(isnull(YTD17PN,0)) as YTD17,sum(isnull(YTD18PN,0)) as
YTD18,sum(isnull(YTD19PN,0)) as YTD19,sum(isnull(YTD20PN,0)) as
YTD20,sum(isnull(YTD21PN,0)) as YTD21,sum(isnull(YTD22PN,0)) as
YTD22,sum(isnull(YTD23PN,0)) as YTD23,sum(isnull(YTD24PN,0)) as
YTD24,sum(isnull(YTD25PN,0)) as YTD25,sum(isnull(YTD26PN,0)) as
YTD26,sum(isnull(YTD27PN,0)) as YTD27,sum(isnull(YTD28PN,0)) as
YTD28,sum(isnull(YTD29PN,0)) as YTD29,sum(isnull(YTD30PN,0)) as
YTD30,sum(isnull(YTD31PN,0)) as YTD31,sum(isnull(YTD32PN,0)) as
YTD32,sum(isnull(YTD33PN,0)) as YTD33,sum(isnull(YTD34PN,0)) as
YTD34,sum(isnull(YTD35PN,0)) as YTD35,sum(isnull(YTD36PN,0)) as
YTD36,sum(isnull(YTD37PN,0)) as YTD37,sum(isnull(YTD38PN,0)) as
YTD38,sum(isnull(YTD39PN,0)) as YTD39,sum(isnull(YTD40PN,0)) as
YTD40,sum(isnull(YTD41PN,0)) as YTD41,sum(isnull(YTD42PN,0)) as
YTD42,sum(isnull(YTD43PN,0)) as YTD43,sum(isnull(YTD44PN,0)) as
YTD44,sum(isnull(YTD45PN,0)) as YTD45,sum(isnull(YTD46PN,0)) as
YTD46,sum(isnull(YTD47PN,0)) as YTD47,sum(isnull(YTD48PN,0)) as YTD48,
sum(isnull(Qtr00PN,0)) as Qtr00,sum(isnull(Qtr01PN,0)) as
Qtr01,sum(isnull(Qtr02PN,0)) as Qtr02,sum(isnull(Qtr03PN,0)) as
Qtr03,sum(isnull(Qtr04PN,0)) as Qtr04,sum(isnull(Qtr05PN,0)) as
Qtr05,sum(isnull(Qtr06PN,0)) as Qtr06,sum(isnull(Qtr07PN,0)) as
Qtr07,sum(isnull(Qtr08PN,0)) as Qtr08,sum(isnull(Qtr09PN,0)) as
Qtr09,sum(isnull(Qtr10PN,0)) as Qtr10,sum(isnull(Qtr11PN,0)) as
Qtr11,sum(isnull(Qtr12PN,0)) as Qtr12,sum(isnull(Qtr13PN,0)) as
Qtr13,sum(isnull(Qtr14PN,0)) as Qtr14,sum(isnull(Qtr15PN,0)) as
Qtr15,sum(isnull(Qtr16PN,0)) as Qtr16,sum(isnull(Qtr17PN,0)) as
Qtr17,sum(isnull(Qtr18PN,0)) as Qtr18,sum(isnull(Qtr19PN,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina B
on A.pack_cod=B.pack_cod where B.Active='Y' and b.mkt not like 'eliquis%'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(70 rows affected)
US
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'US' as Moneytype, sum(isnull(R3M00US,0)) as R3M00,sum(isnull(R3M01US,0)) as
R3M01,sum(isnull(R3M02US,0)) as R3M02,sum(isnull(R3M03US,0)) as
R3M03,sum(isnull(R3M04US,0)) as R3M04,sum(isnull(R3M05US,0)) as
R3M05,sum(isnull(R3M06US,0)) as R3M06,sum(isnull(R3M07US,0)) as
R3M07,sum(isnull(R3M08US,0)) as R3M08,sum(isnull(R3M09US,0)) as
R3M09,sum(isnull(R3M10US,0)) as R3M10,sum(isnull(R3M11US,0)) as
R3M11,sum(isnull(R3M12US,0)) as R3M12,sum(isnull(R3M13US,0)) as
R3M13,sum(isnull(R3M14US,0)) as R3M14,sum(isnull(R3M15US,0)) as
R3M15,sum(isnull(R3M16US,0)) as R3M16,sum(isnull(R3M17US,0)) as
R3M17,sum(isnull(R3M18US,0)) as R3M18,sum(isnull(R3M19US,0)) as
R3M19,sum(isnull(R3M20US,0)) as R3M20,sum(isnull(R3M21US,0)) as
R3M21,sum(isnull(R3M22US,0)) as R3M22,sum(isnull(R3M23US,0)) as
R3M23,sum(isnull(R3M24US,0)) as R3M24,sum(isnull(R3M25US,0)) as
R3M25,sum(isnull(R3M26US,0)) as R3M26,sum(isnull(R3M27US,0)) as
R3M27,sum(isnull(R3M28US,0)) as R3M28,sum(isnull(R3M29US,0)) as
R3M29,sum(isnull(R3M30US,0)) as R3M30,sum(isnull(R3M31US,0)) as
R3M31,sum(isnull(R3M32US,0)) as R3M32,sum(isnull(R3M33US,0)) as
R3M33,sum(isnull(R3M34US,0)) as R3M34,sum(isnull(R3M35US,0)) as
R3M35,sum(isnull(R3M36US,0)) as R3M36,sum(isnull(R3M37US,0)) as
R3M37,sum(isnull(R3M38US,0)) as R3M38,sum(isnull(R3M39US,0)) as
R3M39,sum(isnull(R3M40US,0)) as R3M40,sum(isnull(R3M41US,0)) as
R3M41,sum(isnull(R3M42US,0)) as R3M42,sum(isnull(R3M43US,0)) as
R3M43,sum(isnull(R3M44US,0)) as R3M44,sum(isnull(R3M45US,0)) as
R3M45,sum(isnull(R3M46US,0)) as R3M46,sum(isnull(R3M47US,0)) as
R3M47,sum(isnull(R3M48US,0)) as R3M48, sum(isnull(MTH00US,0)) as
MTH00,sum(isnull(MTH01US,0)) as MTH01,sum(isnull(MTH02US,0)) as
MTH02,sum(isnull(MTH03US,0)) as MTH03,sum(isnull(MTH04US,0)) as
MTH04,sum(isnull(MTH05US,0)) as MTH05,sum(isnull(MTH06US,0)) as
MTH06,sum(isnull(MTH07US,0)) as MTH07,sum(isnull(MTH08US,0)) as
MTH08,sum(isnull(MTH09US,0)) as MTH09,sum(isnull(MTH10US,0)) as
MTH10,sum(isnull(MTH11US,0)) as MTH11,sum(isnull(MTH12US,0)) as
MTH12,sum(isnull(MTH13US,0)) as MTH13,sum(isnull(MTH14US,0)) as
MTH14,sum(isnull(MTH15US,0)) as MTH15,sum(isnull(MTH16US,0)) as
MTH16,sum(isnull(MTH17US,0)) as MTH17,sum(isnull(MTH18US,0)) as
MTH18,sum(isnull(MTH19US,0)) as MTH19,sum(isnull(MTH20US,0)) as
MTH20,sum(isnull(MTH21US,0)) as MTH21,sum(isnull(MTH22US,0)) as
MTH22,sum(isnull(MTH23US,0)) as MTH23,sum(isnull(MTH24US,0)) as
MTH24,sum(isnull(MTH25US,0)) as MTH25,sum(isnull(MTH26US,0)) as
MTH26,sum(isnull(MTH27US,0)) as MTH27,sum(isnull(MTH28US,0)) as
MTH28,sum(isnull(MTH29US,0)) as MTH29,sum(isnull(MTH30US,0)) as
MTH30,sum(isnull(MTH31US,0)) as MTH31,sum(isnull(MTH32US,0)) as
MTH32,sum(isnull(MTH33US,0)) as MTH33,sum(isnull(MTH34US,0)) as
MTH34,sum(isnull(MTH35US,0)) as MTH35,sum(isnull(MTH36US,0)) as
MTH36,sum(isnull(MTH37US,0)) as MTH37,sum(isnull(MTH38US,0)) as
MTH38,sum(isnull(MTH39US,0)) as MTH39,sum(isnull(MTH40US,0)) as
MTH40,sum(isnull(MTH41US,0)) as MTH41,sum(isnull(MTH42US,0)) as
MTH42,sum(isnull(MTH43US,0)) as MTH43,sum(isnull(MTH44US,0)) as
MTH44,sum(isnull(MTH45US,0)) as MTH45,sum(isnull(MTH46US,0)) as
MTH46,sum(isnull(MTH47US,0)) as MTH47,sum(isnull(MTH48US,0)) as MTH48,
sum(isnull(MAT00US,0)) as MAT00,sum(isnull(MAT01US,0)) as
MAT01,sum(isnull(MAT02US,0)) as MAT02,sum(isnull(MAT03US,0)) as
MAT03,sum(isnull(MAT04US,0)) as MAT04,sum(isnull(MAT05US,0)) as
MAT05,sum(isnull(MAT06US,0)) as MAT06,sum(isnull(MAT07US,0)) as
MAT07,sum(isnull(MAT08US,0)) as MAT08,sum(isnull(MAT09US,0)) as
MAT09,sum(isnull(MAT10US,0)) as MAT10,sum(isnull(MAT11US,0)) as
MAT11,sum(isnull(MAT12US,0)) as MAT12,sum(isnull(MAT13US,0)) as
MAT13,sum(isnull(MAT14US,0)) as MAT14,sum(isnull(MAT15US,0)) as
MAT15,sum(isnull(MAT16US,0)) as MAT16,sum(isnull(MAT17US,0)) as
MAT17,sum(isnull(MAT18US,0)) as MAT18,sum(isnull(MAT19US,0)) as
MAT19,sum(isnull(MAT20US,0)) as MAT20,sum(isnull(MAT21US,0)) as
MAT21,sum(isnull(MAT22US,0)) as MAT22,sum(isnull(MAT23US,0)) as
MAT23,sum(isnull(MAT24US,0)) as MAT24,sum(isnull(MAT25US,0)) as
MAT25,sum(isnull(MAT26US,0)) as MAT26,sum(isnull(MAT27US,0)) as
MAT27,sum(isnull(MAT28US,0)) as MAT28,sum(isnull(MAT29US,0)) as
MAT29,sum(isnull(MAT30US,0)) as MAT30,sum(isnull(MAT31US,0)) as
MAT31,sum(isnull(MAT32US,0)) as MAT32,sum(isnull(MAT33US,0)) as
MAT33,sum(isnull(MAT34US,0)) as MAT34,sum(isnull(MAT35US,0)) as
MAT35,sum(isnull(MAT36US,0)) as MAT36,sum(isnull(MAT37US,0)) as
MAT37,sum(isnull(MAT38US,0)) as MAT38,sum(isnull(MAT39US,0)) as
MAT39,sum(isnull(MAT40US,0)) as MAT40,sum(isnull(MAT41US,0)) as
MAT41,sum(isnull(MAT42US,0)) as MAT42,sum(isnull(MAT43US,0)) as
MAT43,sum(isnull(MAT44US,0)) as MAT44,sum(isnull(MAT45US,0)) as
MAT45,sum(isnull(MAT46US,0)) as MAT46,sum(isnull(MAT47US,0)) as
MAT47,sum(isnull(MAT48US,0)) as MAT48, sum(isnull(YTD00US,0)) as
YTD00,sum(isnull(YTD01US,0)) as YTD01,sum(isnull(YTD02US,0)) as
YTD02,sum(isnull(YTD03US,0)) as YTD03,sum(isnull(YTD04US,0)) as
YTD04,sum(isnull(YTD05US,0)) as YTD05,sum(isnull(YTD06US,0)) as
YTD06,sum(isnull(YTD07US,0)) as YTD07,sum(isnull(YTD08US,0)) as
YTD08,sum(isnull(YTD09US,0)) as YTD09,sum(isnull(YTD10US,0)) as
YTD10,sum(isnull(YTD11US,0)) as YTD11,sum(isnull(YTD12US,0)) as
YTD12,sum(isnull(YTD13US,0)) as YTD13,sum(isnull(YTD14US,0)) as
YTD14,sum(isnull(YTD15US,0)) as YTD15,sum(isnull(YTD16US,0)) as
YTD16,sum(isnull(YTD17US,0)) as YTD17,sum(isnull(YTD18US,0)) as
YTD18,sum(isnull(YTD19US,0)) as YTD19,sum(isnull(YTD20US,0)) as
YTD20,sum(isnull(YTD21US,0)) as YTD21,sum(isnull(YTD22US,0)) as
YTD22,sum(isnull(YTD23US,0)) as YTD23,sum(isnull(YTD24US,0)) as
YTD24,sum(isnull(YTD25US,0)) as YTD25,sum(isnull(YTD26US,0)) as
YTD26,sum(isnull(YTD27US,0)) as YTD27,sum(isnull(YTD28US,0)) as
YTD28,sum(isnull(YTD29US,0)) as YTD29,sum(isnull(YTD30US,0)) as
YTD30,sum(isnull(YTD31US,0)) as YTD31,sum(isnull(YTD32US,0)) as
YTD32,sum(isnull(YTD33US,0)) as YTD33,sum(isnull(YTD34US,0)) as
YTD34,sum(isnull(YTD35US,0)) as YTD35,sum(isnull(YTD36US,0)) as
YTD36,sum(isnull(YTD37US,0)) as YTD37,sum(isnull(YTD38US,0)) as
YTD38,sum(isnull(YTD39US,0)) as YTD39,sum(isnull(YTD40US,0)) as
YTD40,sum(isnull(YTD41US,0)) as YTD41,sum(isnull(YTD42US,0)) as
YTD42,sum(isnull(YTD43US,0)) as YTD43,sum(isnull(YTD44US,0)) as
YTD44,sum(isnull(YTD45US,0)) as YTD45,sum(isnull(YTD46US,0)) as
YTD46,sum(isnull(YTD47US,0)) as YTD47,sum(isnull(YTD48US,0)) as YTD48,
sum(isnull(Qtr00US,0)) as Qtr00,sum(isnull(Qtr01US,0)) as
Qtr01,sum(isnull(Qtr02US,0)) as Qtr02,sum(isnull(Qtr03US,0)) as
Qtr03,sum(isnull(Qtr04US,0)) as Qtr04,sum(isnull(Qtr05US,0)) as
Qtr05,sum(isnull(Qtr06US,0)) as Qtr06,sum(isnull(Qtr07US,0)) as
Qtr07,sum(isnull(Qtr08US,0)) as Qtr08,sum(isnull(Qtr09US,0)) as
Qtr09,sum(isnull(Qtr10US,0)) as Qtr10,sum(isnull(Qtr11US,0)) as
Qtr11,sum(isnull(Qtr12US,0)) as Qtr12,sum(isnull(Qtr13US,0)) as
Qtr13,sum(isnull(Qtr14US,0)) as Qtr14,sum(isnull(Qtr15US,0)) as
Qtr15,sum(isnull(Qtr16US,0)) as Qtr16,sum(isnull(Qtr17US,0)) as
Qtr17,sum(isnull(Qtr18US,0)) as Qtr18,sum(isnull(Qtr19US,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina B
on A.pack_cod=B.pack_cod where B.Active='Y' and b.mkt not like 'eliquis%'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(70 rows affected)
LC
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'LC' as Moneytype, sum(isnull(R3M00LC,0)) as R3M00,sum(isnull(R3M01LC,0)) as
R3M01,sum(isnull(R3M02LC,0)) as R3M02,sum(isnull(R3M03LC,0)) as
R3M03,sum(isnull(R3M04LC,0)) as R3M04,sum(isnull(R3M05LC,0)) as
R3M05,sum(isnull(R3M06LC,0)) as R3M06,sum(isnull(R3M07LC,0)) as
R3M07,sum(isnull(R3M08LC,0)) as R3M08,sum(isnull(R3M09LC,0)) as
R3M09,sum(isnull(R3M10LC,0)) as R3M10,sum(isnull(R3M11LC,0)) as
R3M11,sum(isnull(R3M12LC,0)) as R3M12,sum(isnull(R3M13LC,0)) as
R3M13,sum(isnull(R3M14LC,0)) as R3M14,sum(isnull(R3M15LC,0)) as
R3M15,sum(isnull(R3M16LC,0)) as R3M16,sum(isnull(R3M17LC,0)) as
R3M17,sum(isnull(R3M18LC,0)) as R3M18,sum(isnull(R3M19LC,0)) as
R3M19,sum(isnull(R3M20LC,0)) as R3M20,sum(isnull(R3M21LC,0)) as
R3M21,sum(isnull(R3M22LC,0)) as R3M22,sum(isnull(R3M23LC,0)) as
R3M23,sum(isnull(R3M24LC,0)) as R3M24,sum(isnull(R3M25LC,0)) as
R3M25,sum(isnull(R3M26LC,0)) as R3M26,sum(isnull(R3M27LC,0)) as
R3M27,sum(isnull(R3M28LC,0)) as R3M28,sum(isnull(R3M29LC,0)) as
R3M29,sum(isnull(R3M30LC,0)) as R3M30,sum(isnull(R3M31LC,0)) as
R3M31,sum(isnull(R3M32LC,0)) as R3M32,sum(isnull(R3M33LC,0)) as
R3M33,sum(isnull(R3M34LC,0)) as R3M34,sum(isnull(R3M35LC,0)) as
R3M35,sum(isnull(R3M36LC,0)) as R3M36,sum(isnull(R3M37LC,0)) as
R3M37,sum(isnull(R3M38LC,0)) as R3M38,sum(isnull(R3M39LC,0)) as
R3M39,sum(isnull(R3M40LC,0)) as R3M40,sum(isnull(R3M41LC,0)) as
R3M41,sum(isnull(R3M42LC,0)) as R3M42,sum(isnull(R3M43LC,0)) as
R3M43,sum(isnull(R3M44LC,0)) as R3M44,sum(isnull(R3M45LC,0)) as
R3M45,sum(isnull(R3M46LC,0)) as R3M46,sum(isnull(R3M47LC,0)) as
R3M47,sum(isnull(R3M48LC,0)) as R3M48, sum(isnull(MTH00LC,0)) as
MTH00,sum(isnull(MTH01LC,0)) as MTH01,sum(isnull(MTH02LC,0)) as
MTH02,sum(isnull(MTH03LC,0)) as MTH03,sum(isnull(MTH04LC,0)) as
MTH04,sum(isnull(MTH05LC,0)) as MTH05,sum(isnull(MTH06LC,0)) as
MTH06,sum(isnull(MTH07LC,0)) as MTH07,sum(isnull(MTH08LC,0)) as
MTH08,sum(isnull(MTH09LC,0)) as MTH09,sum(isnull(MTH10LC,0)) as
MTH10,sum(isnull(MTH11LC,0)) as MTH11,sum(isnull(MTH12LC,0)) as
MTH12,sum(isnull(MTH13LC,0)) as MTH13,sum(isnull(MTH14LC,0)) as
MTH14,sum(isnull(MTH15LC,0)) as MTH15,sum(isnull(MTH16LC,0)) as
MTH16,sum(isnull(MTH17LC,0)) as MTH17,sum(isnull(MTH18LC,0)) as
MTH18,sum(isnull(MTH19LC,0)) as MTH19,sum(isnull(MTH20LC,0)) as
MTH20,sum(isnull(MTH21LC,0)) as MTH21,sum(isnull(MTH22LC,0)) as
MTH22,sum(isnull(MTH23LC,0)) as MTH23,sum(isnull(MTH24LC,0)) as
MTH24,sum(isnull(MTH25LC,0)) as MTH25,sum(isnull(MTH26LC,0)) as
MTH26,sum(isnull(MTH27LC,0)) as MTH27,sum(isnull(MTH28LC,0)) as
MTH28,sum(isnull(MTH29LC,0)) as MTH29,sum(isnull(MTH30LC,0)) as
MTH30,sum(isnull(MTH31LC,0)) as MTH31,sum(isnull(MTH32LC,0)) as
MTH32,sum(isnull(MTH33LC,0)) as MTH33,sum(isnull(MTH34LC,0)) as
MTH34,sum(isnull(MTH35LC,0)) as MTH35,sum(isnull(MTH36LC,0)) as
MTH36,sum(isnull(MTH37LC,0)) as MTH37,sum(isnull(MTH38LC,0)) as
MTH38,sum(isnull(MTH39LC,0)) as MTH39,sum(isnull(MTH40LC,0)) as
MTH40,sum(isnull(MTH41LC,0)) as MTH41,sum(isnull(MTH42LC,0)) as
MTH42,sum(isnull(MTH43LC,0)) as MTH43,sum(isnull(MTH44LC,0)) as
MTH44,sum(isnull(MTH45LC,0)) as MTH45,sum(isnull(MTH46LC,0)) as
MTH46,sum(isnull(MTH47LC,0)) as MTH47,sum(isnull(MTH48LC,0)) as MTH48,
sum(isnull(MAT00LC,0)) as MAT00,sum(isnull(MAT01LC,0)) as
MAT01,sum(isnull(MAT02LC,0)) as MAT02,sum(isnull(MAT03LC,0)) as
MAT03,sum(isnull(MAT04LC,0)) as MAT04,sum(isnull(MAT05LC,0)) as
MAT05,sum(isnull(MAT06LC,0)) as MAT06,sum(isnull(MAT07LC,0)) as
MAT07,sum(isnull(MAT08LC,0)) as MAT08,sum(isnull(MAT09LC,0)) as
MAT09,sum(isnull(MAT10LC,0)) as MAT10,sum(isnull(MAT11LC,0)) as
MAT11,sum(isnull(MAT12LC,0)) as MAT12,sum(isnull(MAT13LC,0)) as
MAT13,sum(isnull(MAT14LC,0)) as MAT14,sum(isnull(MAT15LC,0)) as
MAT15,sum(isnull(MAT16LC,0)) as MAT16,sum(isnull(MAT17LC,0)) as
MAT17,sum(isnull(MAT18LC,0)) as MAT18,sum(isnull(MAT19LC,0)) as
MAT19,sum(isnull(MAT20LC,0)) as MAT20,sum(isnull(MAT21LC,0)) as
MAT21,sum(isnull(MAT22LC,0)) as MAT22,sum(isnull(MAT23LC,0)) as
MAT23,sum(isnull(MAT24LC,0)) as MAT24,sum(isnull(MAT25LC,0)) as
MAT25,sum(isnull(MAT26LC,0)) as MAT26,sum(isnull(MAT27LC,0)) as
MAT27,sum(isnull(MAT28LC,0)) as MAT28,sum(isnull(MAT29LC,0)) as
MAT29,sum(isnull(MAT30LC,0)) as MAT30,sum(isnull(MAT31LC,0)) as
MAT31,sum(isnull(MAT32LC,0)) as MAT32,sum(isnull(MAT33LC,0)) as
MAT33,sum(isnull(MAT34LC,0)) as MAT34,sum(isnull(MAT35LC,0)) as
MAT35,sum(isnull(MAT36LC,0)) as MAT36,sum(isnull(MAT37LC,0)) as
MAT37,sum(isnull(MAT38LC,0)) as MAT38,sum(isnull(MAT39LC,0)) as
MAT39,sum(isnull(MAT40LC,0)) as MAT40,sum(isnull(MAT41LC,0)) as
MAT41,sum(isnull(MAT42LC,0)) as MAT42,sum(isnull(MAT43LC,0)) as
MAT43,sum(isnull(MAT44LC,0)) as MAT44,sum(isnull(MAT45LC,0)) as
MAT45,sum(isnull(MAT46LC,0)) as MAT46,sum(isnull(MAT47LC,0)) as
MAT47,sum(isnull(MAT48LC,0)) as MAT48, sum(isnull(YTD00LC,0)) as
YTD00,sum(isnull(YTD01LC,0)) as YTD01,sum(isnull(YTD02LC,0)) as
YTD02,sum(isnull(YTD03LC,0)) as YTD03,sum(isnull(YTD04LC,0)) as
YTD04,sum(isnull(YTD05LC,0)) as YTD05,sum(isnull(YTD06LC,0)) as
YTD06,sum(isnull(YTD07LC,0)) as YTD07,sum(isnull(YTD08LC,0)) as
YTD08,sum(isnull(YTD09LC,0)) as YTD09,sum(isnull(YTD10LC,0)) as
YTD10,sum(isnull(YTD11LC,0)) as YTD11,sum(isnull(YTD12LC,0)) as
YTD12,sum(isnull(YTD13LC,0)) as YTD13,sum(isnull(YTD14LC,0)) as
YTD14,sum(isnull(YTD15LC,0)) as YTD15,sum(isnull(YTD16LC,0)) as
YTD16,sum(isnull(YTD17LC,0)) as YTD17,sum(isnull(YTD18LC,0)) as
YTD18,sum(isnull(YTD19LC,0)) as YTD19,sum(isnull(YTD20LC,0)) as
YTD20,sum(isnull(YTD21LC,0)) as YTD21,sum(isnull(YTD22LC,0)) as
YTD22,sum(isnull(YTD23LC,0)) as YTD23,sum(isnull(YTD24LC,0)) as
YTD24,sum(isnull(YTD25LC,0)) as YTD25,sum(isnull(YTD26LC,0)) as
YTD26,sum(isnull(YTD27LC,0)) as YTD27,sum(isnull(YTD28LC,0)) as
YTD28,sum(isnull(YTD29LC,0)) as YTD29,sum(isnull(YTD30LC,0)) as
YTD30,sum(isnull(YTD31LC,0)) as YTD31,sum(isnull(YTD32LC,0)) as
YTD32,sum(isnull(YTD33LC,0)) as YTD33,sum(isnull(YTD34LC,0)) as
YTD34,sum(isnull(YTD35LC,0)) as YTD35,sum(isnull(YTD36LC,0)) as
YTD36,sum(isnull(YTD37LC,0)) as YTD37,sum(isnull(YTD38LC,0)) as
YTD38,sum(isnull(YTD39LC,0)) as YTD39,sum(isnull(YTD40LC,0)) as
YTD40,sum(isnull(YTD41LC,0)) as YTD41,sum(isnull(YTD42LC,0)) as
YTD42,sum(isnull(YTD43LC,0)) as YTD43,sum(isnull(YTD44LC,0)) as
YTD44,sum(isnull(YTD45LC,0)) as YTD45,sum(isnull(YTD46LC,0)) as
YTD46,sum(isnull(YTD47LC,0)) as YTD47,sum(isnull(YTD48LC,0)) as YTD48,
sum(isnull(Qtr00LC,0)) as Qtr00,sum(isnull(Qtr01LC,0)) as
Qtr01,sum(isnull(Qtr02LC,0)) as Qtr02,sum(isnull(Qtr03LC,0)) as
Qtr03,sum(isnull(Qtr04LC,0)) as Qtr04,sum(isnull(Qtr05LC,0)) as
Qtr05,sum(isnull(Qtr06LC,0)) as Qtr06,sum(isnull(Qtr07LC,0)) as
Qtr07,sum(isnull(Qtr08LC,0)) as Qtr08,sum(isnull(Qtr09LC,0)) as
Qtr09,sum(isnull(Qtr10LC,0)) as Qtr10,sum(isnull(Qtr11LC,0)) as
Qtr11,sum(isnull(Qtr12LC,0)) as Qtr12,sum(isnull(Qtr13LC,0)) as
Qtr13,sum(isnull(Qtr14LC,0)) as Qtr14,sum(isnull(Qtr15LC,0)) as
Qtr15,sum(isnull(Qtr16LC,0)) as Qtr16,sum(isnull(Qtr17LC,0)) as
Qtr17,sum(isnull(Qtr18LC,0)) as Qtr18,sum(isnull(Qtr19LC,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina B
on A.pack_cod=B.pack_cod where B.Active='Y' and b.mkt not like 'eliquis%'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(70 rows affected)
UN
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'UN' as Moneytype, sum(isnull(R3M00UN/b.rat,0)) as
R3M00,sum(isnull(R3M01UN/b.rat,0)) as R3M01,sum(isnull(R3M02UN/b.rat,0)) as
R3M02,sum(isnull(R3M03UN/b.rat,0)) as R3M03,sum(isnull(R3M04UN/b.rat,0)) as
R3M04,sum(isnull(R3M05UN/b.rat,0)) as R3M05,sum(isnull(R3M06UN/b.rat,0)) as
R3M06,sum(isnull(R3M07UN/b.rat,0)) as R3M07,sum(isnull(R3M08UN/b.rat,0)) as
R3M08,sum(isnull(R3M09UN/b.rat,0)) as R3M09,sum(isnull(R3M10UN/b.rat,0)) as
R3M10,sum(isnull(R3M11UN/b.rat,0)) as R3M11,sum(isnull(R3M12UN/b.rat,0)) as
R3M12,sum(isnull(R3M13UN/b.rat,0)) as R3M13,sum(isnull(R3M14UN/b.rat,0)) as
R3M14,sum(isnull(R3M15UN/b.rat,0)) as R3M15,sum(isnull(R3M16UN/b.rat,0)) as
R3M16,sum(isnull(R3M17UN/b.rat,0)) as R3M17,sum(isnull(R3M18UN/b.rat,0)) as
R3M18,sum(isnull(R3M19UN/b.rat,0)) as R3M19,sum(isnull(R3M20UN/b.rat,0)) as
R3M20,sum(isnull(R3M21UN/b.rat,0)) as R3M21,sum(isnull(R3M22UN/b.rat,0)) as
R3M22,sum(isnull(R3M23UN/b.rat,0)) as R3M23,sum(isnull(R3M24UN/b.rat,0)) as
R3M24,sum(isnull(R3M25UN/b.rat,0)) as R3M25,sum(isnull(R3M26UN/b.rat,0)) as
R3M26,sum(isnull(R3M27UN/b.rat,0)) as R3M27,sum(isnull(R3M28UN/b.rat,0)) as
R3M28,sum(isnull(R3M29UN/b.rat,0)) as R3M29,sum(isnull(R3M30UN/b.rat,0)) as
R3M30,sum(isnull(R3M31UN/b.rat,0)) as R3M31,sum(isnull(R3M32UN/b.rat,0)) as
R3M32,sum(isnull(R3M33UN/b.rat,0)) as R3M33,sum(isnull(R3M34UN/b.rat,0)) as
R3M34,sum(isnull(R3M35UN/b.rat,0)) as R3M35,sum(isnull(R3M36UN/b.rat,0)) as
R3M36,sum(isnull(R3M37UN/b.rat,0)) as R3M37,sum(isnull(R3M38UN/b.rat,0)) as
R3M38,sum(isnull(R3M39UN/b.rat,0)) as R3M39,sum(isnull(R3M40UN/b.rat,0)) as
R3M40,sum(isnull(R3M41UN/b.rat,0)) as R3M41,sum(isnull(R3M42UN/b.rat,0)) as
R3M42,sum(isnull(R3M43UN/b.rat,0)) as R3M43,sum(isnull(R3M44UN/b.rat,0)) as
R3M44,sum(isnull(R3M45UN/b.rat,0)) as R3M45,sum(isnull(R3M46UN/b.rat,0)) as
R3M46,sum(isnull(R3M47UN/b.rat,0)) as R3M47,sum(isnull(R3M48UN/b.rat,0)) as
R3M48, sum(isnull(MTH00UN/b.rat,0)) as MTH00,sum(isnull(MTH01UN/b.rat,0)) as
MTH01,sum(isnull(MTH02UN/b.rat,0)) as MTH02,sum(isnull(MTH03UN/b.rat,0)) as
MTH03,sum(isnull(MTH04UN/b.rat,0)) as MTH04,sum(isnull(MTH05UN/b.rat,0)) as
MTH05,sum(isnull(MTH06UN/b.rat,0)) as MTH06,sum(isnull(MTH07UN/b.rat,0)) as
MTH07,sum(isnull(MTH08UN/b.rat,0)) as MTH08,sum(isnull(MTH09UN/b.rat,0)) as
MTH09,sum(isnull(MTH10UN/b.rat,0)) as MTH10,sum(isnull(MTH11UN/b.rat,0)) as
MTH11,sum(isnull(MTH12UN/b.rat,0)) as MTH12,sum(isnull(MTH13UN/b.rat,0)) as
MTH13,sum(isnull(MTH14UN/b.rat,0)) as MTH14,sum(isnull(MTH15UN/b.rat,0)) as
MTH15,sum(isnull(MTH16UN/b.rat,0)) as MTH16,sum(isnull(MTH17UN/b.rat,0)) as
MTH17,sum(isnull(MTH18UN/b.rat,0)) as MTH18,sum(isnull(MTH19UN/b.rat,0)) as
MTH19,sum(isnull(MTH20UN/b.rat,0)) as MTH20,sum(isnull(MTH21UN/b.rat,0)) as
MTH21,sum(isnull(MTH22UN/b.rat,0)) as MTH22,sum(isnull(MTH23UN/b.rat,0)) as
MTH23,sum(isnull(MTH24UN/b.rat,0)) as MTH24,sum(isnull(MTH25UN/b.rat,0)) as
MTH25,sum(isnull(MTH26UN/b.rat,0)) as MTH26,sum(isnull(MTH27UN/b.rat,0)) as
MTH27,sum(isnull(MTH28UN/b.rat,0)) as MTH28,sum(isnull(MTH29UN/b.rat,0)) as
MTH29,sum(isnull(MTH30UN/b.rat,0)) as MTH30,sum(isnull(MTH31UN/b.rat,0)) as
MTH31,sum(isnull(MTH32UN/b.rat,0)) as MTH32,sum(isnull(MTH33UN/b.rat,0)) as
MTH33,sum(isnull(MTH34UN/b.rat,0)) as MTH34,sum(isnull(MTH35UN/b.rat,0)) as
MTH35,sum(isnull(MTH36UN/b.rat,0)) as MTH36,sum(isnull(MTH37UN/b.rat,0)) as
MTH37,sum(isnull(MTH38UN/b.rat,0)) as MTH38,sum(isnull(MTH39UN/b.rat,0)) as
MTH39,sum(isnull(MTH40UN/b.rat,0)) as MTH40,sum(isnull(MTH41UN/b.rat,0)) as
MTH41,sum(isnull(MTH42UN/b.rat,0)) as MTH42,sum(isnull(MTH43UN/b.rat,0)) as
MTH43,sum(isnull(MTH44UN/b.rat,0)) as MTH44,sum(isnull(MTH45UN/b.rat,0)) as
MTH45,sum(isnull(MTH46UN/b.rat,0)) as MTH46,sum(isnull(MTH47UN/b.rat,0)) as
MTH47,sum(isnull(MTH48UN/b.rat,0)) as MTH48, sum(isnull(MAT00UN/b.rat,0)) as
MAT00,sum(isnull(MAT01UN/b.rat,0)) as MAT01,sum(isnull(MAT02UN/b.rat,0)) as
MAT02,sum(isnull(MAT03UN/b.rat,0)) as MAT03,sum(isnull(MAT04UN/b.rat,0)) as
MAT04,sum(isnull(MAT05UN/b.rat,0)) as MAT05,sum(isnull(MAT06UN/b.rat,0)) as
MAT06,sum(isnull(MAT07UN/b.rat,0)) as MAT07,sum(isnull(MAT08UN/b.rat,0)) as
MAT08,sum(isnull(MAT09UN/b.rat,0)) as MAT09,sum(isnull(MAT10UN/b.rat,0)) as
MAT10,sum(isnull(MAT11UN/b.rat,0)) as MAT11,sum(isnull(MAT12UN/b.rat,0)) as
MAT12,sum(isnull(MAT13UN/b.rat,0)) as MAT13,sum(isnull(MAT14UN/b.rat,0)) as
MAT14,sum(isnull(MAT15UN/b.rat,0)) as MAT15,sum(isnull(MAT16UN/b.rat,0)) as
MAT16,sum(isnull(MAT17UN/b.rat,0)) as MAT17,sum(isnull(MAT18UN/b.rat,0)) as
MAT18,sum(isnull(MAT19UN/b.rat,0)) as MAT19,sum(isnull(MAT20UN/b.rat,0)) as
MAT20,sum(isnull(MAT21UN/b.rat,0)) as MAT21,sum(isnull(MAT22UN/b.rat,0)) as
MAT22,sum(isnull(MAT23UN/b.rat,0)) as MAT23,sum(isnull(MAT24UN/b.rat,0)) as
MAT24,sum(isnull(MAT25UN/b.rat,0)) as MAT25,sum(isnull(MAT26UN/b.rat,0)) as
MAT26,sum(isnull(MAT27UN/b.rat,0)) as MAT27,sum(isnull(MAT28UN/b.rat,0)) as
MAT28,sum(isnull(MAT29UN/b.rat,0)) as MAT29,sum(isnull(MAT30UN/b.rat,0)) as
MAT30,sum(isnull(MAT31UN/b.rat,0)) as MAT31,sum(isnull(MAT32UN/b.rat,0)) as
MAT32,sum(isnull(MAT33UN/b.rat,0)) as MAT33,sum(isnull(MAT34UN/b.rat,0)) as
MAT34,sum(isnull(MAT35UN/b.rat,0)) as MAT35,sum(isnull(MAT36UN/b.rat,0)) as
MAT36,sum(isnull(MAT37UN/b.rat,0)) as MAT37,sum(isnull(MAT38UN/b.rat,0)) as
MAT38,sum(isnull(MAT39UN/b.rat,0)) as MAT39,sum(isnull(MAT40UN/b.rat,0)) as
MAT40,sum(isnull(MAT41UN/b.rat,0)) as MAT41,sum(isnull(MAT42UN/b.rat,0)) as
MAT42,sum(isnull(MAT43UN/b.rat,0)) as MAT43,sum(isnull(MAT44UN/b.rat,0)) as
MAT44,sum(isnull(MAT45UN/b.rat,0)) as MAT45,sum(isnull(MAT46UN/b.rat,0)) as
MAT46,sum(isnull(MAT47UN/b.rat,0)) as MAT47,sum(isnull(MAT48UN/b.rat,0)) as
MAT48, sum(isnull(YTD00UN/b.rat,0)) as YTD00,sum(isnull(YTD01UN/b.rat,0)) as
YTD01,sum(isnull(YTD02UN/b.rat,0)) as YTD02,sum(isnull(YTD03UN/b.rat,0)) as
YTD03,sum(isnull(YTD04UN/b.rat,0)) as YTD04,sum(isnull(YTD05UN/b.rat,0)) as
YTD05,sum(isnull(YTD06UN/b.rat,0)) as YTD06,sum(isnull(YTD07UN/b.rat,0)) as
YTD07,sum(isnull(YTD08UN/b.rat,0)) as YTD08,sum(isnull(YTD09UN/b.rat,0)) as
YTD09,sum(isnull(YTD10UN/b.rat,0)) as YTD10,sum(isnull(YTD11UN/b.rat,0)) as
YTD11,sum(isnull(YTD12UN/b.rat,0)) as YTD12,sum(isnull(YTD13UN/b.rat,0)) as
YTD13,sum(isnull(YTD14UN/b.rat,0)) as YTD14,sum(isnull(YTD15UN/b.rat,0)) as
YTD15,sum(isnull(YTD16UN/b.rat,0)) as YTD16,sum(isnull(YTD17UN/b.rat,0)) as
YTD17,sum(isnull(YTD18UN/b.rat,0)) as YTD18,sum(isnull(YTD19UN/b.rat,0)) as
YTD19,sum(isnull(YTD20UN/b.rat,0)) as YTD20,sum(isnull(YTD21UN/b.rat,0)) as
YTD21,sum(isnull(YTD22UN/b.rat,0)) as YTD22,sum(isnull(YTD23UN/b.rat,0)) as
YTD23,sum(isnull(YTD24UN/b.rat,0)) as YTD24,sum(isnull(YTD25UN/b.rat,0)) as
YTD25,sum(isnull(YTD26UN/b.rat,0)) as YTD26,sum(isnull(YTD27UN/b.rat,0)) as
YTD27,sum(isnull(YTD28UN/b.rat,0)) as YTD28,sum(isnull(YTD29UN/b.rat,0)) as
YTD29,sum(isnull(YTD30UN/b.rat,0)) as YTD30,sum(isnull(YTD31UN/b.rat,0)) as
YTD31,sum(isnull(YTD32UN/b.rat,0)) as YTD32,sum(isnull(YTD33UN/b.rat,0)) as
YTD33,sum(isnull(YTD34UN/b.rat,0)) as YTD34,sum(isnull(YTD35UN/b.rat,0)) as
YTD35,sum(isnull(YTD36UN/b.rat,0)) as YTD36,sum(isnull(YTD37UN/b.rat,0)) as
YTD37,sum(isnull(YTD38UN/b.rat,0)) as YTD38,sum(isnull(YTD39UN/b.rat,0)) as
YTD39,sum(isnull(YTD40UN/b.rat,0)) as YTD40,sum(isnull(YTD41UN/b.rat,0)) as
YTD41,sum(isnull(YTD42UN/b.rat,0)) as YTD42,sum(isnull(YTD43UN/b.rat,0)) as
YTD43,sum(isnull(YTD44UN/b.rat,0)) as YTD44,sum(isnull(YTD45UN/b.rat,0)) as
YTD45,sum(isnull(YTD46UN/b.rat,0)) as YTD46,sum(isnull(YTD47UN/b.rat,0)) as
YTD47,sum(isnull(YTD48UN/b.rat,0)) as YTD48, sum(isnull(Qtr00UN/b.rat,0)) as
Qtr00,sum(isnull(Qtr01UN/b.rat,0)) as Qtr01,sum(isnull(Qtr02UN/b.rat,0)) as
Qtr02,sum(isnull(Qtr03UN/b.rat,0)) as Qtr03,sum(isnull(Qtr04UN/b.rat,0)) as
Qtr04,sum(isnull(Qtr05UN/b.rat,0)) as Qtr05,sum(isnull(Qtr06UN/b.rat,0)) as
Qtr06,sum(isnull(Qtr07UN/b.rat,0)) as Qtr07,sum(isnull(Qtr08UN/b.rat,0)) as
Qtr08,sum(isnull(Qtr09UN/b.rat,0)) as Qtr09
(70 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> PN
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'PN' as Moneytype, sum(isnull(R3M00PN*b.rat,0)) as
R3M00,sum(isnull(R3M01PN*b.rat,0)) as R3M01,sum(isnull(R3M02PN*b.rat,0)) as
R3M02,sum(isnull(R3M03PN*b.rat,0)) as R3M03,sum(isnull(R3M04PN*b.rat,0)) as
R3M04,sum(isnull(R3M05PN*b.rat,0)) as R3M05,sum(isnull(R3M06PN*b.rat,0)) as
R3M06,sum(isnull(R3M07PN*b.rat,0)) as R3M07,sum(isnull(R3M08PN*b.rat,0)) as
R3M08,sum(isnull(R3M09PN*b.rat,0)) as R3M09,sum(isnull(R3M10PN*b.rat,0)) as
R3M10,sum(isnull(R3M11PN*b.rat,0)) as R3M11,sum(isnull(R3M12PN*b.rat,0)) as
R3M12,sum(isnull(R3M13PN*b.rat,0)) as R3M13,sum(isnull(R3M14PN*b.rat,0)) as
R3M14,sum(isnull(R3M15PN*b.rat,0)) as R3M15,sum(isnull(R3M16PN*b.rat,0)) as
R3M16,sum(isnull(R3M17PN*b.rat,0)) as R3M17,sum(isnull(R3M18PN*b.rat,0)) as
R3M18,sum(isnull(R3M19PN*b.rat,0)) as R3M19,sum(isnull(R3M20PN*b.rat,0)) as
R3M20,sum(isnull(R3M21PN*b.rat,0)) as R3M21,sum(isnull(R3M22PN*b.rat,0)) as
R3M22,sum(isnull(R3M23PN*b.rat,0)) as R3M23,sum(isnull(R3M24PN*b.rat,0)) as
R3M24,sum(isnull(R3M25PN*b.rat,0)) as R3M25,sum(isnull(R3M26PN*b.rat,0)) as
R3M26,sum(isnull(R3M27PN*b.rat,0)) as R3M27,sum(isnull(R3M28PN*b.rat,0)) as
R3M28,sum(isnull(R3M29PN*b.rat,0)) as R3M29,sum(isnull(R3M30PN*b.rat,0)) as
R3M30,sum(isnull(R3M31PN*b.rat,0)) as R3M31,sum(isnull(R3M32PN*b.rat,0)) as
R3M32,sum(isnull(R3M33PN*b.rat,0)) as R3M33,sum(isnull(R3M34PN*b.rat,0)) as
R3M34,sum(isnull(R3M35PN*b.rat,0)) as R3M35,sum(isnull(R3M36PN*b.rat,0)) as
R3M36,sum(isnull(R3M37PN*b.rat,0)) as R3M37,sum(isnull(R3M38PN*b.rat,0)) as
R3M38,sum(isnull(R3M39PN*b.rat,0)) as R3M39,sum(isnull(R3M40PN*b.rat,0)) as
R3M40,sum(isnull(R3M41PN*b.rat,0)) as R3M41,sum(isnull(R3M42PN*b.rat,0)) as
R3M42,sum(isnull(R3M43PN*b.rat,0)) as R3M43,sum(isnull(R3M44PN*b.rat,0)) as
R3M44,sum(isnull(R3M45PN*b.rat,0)) as R3M45,sum(isnull(R3M46PN*b.rat,0)) as
R3M46,sum(isnull(R3M47PN*b.rat,0)) as R3M47,sum(isnull(R3M48PN*b.rat,0)) as
R3M48, sum(isnull(MTH00PN*b.rat,0)) as MTH00,sum(isnull(MTH01PN*b.rat,0)) as
MTH01,sum(isnull(MTH02PN*b.rat,0)) as MTH02,sum(isnull(MTH03PN*b.rat,0)) as
MTH03,sum(isnull(MTH04PN*b.rat,0)) as MTH04,sum(isnull(MTH05PN*b.rat,0)) as
MTH05,sum(isnull(MTH06PN*b.rat,0)) as MTH06,sum(isnull(MTH07PN*b.rat,0)) as
MTH07,sum(isnull(MTH08PN*b.rat,0)) as MTH08,sum(isnull(MTH09PN*b.rat,0)) as
MTH09,sum(isnull(MTH10PN*b.rat,0)) as MTH10,sum(isnull(MTH11PN*b.rat,0)) as
MTH11,sum(isnull(MTH12PN*b.rat,0)) as MTH12,sum(isnull(MTH13PN*b.rat,0)) as
MTH13,sum(isnull(MTH14PN*b.rat,0)) as MTH14,sum(isnull(MTH15PN*b.rat,0)) as
MTH15,sum(isnull(MTH16PN*b.rat,0)) as MTH16,sum(isnull(MTH17PN*b.rat,0)) as
MTH17,sum(isnull(MTH18PN*b.rat,0)) as MTH18,sum(isnull(MTH19PN*b.rat,0)) as
MTH19,sum(isnull(MTH20PN*b.rat,0)) as MTH20,sum(isnull(MTH21PN*b.rat,0)) as
MTH21,sum(isnull(MTH22PN*b.rat,0)) as MTH22,sum(isnull(MTH23PN*b.rat,0)) as
MTH23,sum(isnull(MTH24PN*b.rat,0)) as MTH24,sum(isnull(MTH25PN*b.rat,0)) as
MTH25,sum(isnull(MTH26PN*b.rat,0)) as MTH26,sum(isnull(MTH27PN*b.rat,0)) as
MTH27,sum(isnull(MTH28PN*b.rat,0)) as MTH28,sum(isnull(MTH29PN*b.rat,0)) as
MTH29,sum(isnull(MTH30PN*b.rat,0)) as MTH30,sum(isnull(MTH31PN*b.rat,0)) as
MTH31,sum(isnull(MTH32PN*b.rat,0)) as MTH32,sum(isnull(MTH33PN*b.rat,0)) as
MTH33,sum(isnull(MTH34PN*b.rat,0)) as MTH34,sum(isnull(MTH35PN*b.rat,0)) as
MTH35,sum(isnull(MTH36PN*b.rat,0)) as MTH36,sum(isnull(MTH37PN*b.rat,0)) as
MTH37,sum(isnull(MTH38PN*b.rat,0)) as MTH38,sum(isnull(MTH39PN*b.rat,0)) as
MTH39,sum(isnull(MTH40PN*b.rat,0)) as MTH40,sum(isnull(MTH41PN*b.rat,0)) as
MTH41,sum(isnull(MTH42PN*b.rat,0)) as MTH42,sum(isnull(MTH43PN*b.rat,0)) as
MTH43,sum(isnull(MTH44PN*b.rat,0)) as MTH44,sum(isnull(MTH45PN*b.rat,0)) as
MTH45,sum(isnull(MTH46PN*b.rat,0)) as MTH46,sum(isnull(MTH47PN*b.rat,0)) as
MTH47,sum(isnull(MTH48PN*b.rat,0)) as MTH48, sum(isnull(MAT00PN*b.rat,0)) as
MAT00,sum(isnull(MAT01PN*b.rat,0)) as MAT01,sum(isnull(MAT02PN*b.rat,0)) as
MAT02,sum(isnull(MAT03PN*b.rat,0)) as MAT03,sum(isnull(MAT04PN*b.rat,0)) as
MAT04,sum(isnull(MAT05PN*b.rat,0)) as MAT05,sum(isnull(MAT06PN*b.rat,0)) as
MAT06,sum(isnull(MAT07PN*b.rat,0)) as MAT07,sum(isnull(MAT08PN*b.rat,0)) as
MAT08,sum(isnull(MAT09PN*b.rat,0)) as MAT09,sum(isnull(MAT10PN*b.rat,0)) as
MAT10,sum(isnull(MAT11PN*b.rat,0)) as MAT11,sum(isnull(MAT12PN*b.rat,0)) as
MAT12,sum(isnull(MAT13PN*b.rat,0)) as MAT13,sum(isnull(MAT14PN*b.rat,0)) as
MAT14,sum(isnull(MAT15PN*b.rat,0)) as MAT15,sum(isnull(MAT16PN*b.rat,0)) as
MAT16,sum(isnull(MAT17PN*b.rat,0)) as MAT17,sum(isnull(MAT18PN*b.rat,0)) as
MAT18,sum(isnull(MAT19PN*b.rat,0)) as MAT19,sum(isnull(MAT20PN*b.rat,0)) as
MAT20,sum(isnull(MAT21PN*b.rat,0)) as MAT21,sum(isnull(MAT22PN*b.rat,0)) as
MAT22,sum(isnull(MAT23PN*b.rat,0)) as MAT23,sum(isnull(MAT24PN*b.rat,0)) as
MAT24,sum(isnull(MAT25PN*b.rat,0)) as MAT25,sum(isnull(MAT26PN*b.rat,0)) as
MAT26,sum(isnull(MAT27PN*b.rat,0)) as MAT27,sum(isnull(MAT28PN*b.rat,0)) as
MAT28,sum(isnull(MAT29PN*b.rat,0)) as MAT29,sum(isnull(MAT30PN*b.rat,0)) as
MAT30,sum(isnull(MAT31PN*b.rat,0)) as MAT31,sum(isnull(MAT32PN*b.rat,0)) as
MAT32,sum(isnull(MAT33PN*b.rat,0)) as MAT33,sum(isnull(MAT34PN*b.rat,0)) as
MAT34,sum(isnull(MAT35PN*b.rat,0)) as MAT35,sum(isnull(MAT36PN*b.rat,0)) as
MAT36,sum(isnull(MAT37PN*b.rat,0)) as MAT37,sum(isnull(MAT38PN*b.rat,0)) as
MAT38,sum(isnull(MAT39PN*b.rat,0)) as MAT39,sum(isnull(MAT40PN*b.rat,0)) as
MAT40,sum(isnull(MAT41PN*b.rat,0)) as MAT41,sum(isnull(MAT42PN*b.rat,0)) as
MAT42,sum(isnull(MAT43PN*b.rat,0)) as MAT43,sum(isnull(MAT44PN*b.rat,0)) as
MAT44,sum(isnull(MAT45PN*b.rat,0)) as MAT45,sum(isnull(MAT46PN*b.rat,0)) as
MAT46,sum(isnull(MAT47PN*b.rat,0)) as MAT47,sum(isnull(MAT48PN*b.rat,0)) as
MAT48, sum(isnull(YTD00PN*b.rat,0)) as YTD00,sum(isnull(YTD01PN*b.rat,0)) as
YTD01,sum(isnull(YTD02PN*b.rat,0)) as YTD02,sum(isnull(YTD03PN*b.rat,0)) as
YTD03,sum(isnull(YTD04PN*b.rat,0)) as YTD04,sum(isnull(YTD05PN*b.rat,0)) as
YTD05,sum(isnull(YTD06PN*b.rat,0)) as YTD06,sum(isnull(YTD07PN*b.rat,0)) as
YTD07,sum(isnull(YTD08PN*b.rat,0)) as YTD08,sum(isnull(YTD09PN*b.rat,0)) as
YTD09,sum(isnull(YTD10PN*b.rat,0)) as YTD10,sum(isnull(YTD11PN*b.rat,0)) as
YTD11,sum(isnull(YTD12PN*b.rat,0)) as YTD12,sum(isnull(YTD13PN*b.rat,0)) as
YTD13,sum(isnull(YTD14PN*b.rat,0)) as YTD14,sum(isnull(YTD15PN*b.rat,0)) as
YTD15,sum(isnull(YTD16PN*b.rat,0)) as YTD16,sum(isnull(YTD17PN*b.rat,0)) as
YTD17,sum(isnull(YTD18PN*b.rat,0)) as YTD18,sum(isnull(YTD19PN*b.rat,0)) as
YTD19,sum(isnull(YTD20PN*b.rat,0)) as YTD20,sum(isnull(YTD21PN*b.rat,0)) as
YTD21,sum(isnull(YTD22PN*b.rat,0)) as YTD22,sum(isnull(YTD23PN*b.rat,0)) as
YTD23,sum(isnull(YTD24PN*b.rat,0)) as YTD24,sum(isnull(YTD25PN*b.rat,0)) as
YTD25,sum(isnull(YTD26PN*b.rat,0)) as YTD26,sum(isnull(YTD27PN*b.rat,0)) as
YTD27,sum(isnull(YTD28PN*b.rat,0)) as YTD28,sum(isnull(YTD29PN*b.rat,0)) as
YTD29,sum(isnull(YTD30PN*b.rat,0)) as YTD30,sum(isnull(YTD31PN*b.rat,0)) as
YTD31,sum(isnull(YTD32PN*b.rat,0)) as YTD32,sum(isnull(YTD33PN*b.rat,0)) as
YTD33,sum(isnull(YTD34PN*b.rat,0)) as YTD34,sum(isnull(YTD35PN*b.rat,0)) as
YTD35,sum(isnull(YTD36PN*b.rat,0)) as YTD36,sum(isnull(YTD37PN*b.rat,0)) as
YTD37,sum(isnull(YTD38PN*b.rat,0)) as YTD38,sum(isnull(YTD39PN*b.rat,0)) as
YTD39,sum(isnull(YTD40PN*b.rat,0)) as YTD40,sum(isnull(YTD41PN*b.rat,0)) as
YTD41,sum(isnull(YTD42PN*b.rat,0)) as YTD42,sum(isnull(YTD43PN*b.rat,0)) as
YTD43,sum(isnull(YTD44PN*b.rat,0)) as YTD44,sum(isnull(YTD45PN*b.rat,0)) as
YTD45,sum(isnull(YTD46PN*b.rat,0)) as YTD46,sum(isnull(YTD47PN*b.rat,0)) as
YTD47,sum(isnull(YTD48PN*b.rat,0)) as YTD48, sum(isnull(Qtr00PN*b.rat,0)) as
Qtr00,sum(isnull(Qtr01PN*b.rat,0)) as Qtr01,sum(isnull(Qtr02PN*b.rat,0)) as
Qtr02,sum(isnull(Qtr03PN*b.rat,0)) as Qtr03,sum(isnull(Qtr04PN*b.rat,0)) as
Qtr04,sum(isnull(Qtr05PN*b.rat,0)) as Qtr05,sum(isnull(Qtr06PN*b.rat,0)) as
Qtr06,sum(isnull(Qtr07PN*b.rat,0)) as Qtr07,sum(isnull(Qtr08PN*b.rat,0)) as
Qtr08,sum(isnull(Qtr09PN*b.rat,0)) as Qtr09
(0 rows affected)
US
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'US' as Moneytype, sum(isnull(R3M00US*b.rat,0)) as
R3M00,sum(isnull(R3M01US*b.rat,0)) as R3M01,sum(isnull(R3M02US*b.rat,0)) as
R3M02,sum(isnull(R3M03US*b.rat,0)) as R3M03,sum(isnull(R3M04US*b.rat,0)) as
R3M04,sum(isnull(R3M05US*b.rat,0)) as R3M05,sum(isnull(R3M06US*b.rat,0)) as
R3M06,sum(isnull(R3M07US*b.rat,0)) as R3M07,sum(isnull(R3M08US*b.rat,0)) as
R3M08,sum(isnull(R3M09US*b.rat,0)) as R3M09,sum(isnull(R3M10US*b.rat,0)) as
R3M10,sum(isnull(R3M11US*b.rat,0)) as R3M11,sum(isnull(R3M12US*b.rat,0)) as
R3M12,sum(isnull(R3M13US*b.rat,0)) as R3M13,sum(isnull(R3M14US*b.rat,0)) as
R3M14,sum(isnull(R3M15US*b.rat,0)) as R3M15,sum(isnull(R3M16US*b.rat,0)) as
R3M16,sum(isnull(R3M17US*b.rat,0)) as R3M17,sum(isnull(R3M18US*b.rat,0)) as
R3M18,sum(isnull(R3M19US*b.rat,0)) as R3M19,sum(isnull(R3M20US*b.rat,0)) as
R3M20,sum(isnull(R3M21US*b.rat,0)) as R3M21,sum(isnull(R3M22US*b.rat,0)) as
R3M22,sum(isnull(R3M23US*b.rat,0)) as R3M23,sum(isnull(R3M24US*b.rat,0)) as
R3M24,sum(isnull(R3M25US*b.rat,0)) as R3M25,sum(isnull(R3M26US*b.rat,0)) as
R3M26,sum(isnull(R3M27US*b.rat,0)) as R3M27,sum(isnull(R3M28US*b.rat,0)) as
R3M28,sum(isnull(R3M29US*b.rat,0)) as R3M29,sum(isnull(R3M30US*b.rat,0)) as
R3M30,sum(isnull(R3M31US*b.rat,0)) as R3M31,sum(isnull(R3M32US*b.rat,0)) as
R3M32,sum(isnull(R3M33US*b.rat,0)) as R3M33,sum(isnull(R3M34US*b.rat,0)) as
R3M34,sum(isnull(R3M35US*b.rat,0)) as R3M35,sum(isnull(R3M36US*b.rat,0)) as
R3M36,sum(isnull(R3M37US*b.rat,0)) as R3M37,sum(isnull(R3M38US*b.rat,0)) as
R3M38,sum(isnull(R3M39US*b.rat,0)) as R3M39,sum(isnull(R3M40US*b.rat,0)) as
R3M40,sum(isnull(R3M41US*b.rat,0)) as R3M41,sum(isnull(R3M42US*b.rat,0)) as
R3M42,sum(isnull(R3M43US*b.rat,0)) as R3M43,sum(isnull(R3M44US*b.rat,0)) as
R3M44,sum(isnull(R3M45US*b.rat,0)) as R3M45,sum(isnull(R3M46US*b.rat,0)) as
R3M46,sum(isnull(R3M47US*b.rat,0)) as R3M47,sum(isnull(R3M48US*b.rat,0)) as
R3M48, sum(isnull(MTH00US*b.rat,0)) as MTH00,sum(isnull(MTH01US*b.rat,0)) as
MTH01,sum(isnull(MTH02US*b.rat,0)) as MTH02,sum(isnull(MTH03US*b.rat,0)) as
MTH03,sum(isnull(MTH04US*b.rat,0)) as MTH04,sum(isnull(MTH05US*b.rat,0)) as
MTH05,sum(isnull(MTH06US*b.rat,0)) as MTH06,sum(isnull(MTH07US*b.rat,0)) as
MTH07,sum(isnull(MTH08US*b.rat,0)) as MTH08,sum(isnull(MTH09US*b.rat,0)) as
MTH09,sum(isnull(MTH10US*b.rat,0)) as MTH10,sum(isnull(MTH11US*b.rat,0)) as
MTH11,sum(isnull(MTH12US*b.rat,0)) as MTH12,sum(isnull(MTH13US*b.rat,0)) as
MTH13,sum(isnull(MTH14US*b.rat,0)) as MTH14,sum(isnull(MTH15US*b.rat,0)) as
MTH15,sum(isnull(MTH16US*b.rat,0)) as MTH16,sum(isnull(MTH17US*b.rat,0)) as
MTH17,sum(isnull(MTH18US*b.rat,0)) as MTH18,sum(isnull(MTH19US*b.rat,0)) as
MTH19,sum(isnull(MTH20US*b.rat,0)) as MTH20,sum(isnull(MTH21US*b.rat,0)) as
MTH21,sum(isnull(MTH22US*b.rat,0)) as MTH22,sum(isnull(MTH23US*b.rat,0)) as
MTH23,sum(isnull(MTH24US*b.rat,0)) as MTH24,sum(isnull(MTH25US*b.rat,0)) as
MTH25,sum(isnull(MTH26US*b.rat,0)) as MTH26,sum(isnull(MTH27US*b.rat,0)) as
MTH27,sum(isnull(MTH28US*b.rat,0)) as MTH28,sum(isnull(MTH29US*b.rat,0)) as
MTH29,sum(isnull(MTH30US*b.rat,0)) as MTH30,sum(isnull(MTH31US*b.rat,0)) as
MTH31,sum(isnull(MTH32US*b.rat,0)) as MTH32,sum(isnull(MTH33US*b.rat,0)) as
MTH33,sum(isnull(MTH34US*b.rat,0)) as MTH34,sum(isnull(MTH35US*b.rat,0)) as
MTH35,sum(isnull(MTH36US*b.rat,0)) as MTH36,sum(isnull(MTH37US*b.rat,0)) as
MTH37,sum(isnull(MTH38US*b.rat,0)) as MTH38,sum(isnull(MTH39US*b.rat,0)) as
MTH39,sum(isnull(MTH40US*b.rat,0)) as MTH40,sum(isnull(MTH41US*b.rat,0)) as
MTH41,sum(isnull(MTH42US*b.rat,0)) as MTH42,sum(isnull(MTH43US*b.rat,0)) as
MTH43,sum(isnull(MTH44US*b.rat,0)) as MTH44,sum(isnull(MTH45US*b.rat,0)) as
MTH45,sum(isnull(MTH46US*b.rat,0)) as MTH46,sum(isnull(MTH47US*b.rat,0)) as
MTH47,sum(isnull(MTH48US*b.rat,0)) as MTH48, sum(isnull(MAT00US*b.rat,0)) as
MAT00,sum(isnull(MAT01US*b.rat,0)) as MAT01,sum(isnull(MAT02US*b.rat,0)) as
MAT02,sum(isnull(MAT03US*b.rat,0)) as MAT03,sum(isnull(MAT04US*b.rat,0)) as
MAT04,sum(isnull(MAT05US*b.rat,0)) as MAT05,sum(isnull(MAT06US*b.rat,0)) as
MAT06,sum(isnull(MAT07US*b.rat,0)) as MAT07,sum(isnull(MAT08US*b.rat,0)) as
MAT08,sum(isnull(MAT09US*b.rat,0)) as MAT09,sum(isnull(MAT10US*b.rat,0)) as
MAT10,sum(isnull(MAT11US*b.rat,0)) as MAT11,sum(isnull(MAT12US*b.rat,0)) as
MAT12,sum(isnull(MAT13US*b.rat,0)) as MAT13,sum(isnull(MAT14US*b.rat,0)) as
MAT14,sum(isnull(MAT15US*b.rat,0)) as MAT15,sum(isnull(MAT16US*b.rat,0)) as
MAT16,sum(isnull(MAT17US*b.rat,0)) as MAT17,sum(isnull(MAT18US*b.rat,0)) as
MAT18,sum(isnull(MAT19US*b.rat,0)) as MAT19,sum(isnull(MAT20US*b.rat,0)) as
MAT20,sum(isnull(MAT21US*b.rat,0)) as MAT21,sum(isnull(MAT22US*b.rat,0)) as
MAT22,sum(isnull(MAT23US*b.rat,0)) as MAT23,sum(isnull(MAT24US*b.rat,0)) as
MAT24,sum(isnull(MAT25US*b.rat,0)) as MAT25,sum(isnull(MAT26US*b.rat,0)) as
MAT26,sum(isnull(MAT27US*b.rat,0)) as MAT27,sum(isnull(MAT28US*b.rat,0)) as
MAT28,sum(isnull(MAT29US*b.rat,0)) as MAT29,sum(isnull(MAT30US*b.rat,0)) as
MAT30,sum(isnull(MAT31US*b.rat,0)) as MAT31,sum(isnull(MAT32US*b.rat,0)) as
MAT32,sum(isnull(MAT33US*b.rat,0)) as MAT33,sum(isnull(MAT34US*b.rat,0)) as
MAT34,sum(isnull(MAT35US*b.rat,0)) as MAT35,sum(isnull(MAT36US*b.rat,0)) as
MAT36,sum(isnull(MAT37US*b.rat,0)) as MAT37,sum(isnull(MAT38US*b.rat,0)) as
MAT38,sum(isnull(MAT39US*b.rat,0)) as MAT39,sum(isnull(MAT40US*b.rat,0)) as
MAT40,sum(isnull(MAT41US*b.rat,0)) as MAT41,sum(isnull(MAT42US*b.rat,0)) as
MAT42,sum(isnull(MAT43US*b.rat,0)) as MAT43,sum(isnull(MAT44US*b.rat,0)) as
MAT44,sum(isnull(MAT45US*b.rat,0)) as MAT45,sum(isnull(MAT46US*b.rat,0)) as
MAT46,sum(isnull(MAT47US*b.rat,0)) as MAT47,sum(isnull(MAT48US*b.rat,0)) as
MAT48, sum(isnull(YTD00US*b.rat,0)) as YTD00,sum(isnull(YTD01US*b.rat,0)) as
YTD01,sum(isnull(YTD02US*b.rat,0)) as YTD02,sum(isnull(YTD03US*b.rat,0)) as
YTD03,sum(isnull(YTD04US*b.rat,0)) as YTD04,sum(isnull(YTD05US*b.rat,0)) as
YTD05,sum(isnull(YTD06US*b.rat,0)) as YTD06,sum(isnull(YTD07US*b.rat,0)) as
YTD07,sum(isnull(YTD08US*b.rat,0)) as YTD08,sum(isnull(YTD09US*b.rat,0)) as
YTD09,sum(isnull(YTD10US*b.rat,0)) as YTD10,sum(isnull(YTD11US*b.rat,0)) as
YTD11,sum(isnull(YTD12US*b.rat,0)) as YTD12,sum(isnull(YTD13US*b.rat,0)) as
YTD13,sum(isnull(YTD14US*b.rat,0)) as YTD14,sum(isnull(YTD15US*b.rat,0)) as
YTD15,sum(isnull(YTD16US*b.rat,0)) as YTD16,sum(isnull(YTD17US*b.rat,0)) as
YTD17,sum(isnull(YTD18US*b.rat,0)) as YTD18,sum(isnull(YTD19US*b.rat,0)) as
YTD19,sum(isnull(YTD20US*b.rat,0)) as YTD20,sum(isnull(YTD21US*b.rat,0)) as
YTD21,sum(isnull(YTD22US*b.rat,0)) as YTD22,sum(isnull(YTD23US*b.rat,0)) as
YTD23,sum(isnull(YTD24US*b.rat,0)) as YTD24,sum(isnull(YTD25US*b.rat,0)) as
YTD25,sum(isnull(YTD26US*b.rat,0)) as YTD26,sum(isnull(YTD27US*b.rat,0)) as
YTD27,sum(isnull(YTD28US*b.rat,0)) as YTD28,sum(isnull(YTD29US*b.rat,0)) as
YTD29,sum(isnull(YTD30US*b.rat,0)) as YTD30,sum(isnull(YTD31US*b.rat,0)) as
YTD31,sum(isnull(YTD32US*b.rat,0)) as YTD32,sum(isnull(YTD33US*b.rat,0)) as
YTD33,sum(isnull(YTD34US*b.rat,0)) as YTD34,sum(isnull(YTD35US*b.rat,0)) as
YTD35,sum(isnull(YTD36US*b.rat,0)) as YTD36,sum(isnull(YTD37US*b.rat,0)) as
YTD37,sum(isnull(YTD38US*b.rat,0)) as YTD38,sum(isnull(YTD39US*b.rat,0)) as
YTD39,sum(isnull(YTD40US*b.rat,0)) as YTD40,sum(isnull(YTD41US*b.rat,0)) as
YTD41,sum(isnull(YTD42US*b.rat,0)) as YTD42,sum(isnull(YTD43US*b.rat,0)) as
YTD43,sum(isnull(YTD44US*b.rat,0)) as YTD44,sum(isnull(YTD45US*b.rat,0)) as
YTD45,sum(isnull(YTD46US*b.rat,0)) as YTD46,sum(isnull(YTD47US*b.rat,0)) as
YTD47,sum(isnull(YTD48US*b.rat,0)) as YTD48, sum(isnull(Qtr00US*b.rat,0)) as
Qtr00,sum(isnull(Qtr01US*b.rat,0)) as Qtr01,sum(isnull(Qtr02US*b.rat,0)) as
Qtr02,sum(isnull(Qtr03US*b.rat,0)) as Qtr03,sum(isnull(Qtr04US*b.rat,0)) as
Qtr04,sum(isnull(Qtr05US*b.rat,0)) as Qtr05,sum(isnull(Qtr06US*b.rat,0)) as
Qtr06,sum(isnull(Qtr07US*b.rat,0)) as Qtr07,sum(isnull(Qtr08US*b.rat,0)) as
Qtr08,sum(isnull(Qtr09US*b.rat,0)) as Qtr09
(0 rows affected)
LC
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'LC' as Moneytype, sum(isnull(R3M00LC*b.rat,0)) as
R3M00,sum(isnull(R3M01LC*b.rat,0)) as R3M01,sum(isnull(R3M02LC*b.rat,0)) as
R3M02,sum(isnull(R3M03LC*b.rat,0)) as R3M03,sum(isnull(R3M04LC*b.rat,0)) as
R3M04,sum(isnull(R3M05LC*b.rat,0)) as R3M05,sum(isnull(R3M06LC*b.rat,0)) as
R3M06,sum(isnull(R3M07LC*b.rat,0)) as R3M07,sum(isnull(R3M08LC*b.rat,0)) as
R3M08,sum(isnull(R3M09LC*b.rat,0)) as R3M09,sum(isnull(R3M10LC*b.rat,0)) as
R3M10,sum(isnull(R3M11LC*b.rat,0)) as R3M11,sum(isnull(R3M12LC*b.rat,0)) as
R3M12,sum(isnull(R3M13LC*b.rat,0)) as R3M13,sum(isnull(R3M14LC*b.rat,0)) as
R3M14,sum(isnull(R3M15LC*b.rat,0)) as R3M15,sum(isnull(R3M16LC*b.rat,0)) as
R3M16,sum(isnull(R3M17LC*b.rat,0)) as R3M17,sum(isnull(R3M18LC*b.rat,0)) as
R3M18,sum(isnull(R3M19LC*b.rat,0)) as R3M19,sum(isnull(R3M20LC*b.rat,0)) as
R3M20,sum(isnull(R3M21LC*b.rat,0)) as R3M21,sum(isnull(R3M22LC*b.rat,0)) as
R3M22,sum(isnull(R3M23LC*b.rat,0)) as R3M23,sum(isnull(R3M24LC*b.rat,0)) as
R3M24,sum(isnull(R3M25LC*b.rat,0)) as R3M25,sum(isnull(R3M26LC*b.rat,0)) as
R3M26,sum(isnull(R3M27LC*b.rat,0)) as R3M27,sum(isnull(R3M28LC*b.rat,0)) as
R3M28,sum(isnull(R3M29LC*b.rat,0)) as R3M29,sum(isnull(R3M30LC*b.rat,0)) as
R3M30,sum(isnull(R3M31LC*b.rat,0)) as R3M31,sum(isnull(R3M32LC*b.rat,0)) as
R3M32,sum(isnull(R3M33LC*b.rat,0)) as R3M33,sum(isnull(R3M34LC*b.rat,0)) as
R3M34,sum(isnull(R3M35LC*b.rat,0)) as R3M35,sum(isnull(R3M36LC*b.rat,0)) as
R3M36,sum(isnull(R3M37LC*b.rat,0)) as R3M37,sum(isnull(R3M38LC*b.rat,0)) as
R3M38,sum(isnull(R3M39LC*b.rat,0)) as R3M39,sum(isnull(R3M40LC*b.rat,0)) as
R3M40,sum(isnull(R3M41LC*b.rat,0)) as R3M41,sum(isnull(R3M42LC*b.rat,0)) as
R3M42,sum(isnull(R3M43LC*b.rat,0)) as R3M43,sum(isnull(R3M44LC*b.rat,0)) as
R3M44,sum(isnull(R3M45LC*b.rat,0)) as R3M45,sum(isnull(R3M46LC*b.rat,0)) as
R3M46,sum(isnull(R3M47LC*b.rat,0)) as R3M47,sum(isnull(R3M48LC*b.rat,0)) as
R3M48, sum(isnull(MTH00LC*b.rat,0)) as MTH00,sum(isnull(MTH01LC*b.rat,0)) as
MTH01,sum(isnull(MTH02LC*b.rat,0)) as MTH02,sum(isnull(MTH03LC*b.rat,0)) as
MTH03,sum(isnull(MTH04LC*b.rat,0)) as MTH04,sum(isnull(MTH05LC*b.rat,0)) as
MTH05,sum(isnull(MTH06LC*b.rat,0)) as MTH06,sum(isnull(MTH07LC*b.rat,0)) as
MTH07,sum(isnull(MTH08LC*b.rat,0)) as MTH08,sum(isnull(MTH09LC*b.rat,0)) as
MTH09,sum(isnull(MTH10LC*b.rat,0)) as MTH10,sum(isnull(MTH11LC*b.rat,0)) as
MTH11,sum(isnull(MTH12LC*b.rat,0)) as MTH12,sum(isnull(MTH13LC*b.rat,0)) as
MTH13,sum(isnull(MTH14LC*b.rat,0)) as MTH14,sum(isnull(MTH15LC*b.rat,0)) as
MTH15,sum(isnull(MTH16LC*b.rat,0)) as MTH16,sum(isnull(MTH17LC*b.rat,0)) as
MTH17,sum(isnull(MTH18LC*b.rat,0)) as MTH18,sum(isnull(MTH19LC*b.rat,0)) as
MTH19,sum(isnull(MTH20LC*b.rat,0)) as MTH20,sum(isnull(MTH21LC*b.rat,0)) as
MTH21,sum(isnull(MTH22LC*b.rat,0)) as MTH22,sum(isnull(MTH23LC*b.rat,0)) as
MTH23,sum(isnull(MTH24LC*b.rat,0)) as MTH24,sum(isnull(MTH25LC*b.rat,0)) as
MTH25,sum(isnull(MTH26LC*b.rat,0)) as MTH26,sum(isnull(MTH27LC*b.rat,0)) as
MTH27,sum(isnull(MTH28LC*b.rat,0)) as MTH28,sum(isnull(MTH29LC*b.rat,0)) as
MTH29,sum(isnull(MTH30LC*b.rat,0)) as MTH30,sum(isnull(MTH31LC*b.rat,0)) as
MTH31,sum(isnull(MTH32LC*b.rat,0)) as MTH32,sum(isnull(MTH33LC*b.rat,0)) as
MTH33,sum(isnull(MTH34LC*b.rat,0)) as MTH34,sum(isnull(MTH35LC*b.rat,0)) as
MTH35,sum(isnull(MTH36LC*b.rat,0)) as MTH36,sum(isnull(MTH37LC*b.rat,0)) as
MTH37,sum(isnull(MTH38LC*b.rat,0)) as MTH38,sum(isnull(MTH39LC*b.rat,0)) as
MTH39,sum(isnull(MTH40LC*b.rat,0)) as MTH40,sum(isnull(MTH41LC*b.rat,0)) as
MTH41,sum(isnull(MTH42LC*b.rat,0)) as MTH42,sum(isnull(MTH43LC*b.rat,0)) as
MTH43,sum(isnull(MTH44LC*b.rat,0)) as MTH44,sum(isnull(MTH45LC*b.rat,0)) as
MTH45,sum(isnull(MTH46LC*b.rat,0)) as MTH46,sum(isnull(MTH47LC*b.rat,0)) as
MTH47,sum(isnull(MTH48LC*b.rat,0)) as MTH48, sum(isnull(MAT00LC*b.rat,0)) as
MAT00,sum(isnull(MAT01LC*b.rat,0)) as MAT01,sum(isnull(MAT02LC*b.rat,0)) as
MAT02,sum(isnull(MAT03LC*b.rat,0)) as MAT03,sum(isnull(MAT04LC*b.rat,0)) as
MAT04,sum(isnull(MAT05LC*b.rat,0)) as MAT05,sum(isnull(MAT06LC*b.rat,0)) as
MAT06,sum(isnull(MAT07LC*b.rat,0)) as MAT07,sum(isnull(MAT08LC*b.rat,0)) as
MAT08,sum(isnull(MAT09LC*b.rat,0)) as MAT09,sum(isnull(MAT10LC*b.rat,0)) as
MAT10,sum(isnull(MAT11LC*b.rat,0)) as MAT11,sum(isnull(MAT12LC*b.rat,0)) as
MAT12,sum(isnull(MAT13LC*b.rat,0)) as MAT13,sum(isnull(MAT14LC*b.rat,0)) as
MAT14,sum(isnull(MAT15LC*b.rat,0)) as MAT15,sum(isnull(MAT16LC*b.rat,0)) as
MAT16,sum(isnull(MAT17LC*b.rat,0)) as MAT17,sum(isnull(MAT18LC*b.rat,0)) as
MAT18,sum(isnull(MAT19LC*b.rat,0)) as MAT19,sum(isnull(MAT20LC*b.rat,0)) as
MAT20,sum(isnull(MAT21LC*b.rat,0)) as MAT21,sum(isnull(MAT22LC*b.rat,0)) as
MAT22,sum(isnull(MAT23LC*b.rat,0)) as MAT23,sum(isnull(MAT24LC*b.rat,0)) as
MAT24,sum(isnull(MAT25LC*b.rat,0)) as MAT25,sum(isnull(MAT26LC*b.rat,0)) as
MAT26,sum(isnull(MAT27LC*b.rat,0)) as MAT27,sum(isnull(MAT28LC*b.rat,0)) as
MAT28,sum(isnull(MAT29LC*b.rat,0)) as MAT29,sum(isnull(MAT30LC*b.rat,0)) as
MAT30,sum(isnull(MAT31LC*b.rat,0)) as MAT31,sum(isnull(MAT32LC*b.rat,0)) as
MAT32,sum(isnull(MAT33LC*b.rat,0)) as MAT33,sum(isnull(MAT34LC*b.rat,0)) as
MAT34,sum(isnull(MAT35LC*b.rat,0)) as MAT35,sum(isnull(MAT36LC*b.rat,0)) as
MAT36,sum(isnull(MAT37LC*b.rat,0)) as MAT37,sum(isnull(MAT38LC*b.rat,0)) as
MAT38,sum(isnull(MAT39LC*b.rat,0)) as MAT39,sum(isnull(MAT40LC*b.rat,0)) as
MAT40,sum(isnull(MAT41LC*b.rat,0)) as MAT41,sum(isnull(MAT42LC*b.rat,0)) as
MAT42,sum(isnull(MAT43LC*b.rat,0)) as MAT43,sum(isnull(MAT44LC*b.rat,0)) as
MAT44,sum(isnull(MAT45LC*b.rat,0)) as MAT45,sum(isnull(MAT46LC*b.rat,0)) as
MAT46,sum(isnull(MAT47LC*b.rat,0)) as MAT47,sum(isnull(MAT48LC*b.rat,0)) as
MAT48, sum(isnull(YTD00LC*b.rat,0)) as YTD00,sum(isnull(YTD01LC*b.rat,0)) as
YTD01,sum(isnull(YTD02LC*b.rat,0)) as YTD02,sum(isnull(YTD03LC*b.rat,0)) as
YTD03,sum(isnull(YTD04LC*b.rat,0)) as YTD04,sum(isnull(YTD05LC*b.rat,0)) as
YTD05,sum(isnull(YTD06LC*b.rat,0)) as YTD06,sum(isnull(YTD07LC*b.rat,0)) as
YTD07,sum(isnull(YTD08LC*b.rat,0)) as YTD08,sum(isnull(YTD09LC*b.rat,0)) as
YTD09,sum(isnull(YTD10LC*b.rat,0)) as YTD10,sum(isnull(YTD11LC*b.rat,0)) as
YTD11,sum(isnull(YTD12LC*b.rat,0)) as YTD12,sum(isnull(YTD13LC*b.rat,0)) as
YTD13,sum(isnull(YTD14LC*b.rat,0)) as YTD14,sum(isnull(YTD15LC*b.rat,0)) as
YTD15,sum(isnull(YTD16LC*b.rat,0)) as YTD16,sum(isnull(YTD17LC*b.rat,0)) as
YTD17,sum(isnull(YTD18LC*b.rat,0)) as YTD18,sum(isnull(YTD19LC*b.rat,0)) as
YTD19,sum(isnull(YTD20LC*b.rat,0)) as YTD20,sum(isnull(YTD21LC*b.rat,0)) as
YTD21,sum(isnull(YTD22LC*b.rat,0)) as YTD22,sum(isnull(YTD23LC*b.rat,0)) as
YTD23,sum(isnull(YTD24LC*b.rat,0)) as YTD24,sum(isnull(YTD25LC*b.rat,0)) as
YTD25,sum(isnull(YTD26LC*b.rat,0)) as YTD26,sum(isnull(YTD27LC*b.rat,0)) as
YTD27,sum(isnull(YTD28LC*b.rat,0)) as YTD28,sum(isnull(YTD29LC*b.rat,0)) as
YTD29,sum(isnull(YTD30LC*b.rat,0)) as YTD30,sum(isnull(YTD31LC*b.rat,0)) as
YTD31,sum(isnull(YTD32LC*b.rat,0)) as YTD32,sum(isnull(YTD33LC*b.rat,0)) as
YTD33,sum(isnull(YTD34LC*b.rat,0)) as YTD34,sum(isnull(YTD35LC*b.rat,0)) as
YTD35,sum(isnull(YTD36LC*b.rat,0)) as YTD36,sum(isnull(YTD37LC*b.rat,0)) as
YTD37,sum(isnull(YTD38LC*b.rat,0)) as YTD38,sum(isnull(YTD39LC*b.rat,0)) as
YTD39,sum(isnull(YTD40LC*b.rat,0)) as YTD40,sum(isnull(YTD41LC*b.rat,0)) as
YTD41,sum(isnull(YTD42LC*b.rat,0)) as YTD42,sum(isnull(YTD43LC*b.rat,0)) as
YTD43,sum(isnull(YTD44LC*b.rat,0)) as YTD44,sum(isnull(YTD45LC*b.rat,0)) as
YTD45,sum(isnull(YTD46LC*b.rat,0)) as YTD46,sum(isnull(YTD47LC*b.rat,0)) as
YTD47,sum(isnull(YTD48LC*b.rat,0)) as YTD48, sum(isnull(Qtr00LC*b.rat,0)) as
Qtr00,sum(isnull(Qtr01LC*b.rat,0)) as Qtr01,sum(isnull(Qtr02LC*b.rat,0)) as
Qtr02,sum(isnull(Qtr03LC*b.rat,0)) as Qtr03,sum(isnull(Qtr04LC*b.rat,0)) as
Qtr04,sum(isnull(Qtr05LC*b.rat,0)) as Qtr05,sum(isnull(Qtr06LC*b.rat,0)) as
Qtr06,sum(isnull(Qtr07LC*b.rat,0)) as Qtr07,sum(isnull(Qtr08LC*b.rat,0)) as
Qtr08,sum(isnull(Qtr09LC*b.rat,0)) as Qtr09
(0 rows affected)
UN
insert into TempCHPAPreReports 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'UN' as Moneytype, sum(isnull(R3M00UN*b.rat,0)) as
R3M00,sum(isnull(R3M01UN*b.rat,0)) as R3M01,sum(isnull(R3M02UN*b.rat,0)) as
R3M02,sum(isnull(R3M03UN*b.rat,0)) as R3M03,sum(isnull(R3M04UN*b.rat,0)) as
R3M04,sum(isnull(R3M05UN*b.rat,0)) as R3M05,sum(isnull(R3M06UN*b.rat,0)) as
R3M06,sum(isnull(R3M07UN*b.rat,0)) as R3M07,sum(isnull(R3M08UN*b.rat,0)) as
R3M08,sum(isnull(R3M09UN*b.rat,0)) as R3M09,sum(isnull(R3M10UN*b.rat,0)) as
R3M10,sum(isnull(R3M11UN*b.rat,0)) as R3M11,sum(isnull(R3M12UN*b.rat,0)) as
R3M12,sum(isnull(R3M13UN*b.rat,0)) as R3M13,sum(isnull(R3M14UN*b.rat,0)) as
R3M14,sum(isnull(R3M15UN*b.rat,0)) as R3M15,sum(isnull(R3M16UN*b.rat,0)) as
R3M16,sum(isnull(R3M17UN*b.rat,0)) as R3M17,sum(isnull(R3M18UN*b.rat,0)) as
R3M18,sum(isnull(R3M19UN*b.rat,0)) as R3M19,sum(isnull(R3M20UN*b.rat,0)) as
R3M20,sum(isnull(R3M21UN*b.rat,0)) as R3M21,sum(isnull(R3M22UN*b.rat,0)) as
R3M22,sum(isnull(R3M23UN*b.rat,0)) as R3M23,sum(isnull(R3M24UN*b.rat,0)) as
R3M24,sum(isnull(R3M25UN*b.rat,0)) as R3M25,sum(isnull(R3M26UN*b.rat,0)) as
R3M26,sum(isnull(R3M27UN*b.rat,0)) as R3M27,sum(isnull(R3M28UN*b.rat,0)) as
R3M28,sum(isnull(R3M29UN*b.rat,0)) as R3M29,sum(isnull(R3M30UN*b.rat,0)) as
R3M30,sum(isnull(R3M31UN*b.rat,0)) as R3M31,sum(isnull(R3M32UN*b.rat,0)) as
R3M32,sum(isnull(R3M33UN*b.rat,0)) as R3M33,sum(isnull(R3M34UN*b.rat,0)) as
R3M34,sum(isnull(R3M35UN*b.rat,0)) as R3M35,sum(isnull(R3M36UN*b.rat,0)) as
R3M36,sum(isnull(R3M37UN*b.rat,0)) as R3M37,sum(isnull(R3M38UN*b.rat,0)) as
R3M38,sum(isnull(R3M39UN*b.rat,0)) as R3M39,sum(isnull(R3M40UN*b.rat,0)) as
R3M40,sum(isnull(R3M41UN*b.rat,0)) as R3M41,sum(isnull(R3M42UN*b.rat,0)) as
R3M42,sum(isnull(R3M43UN*b.rat,0)) as R3M43,sum(isnull(R3M44UN*b.rat,0)) as
R3M44,sum(isnull(R3M45UN*b.rat,0)) as R3M45,sum(isnull(R3M46UN*b.rat,0)) as
R3M46,sum(isnull(R3M47UN*b.rat,0)) as R3M47,sum(isnull(R3M48UN*b.rat,0)) as
R3M48, sum(isnull(MTH00UN*b.rat,0)) as MTH00,sum(isnull(MTH01UN*b.rat,0)) as
MTH01,sum(isnull(MTH02UN*b.rat,0)) as MTH02,sum(isnull(MTH03UN*b.rat,0)) as
MTH03,sum(isnull(MTH04UN*b.rat,0)) as MTH04,sum(isnull(MTH05UN*b.rat,0)) as
MTH05,sum(isnull(MTH06UN*b.rat,0)) as MTH06,sum(isnull(MTH07UN*b.rat,0)) as
MTH07,sum(isnull(MTH08UN*b.rat,0)) as MTH08,sum(isnull(MTH09UN*b.rat,0)) as
MTH09,sum(isnull(MTH10UN*b.rat,0)) as MTH10,sum(isnull(MTH11UN*b.rat,0)) as
MTH11,sum(isnull(MTH12UN*b.rat,0)) as MTH12,sum(isnull(MTH13UN*b.rat,0)) as
MTH13,sum(isnull(MTH14UN*b.rat,0)) as MTH14,sum(isnull(MTH15UN*b.rat,0)) as
MTH15,sum(isnull(MTH16UN*b.rat,0)) as MTH16,sum(isnull(MTH17UN*b.rat,0)) as
MTH17,sum(isnull(MTH18UN*b.rat,0)) as MTH18,sum(isnull(MTH19UN*b.rat,0)) as
MTH19,sum(isnull(MTH20UN*b.rat,0)) as MTH20,sum(isnull(MTH21UN*b.rat,0)) as
MTH21,sum(isnull(MTH22UN*b.rat,0)) as MTH22,sum(isnull(MTH23UN*b.rat,0)) as
MTH23,sum(isnull(MTH24UN*b.rat,0)) as MTH24,sum(isnull(MTH25UN*b.rat,0)) as
MTH25,sum(isnull(MTH26UN*b.rat,0)) as MTH26,sum(isnull(MTH27UN*b.rat,0)) as
MTH27,sum(isnull(MTH28UN*b.rat,0)) as MTH28,sum(isnull(MTH29UN*b.rat,0)) as
MTH29,sum(isnull(MTH30UN*b.rat,0)) as MTH30,sum(isnull(MTH31UN*b.rat,0)) as
MTH31,sum(isnull(MTH32UN*b.rat,0)) as MTH32,sum(isnull(MTH33UN*b.rat,0)) as
MTH33,sum(isnull(MTH34UN*b.rat,0)) as MTH34,sum(isnull(MTH35UN*b.rat,0)) as
MTH35,sum(isnull(MTH36UN*b.rat,0)) as MTH36,sum(isnull(MTH37UN*b.rat,0)) as
MTH37,sum(isnull(MTH38UN*b.rat,0)) as MTH38,sum(isnull(MTH39UN*b.rat,0)) as
MTH39,sum(isnull(MTH40UN*b.rat,0)) as MTH40,sum(isnull(MTH41UN*b.rat,0)) as
MTH41,sum(isnull(MTH42UN*b.rat,0)) as MTH42,sum(isnull(MTH43UN*b.rat,0)) as
MTH43,sum(isnull(MTH44UN*b.rat,0)) as MTH44,sum(isnull(MTH45UN*b.rat,0)) as
MTH45,sum(isnull(MTH46UN*b.rat,0)) as MTH46,sum(isnull(MTH47UN*b.rat,0)) as
MTH47,sum(isnull(MTH48UN*b.rat,0)) as MTH48, sum(isnull(MAT00UN*b.rat,0)) as
MAT00,sum(isnull(MAT01UN*b.rat,0)) as MAT01,sum(isnull(MAT02UN*b.rat,0)) as
MAT02,sum(isnull(MAT03UN*b.rat,0)) as MAT03,sum(isnull(MAT04UN*b.rat,0)) as
MAT04,sum(isnull(MAT05UN*b.rat,0)) as MAT05,sum(isnull(MAT06UN*b.rat,0)) as
MAT06,sum(isnull(MAT07UN*b.rat,0)) as MAT07,sum(isnull(MAT08UN*b.rat,0)) as
MAT08,sum(isnull(MAT09UN*b.rat,0)) as MAT09,sum(isnull(MAT10UN*b.rat,0)) as
MAT10,sum(isnull(MAT11UN*b.rat,0)) as MAT11,sum(isnull(MAT12UN*b.rat,0)) as
MAT12,sum(isnull(MAT13UN*b.rat,0)) as MAT13,sum(isnull(MAT14UN*b.rat,0)) as
MAT14,sum(isnull(MAT15UN*b.rat,0)) as MAT15,sum(isnull(MAT16UN*b.rat,0)) as
MAT16,sum(isnull(MAT17UN*b.rat,0)) as MAT17,sum(isnull(MAT18UN*b.rat,0)) as
MAT18,sum(isnull(MAT19UN*b.rat,0)) as MAT19,sum(isnull(MAT20UN*b.rat,0)) as
MAT20,sum(isnull(MAT21UN*b.rat,0)) as MAT21,sum(isnull(MAT22UN*b.rat,0)) as
MAT22,sum(isnull(MAT23UN*b.rat,0)) as MAT23,sum(isnull(MAT24UN*b.rat,0)) as
MAT24,sum(isnull(MAT25UN*b.rat,0)) as MAT25,sum(isnull(MAT26UN*b.rat,0)) as
MAT26,sum(isnull(MAT27UN*b.rat,0)) as MAT27,sum(isnull(MAT28UN*b.rat,0)) as
MAT28,sum(isnull(MAT29UN*b.rat,0)) as MAT29,sum(isnull(MAT30UN*b.rat,0)) as
MAT30,sum(isnull(MAT31UN*b.rat,0)) as MAT31,sum(isnull(MAT32UN*b.rat,0)) as
MAT32,sum(isnull(MAT33UN*b.rat,0)) as MAT33,sum(isnull(MAT34UN*b.rat,0)) as
MAT34,sum(isnull(MAT35UN*b.rat,0)) as MAT35,sum(isnull(MAT36UN*b.rat,0)) as
MAT36,sum(isnull(MAT37UN*b.rat,0)) as MAT37,sum(isnull(MAT38UN*b.rat,0)) as
MAT38,sum(isnull(MAT39UN*b.rat,0)) as MAT39,sum(isnull(MAT40UN*b.rat,0)) as
MAT40,sum(isnull(MAT41UN*b.rat,0)) as MAT41,sum(isnull(MAT42UN*b.rat,0)) as
MAT42,sum(isnull(MAT43UN*b.rat,0)) as MAT43,sum(isnull(MAT44UN*b.rat,0)) as
MAT44,sum(isnull(MAT45UN*b.rat,0)) as MAT45,sum(isnull(MAT46UN*b.rat,0)) as
MAT46,sum(isnull(MAT47UN*b.rat,0)) as MAT47,sum(isnull(MAT48UN*b.rat,0)) as
MAT48, sum(isnull(YTD00UN*b.rat,0)) as YTD00,sum(isnull(YTD01UN*b.rat,0)) as
YTD01,sum(isnull(YTD02UN*b.rat,0)) as YTD02,sum(isnull(YTD03UN*b.rat,0)) as
YTD03,sum(isnull(YTD04UN*b.rat,0)) as YTD04,sum(isnull(YTD05UN*b.rat,0)) as
YTD05,sum(isnull(YTD06UN*b.rat,0)) as YTD06,sum(isnull(YTD07UN*b.rat,0)) as
YTD07,sum(isnull(YTD08UN*b.rat,0)) as YTD08,sum(isnull(YTD09UN*b.rat,0)) as
YTD09,sum(isnull(YTD10UN*b.rat,0)) as YTD10,sum(isnull(YTD11UN*b.rat,0)) as
YTD11,sum(isnull(YTD12UN*b.rat,0)) as YTD12,sum(isnull(YTD13UN*b.rat,0)) as
YTD13,sum(isnull(YTD14UN*b.rat,0)) as YTD14,sum(isnull(YTD15UN*b.rat,0)) as
YTD15,sum(isnull(YTD16UN*b.rat,0)) as YTD16,sum(isnull(YTD17UN*b.rat,0)) as
YTD17,sum(isnull(YTD18UN*b.rat,0)) as YTD18,sum(isnull(YTD19UN*b.rat,0)) as
YTD19,sum(isnull(YTD20UN*b.rat,0)) as YTD20,sum(isnull(YTD21UN*b.rat,0)) as
YTD21,sum(isnull(YTD22UN*b.rat,0)) as YTD22,sum(isnull(YTD23UN*b.rat,0)) as
YTD23,sum(isnull(YTD24UN*b.rat,0)) as YTD24,sum(isnull(YTD25UN*b.rat,0)) as
YTD25,sum(isnull(YTD26UN*b.rat,0)) as YTD26,sum(isnull(YTD27UN*b.rat,0)) as
YTD27,sum(isnull(YTD28UN*b.rat,0)) as YTD28,sum(isnull(YTD29UN*b.rat,0)) as
YTD29,sum(isnull(YTD30UN*b.rat,0)) as YTD30,sum(isnull(YTD31UN*b.rat,0)) as
YTD31,sum(isnull(YTD32UN*b.rat,0)) as YTD32,sum(isnull(YTD33UN*b.rat,0)) as
YTD33,sum(isnull(YTD34UN*b.rat,0)) as YTD34,sum(isnull(YTD35UN*b.rat,0)) as
YTD35,sum(isnull(YTD36UN*b.rat,0)) as YTD36,sum(isnull(YTD37UN*b.rat,0)) as
YTD37,sum(isnull(YTD38UN*b.rat,0)) as YTD38,sum(isnull(YTD39UN*b.rat,0)) as
YTD39,sum(isnull(YTD40UN*b.rat,0)) as YTD40,sum(isnull(YTD41UN*b.rat,0)) as
YTD41,sum(isnull(YTD42UN*b.rat,0)) as YTD42,sum(isnull(YTD43UN*b.rat,0)) as
YTD43,sum(isnull(YTD44UN*b.rat,0)) as YTD44,sum(isnull(YTD45UN*b.rat,0)) as
YTD45,sum(isnull(YTD46UN*b.rat,0)) as YTD46,sum(isnull(YTD47UN*b.rat,0)) as
YTD47,sum(isnull(YTD48UN*b.rat,0)) as YTD48, sum(isnull(Qtr00UN*b.rat,0)) as
Qtr00,sum(isnull(Qtr01UN*b.rat,0)) as Qtr01,sum(isnull(Qtr02UN*b.rat,0)) as
Qtr02,sum(isnull(Qtr03UN*b.rat,0)) as Qtr03,sum(isnull(Qtr04UN*b.rat,0)) as
Qtr04,sum(isnull(Qtr05UN*b.rat,0)) as Qtr05,sum(isnull(Qtr06UN*b.rat,0)) as
Qtr06,sum(isnull(Qtr07UN*b.rat,0)) as Qtr07,sum(isnull(Qtr08UN*b.rat,0)) as
Qtr08,sum(isnull(Qtr09UN*b.rat,0)) as Qtr09
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> (280 rows affected)
1> 2> 3> 4> 5> 6> (70 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> (1 row affected)
PN
insert into TempCHPAPreReports_Mole 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'PN' as Moneytype, sum(isnull(R3M00PN,0)) as R3M00,sum(isnull(R3M01PN,0)) as
R3M01,sum(isnull(R3M02PN,0)) as R3M02,sum(isnull(R3M03PN,0)) as
R3M03,sum(isnull(R3M04PN,0)) as R3M04,sum(isnull(R3M05PN,0)) as
R3M05,sum(isnull(R3M06PN,0)) as R3M06,sum(isnull(R3M07PN,0)) as
R3M07,sum(isnull(R3M08PN,0)) as R3M08,sum(isnull(R3M09PN,0)) as
R3M09,sum(isnull(R3M10PN,0)) as R3M10,sum(isnull(R3M11PN,0)) as
R3M11,sum(isnull(R3M12PN,0)) as R3M12,sum(isnull(R3M13PN,0)) as
R3M13,sum(isnull(R3M14PN,0)) as R3M14,sum(isnull(R3M15PN,0)) as
R3M15,sum(isnull(R3M16PN,0)) as R3M16,sum(isnull(R3M17PN,0)) as
R3M17,sum(isnull(R3M18PN,0)) as R3M18,sum(isnull(R3M19PN,0)) as
R3M19,sum(isnull(R3M20PN,0)) as R3M20,sum(isnull(R3M21PN,0)) as
R3M21,sum(isnull(R3M22PN,0)) as R3M22,sum(isnull(R3M23PN,0)) as
R3M23,sum(isnull(R3M24PN,0)) as R3M24,sum(isnull(R3M25PN,0)) as
R3M25,sum(isnull(R3M26PN,0)) as R3M26,sum(isnull(R3M27PN,0)) as
R3M27,sum(isnull(R3M28PN,0)) as R3M28,sum(isnull(R3M29PN,0)) as
R3M29,sum(isnull(R3M30PN,0)) as R3M30,sum(isnull(R3M31PN,0)) as
R3M31,sum(isnull(R3M32PN,0)) as R3M32,sum(isnull(R3M33PN,0)) as
R3M33,sum(isnull(R3M34PN,0)) as R3M34,sum(isnull(R3M35PN,0)) as
R3M35,sum(isnull(R3M36PN,0)) as R3M36,sum(isnull(R3M37PN,0)) as
R3M37,sum(isnull(R3M38PN,0)) as R3M38,sum(isnull(R3M39PN,0)) as
R3M39,sum(isnull(R3M40PN,0)) as R3M40,sum(isnull(R3M41PN,0)) as
R3M41,sum(isnull(R3M42PN,0)) as R3M42,sum(isnull(R3M43PN,0)) as
R3M43,sum(isnull(R3M44PN,0)) as R3M44,sum(isnull(R3M45PN,0)) as
R3M45,sum(isnull(R3M46PN,0)) as R3M46,sum(isnull(R3M47PN,0)) as
R3M47,sum(isnull(R3M48PN,0)) as R3M48, sum(isnull(MTH00PN,0)) as
MTH00,sum(isnull(MTH01PN,0)) as MTH01,sum(isnull(MTH02PN,0)) as
MTH02,sum(isnull(MTH03PN,0)) as MTH03,sum(isnull(MTH04PN,0)) as
MTH04,sum(isnull(MTH05PN,0)) as MTH05,sum(isnull(MTH06PN,0)) as
MTH06,sum(isnull(MTH07PN,0)) as MTH07,sum(isnull(MTH08PN,0)) as
MTH08,sum(isnull(MTH09PN,0)) as MTH09,sum(isnull(MTH10PN,0)) as
MTH10,sum(isnull(MTH11PN,0)) as MTH11,sum(isnull(MTH12PN,0)) as
MTH12,sum(isnull(MTH13PN,0)) as MTH13,sum(isnull(MTH14PN,0)) as
MTH14,sum(isnull(MTH15PN,0)) as MTH15,sum(isnull(MTH16PN,0)) as
MTH16,sum(isnull(MTH17PN,0)) as MTH17,sum(isnull(MTH18PN,0)) as
MTH18,sum(isnull(MTH19PN,0)) as MTH19,sum(isnull(MTH20PN,0)) as
MTH20,sum(isnull(MTH21PN,0)) as MTH21,sum(isnull(MTH22PN,0)) as
MTH22,sum(isnull(MTH23PN,0)) as MTH23,sum(isnull(MTH24PN,0)) as
MTH24,sum(isnull(MTH25PN,0)) as MTH25,sum(isnull(MTH26PN,0)) as
MTH26,sum(isnull(MTH27PN,0)) as MTH27,sum(isnull(MTH28PN,0)) as
MTH28,sum(isnull(MTH29PN,0)) as MTH29,sum(isnull(MTH30PN,0)) as
MTH30,sum(isnull(MTH31PN,0)) as MTH31,sum(isnull(MTH32PN,0)) as
MTH32,sum(isnull(MTH33PN,0)) as MTH33,sum(isnull(MTH34PN,0)) as
MTH34,sum(isnull(MTH35PN,0)) as MTH35,sum(isnull(MTH36PN,0)) as
MTH36,sum(isnull(MTH37PN,0)) as MTH37,sum(isnull(MTH38PN,0)) as
MTH38,sum(isnull(MTH39PN,0)) as MTH39,sum(isnull(MTH40PN,0)) as
MTH40,sum(isnull(MTH41PN,0)) as MTH41,sum(isnull(MTH42PN,0)) as
MTH42,sum(isnull(MTH43PN,0)) as MTH43,sum(isnull(MTH44PN,0)) as
MTH44,sum(isnull(MTH45PN,0)) as MTH45,sum(isnull(MTH46PN,0)) as
MTH46,sum(isnull(MTH47PN,0)) as MTH47,sum(isnull(MTH48PN,0)) as MTH48,
sum(isnull(MAT00PN,0)) as MAT00,sum(isnull(MAT01PN,0)) as
MAT01,sum(isnull(MAT02PN,0)) as MAT02,sum(isnull(MAT03PN,0)) as
MAT03,sum(isnull(MAT04PN,0)) as MAT04,sum(isnull(MAT05PN,0)) as
MAT05,sum(isnull(MAT06PN,0)) as MAT06,sum(isnull(MAT07PN,0)) as
MAT07,sum(isnull(MAT08PN,0)) as MAT08,sum(isnull(MAT09PN,0)) as
MAT09,sum(isnull(MAT10PN,0)) as MAT10,sum(isnull(MAT11PN,0)) as
MAT11,sum(isnull(MAT12PN,0)) as MAT12,sum(isnull(MAT13PN,0)) as
MAT13,sum(isnull(MAT14PN,0)) as MAT14,sum(isnull(MAT15PN,0)) as
MAT15,sum(isnull(MAT16PN,0)) as MAT16,sum(isnull(MAT17PN,0)) as
MAT17,sum(isnull(MAT18PN,0)) as MAT18,sum(isnull(MAT19PN,0)) as
MAT19,sum(isnull(MAT20PN,0)) as MAT20,sum(isnull(MAT21PN,0)) as
MAT21,sum(isnull(MAT22PN,0)) as MAT22,sum(isnull(MAT23PN,0)) as
MAT23,sum(isnull(MAT24PN,0)) as MAT24,sum(isnull(MAT25PN,0)) as
MAT25,sum(isnull(MAT26PN,0)) as MAT26,sum(isnull(MAT27PN,0)) as
MAT27,sum(isnull(MAT28PN,0)) as MAT28,sum(isnull(MAT29PN,0)) as
MAT29,sum(isnull(MAT30PN,0)) as MAT30,sum(isnull(MAT31PN,0)) as
MAT31,sum(isnull(MAT32PN,0)) as MAT32,sum(isnull(MAT33PN,0)) as
MAT33,sum(isnull(MAT34PN,0)) as MAT34,sum(isnull(MAT35PN,0)) as
MAT35,sum(isnull(MAT36PN,0)) as MAT36,sum(isnull(MAT37PN,0)) as
MAT37,sum(isnull(MAT38PN,0)) as MAT38,sum(isnull(MAT39PN,0)) as
MAT39,sum(isnull(MAT40PN,0)) as MAT40,sum(isnull(MAT41PN,0)) as
MAT41,sum(isnull(MAT42PN,0)) as MAT42,sum(isnull(MAT43PN,0)) as
MAT43,sum(isnull(MAT44PN,0)) as MAT44,sum(isnull(MAT45PN,0)) as
MAT45,sum(isnull(MAT46PN,0)) as MAT46,sum(isnull(MAT47PN,0)) as
MAT47,sum(isnull(MAT48PN,0)) as MAT48, sum(isnull(YTD00PN,0)) as
YTD00,sum(isnull(YTD01PN,0)) as YTD01,sum(isnull(YTD02PN,0)) as
YTD02,sum(isnull(YTD03PN,0)) as YTD03,sum(isnull(YTD04PN,0)) as
YTD04,sum(isnull(YTD05PN,0)) as YTD05,sum(isnull(YTD06PN,0)) as
YTD06,sum(isnull(YTD07PN,0)) as YTD07,sum(isnull(YTD08PN,0)) as
YTD08,sum(isnull(YTD09PN,0)) as YTD09,sum(isnull(YTD10PN,0)) as
YTD10,sum(isnull(YTD11PN,0)) as YTD11,sum(isnull(YTD12PN,0)) as
YTD12,sum(isnull(YTD13PN,0)) as YTD13,sum(isnull(YTD14PN,0)) as
YTD14,sum(isnull(YTD15PN,0)) as YTD15,sum(isnull(YTD16PN,0)) as
YTD16,sum(isnull(YTD17PN,0)) as YTD17,sum(isnull(YTD18PN,0)) as
YTD18,sum(isnull(YTD19PN,0)) as YTD19,sum(isnull(YTD20PN,0)) as
YTD20,sum(isnull(YTD21PN,0)) as YTD21,sum(isnull(YTD22PN,0)) as
YTD22,sum(isnull(YTD23PN,0)) as YTD23,sum(isnull(YTD24PN,0)) as
YTD24,sum(isnull(YTD25PN,0)) as YTD25,sum(isnull(YTD26PN,0)) as
YTD26,sum(isnull(YTD27PN,0)) as YTD27,sum(isnull(YTD28PN,0)) as
YTD28,sum(isnull(YTD29PN,0)) as YTD29,sum(isnull(YTD30PN,0)) as
YTD30,sum(isnull(YTD31PN,0)) as YTD31,sum(isnull(YTD32PN,0)) as
YTD32,sum(isnull(YTD33PN,0)) as YTD33,sum(isnull(YTD34PN,0)) as
YTD34,sum(isnull(YTD35PN,0)) as YTD35,sum(isnull(YTD36PN,0)) as
YTD36,sum(isnull(YTD37PN,0)) as YTD37,sum(isnull(YTD38PN,0)) as
YTD38,sum(isnull(YTD39PN,0)) as YTD39,sum(isnull(YTD40PN,0)) as
YTD40,sum(isnull(YTD41PN,0)) as YTD41,sum(isnull(YTD42PN,0)) as
YTD42,sum(isnull(YTD43PN,0)) as YTD43,sum(isnull(YTD44PN,0)) as
YTD44,sum(isnull(YTD45PN,0)) as YTD45,sum(isnull(YTD46PN,0)) as
YTD46,sum(isnull(YTD47PN,0)) as YTD47,sum(isnull(YTD48PN,0)) as YTD48,
sum(isnull(Qtr00PN,0)) as Qtr00,sum(isnull(Qtr01PN,0)) as
Qtr01,sum(isnull(Qtr02PN,0)) as Qtr02,sum(isnull(Qtr03PN,0)) as
Qtr03,sum(isnull(Qtr04PN,0)) as Qtr04,sum(isnull(Qtr05PN,0)) as
Qtr05,sum(isnull(Qtr06PN,0)) as Qtr06,sum(isnull(Qtr07PN,0)) as
Qtr07,sum(isnull(Qtr08PN,0)) as Qtr08,sum(isnull(Qtr09PN,0)) as
Qtr09,sum(isnull(Qtr10PN,0)) as Qtr10,sum(isnull(Qtr11PN,0)) as
Qtr11,sum(isnull(Qtr12PN,0)) as Qtr12,sum(isnull(Qtr13PN,0)) as
Qtr13,sum(isnull(Qtr14PN,0)) as Qtr14,sum(isnull(Qtr15PN,0)) as
Qtr15,sum(isnull(Qtr16PN,0)) as Qtr16,sum(isnull(Qtr17PN,0)) as
Qtr17,sum(isnull(Qtr18PN,0)) as Qtr18,sum(isnull(Qtr19PN,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina_Mole B
on A.pack_cod=B.pack_cod where B.Active='Y'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(18 rows affected)
US
insert into TempCHPAPreReports_Mole 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'US' as Moneytype, sum(isnull(R3M00US,0)) as R3M00,sum(isnull(R3M01US,0)) as
R3M01,sum(isnull(R3M02US,0)) as R3M02,sum(isnull(R3M03US,0)) as
R3M03,sum(isnull(R3M04US,0)) as R3M04,sum(isnull(R3M05US,0)) as
R3M05,sum(isnull(R3M06US,0)) as R3M06,sum(isnull(R3M07US,0)) as
R3M07,sum(isnull(R3M08US,0)) as R3M08,sum(isnull(R3M09US,0)) as
R3M09,sum(isnull(R3M10US,0)) as R3M10,sum(isnull(R3M11US,0)) as
R3M11,sum(isnull(R3M12US,0)) as R3M12,sum(isnull(R3M13US,0)) as
R3M13,sum(isnull(R3M14US,0)) as R3M14,sum(isnull(R3M15US,0)) as
R3M15,sum(isnull(R3M16US,0)) as R3M16,sum(isnull(R3M17US,0)) as
R3M17,sum(isnull(R3M18US,0)) as R3M18,sum(isnull(R3M19US,0)) as
R3M19,sum(isnull(R3M20US,0)) as R3M20,sum(isnull(R3M21US,0)) as
R3M21,sum(isnull(R3M22US,0)) as R3M22,sum(isnull(R3M23US,0)) as
R3M23,sum(isnull(R3M24US,0)) as R3M24,sum(isnull(R3M25US,0)) as
R3M25,sum(isnull(R3M26US,0)) as R3M26,sum(isnull(R3M27US,0)) as
R3M27,sum(isnull(R3M28US,0)) as R3M28,sum(isnull(R3M29US,0)) as
R3M29,sum(isnull(R3M30US,0)) as R3M30,sum(isnull(R3M31US,0)) as
R3M31,sum(isnull(R3M32US,0)) as R3M32,sum(isnull(R3M33US,0)) as
R3M33,sum(isnull(R3M34US,0)) as R3M34,sum(isnull(R3M35US,0)) as
R3M35,sum(isnull(R3M36US,0)) as R3M36,sum(isnull(R3M37US,0)) as
R3M37,sum(isnull(R3M38US,0)) as R3M38,sum(isnull(R3M39US,0)) as
R3M39,sum(isnull(R3M40US,0)) as R3M40,sum(isnull(R3M41US,0)) as
R3M41,sum(isnull(R3M42US,0)) as R3M42,sum(isnull(R3M43US,0)) as
R3M43,sum(isnull(R3M44US,0)) as R3M44,sum(isnull(R3M45US,0)) as
R3M45,sum(isnull(R3M46US,0)) as R3M46,sum(isnull(R3M47US,0)) as
R3M47,sum(isnull(R3M48US,0)) as R3M48, sum(isnull(MTH00US,0)) as
MTH00,sum(isnull(MTH01US,0)) as MTH01,sum(isnull(MTH02US,0)) as
MTH02,sum(isnull(MTH03US,0)) as MTH03,sum(isnull(MTH04US,0)) as
MTH04,sum(isnull(MTH05US,0)) as MTH05,sum(isnull(MTH06US,0)) as
MTH06,sum(isnull(MTH07US,0)) as MTH07,sum(isnull(MTH08US,0)) as
MTH08,sum(isnull(MTH09US,0)) as MTH09,sum(isnull(MTH10US,0)) as
MTH10,sum(isnull(MTH11US,0)) as MTH11,sum(isnull(MTH12US,0)) as
MTH12,sum(isnull(MTH13US,0)) as MTH13,sum(isnull(MTH14US,0)) as
MTH14,sum(isnull(MTH15US,0)) as MTH15,sum(isnull(MTH16US,0)) as
MTH16,sum(isnull(MTH17US,0)) as MTH17,sum(isnull(MTH18US,0)) as
MTH18,sum(isnull(MTH19US,0)) as MTH19,sum(isnull(MTH20US,0)) as
MTH20,sum(isnull(MTH21US,0)) as MTH21,sum(isnull(MTH22US,0)) as
MTH22,sum(isnull(MTH23US,0)) as MTH23,sum(isnull(MTH24US,0)) as
MTH24,sum(isnull(MTH25US,0)) as MTH25,sum(isnull(MTH26US,0)) as
MTH26,sum(isnull(MTH27US,0)) as MTH27,sum(isnull(MTH28US,0)) as
MTH28,sum(isnull(MTH29US,0)) as MTH29,sum(isnull(MTH30US,0)) as
MTH30,sum(isnull(MTH31US,0)) as MTH31,sum(isnull(MTH32US,0)) as
MTH32,sum(isnull(MTH33US,0)) as MTH33,sum(isnull(MTH34US,0)) as
MTH34,sum(isnull(MTH35US,0)) as MTH35,sum(isnull(MTH36US,0)) as
MTH36,sum(isnull(MTH37US,0)) as MTH37,sum(isnull(MTH38US,0)) as
MTH38,sum(isnull(MTH39US,0)) as MTH39,sum(isnull(MTH40US,0)) as
MTH40,sum(isnull(MTH41US,0)) as MTH41,sum(isnull(MTH42US,0)) as
MTH42,sum(isnull(MTH43US,0)) as MTH43,sum(isnull(MTH44US,0)) as
MTH44,sum(isnull(MTH45US,0)) as MTH45,sum(isnull(MTH46US,0)) as
MTH46,sum(isnull(MTH47US,0)) as MTH47,sum(isnull(MTH48US,0)) as MTH48,
sum(isnull(MAT00US,0)) as MAT00,sum(isnull(MAT01US,0)) as
MAT01,sum(isnull(MAT02US,0)) as MAT02,sum(isnull(MAT03US,0)) as
MAT03,sum(isnull(MAT04US,0)) as MAT04,sum(isnull(MAT05US,0)) as
MAT05,sum(isnull(MAT06US,0)) as MAT06,sum(isnull(MAT07US,0)) as
MAT07,sum(isnull(MAT08US,0)) as MAT08,sum(isnull(MAT09US,0)) as
MAT09,sum(isnull(MAT10US,0)) as MAT10,sum(isnull(MAT11US,0)) as
MAT11,sum(isnull(MAT12US,0)) as MAT12,sum(isnull(MAT13US,0)) as
MAT13,sum(isnull(MAT14US,0)) as MAT14,sum(isnull(MAT15US,0)) as
MAT15,sum(isnull(MAT16US,0)) as MAT16,sum(isnull(MAT17US,0)) as
MAT17,sum(isnull(MAT18US,0)) as MAT18,sum(isnull(MAT19US,0)) as
MAT19,sum(isnull(MAT20US,0)) as MAT20,sum(isnull(MAT21US,0)) as
MAT21,sum(isnull(MAT22US,0)) as MAT22,sum(isnull(MAT23US,0)) as
MAT23,sum(isnull(MAT24US,0)) as MAT24,sum(isnull(MAT25US,0)) as
MAT25,sum(isnull(MAT26US,0)) as MAT26,sum(isnull(MAT27US,0)) as
MAT27,sum(isnull(MAT28US,0)) as MAT28,sum(isnull(MAT29US,0)) as
MAT29,sum(isnull(MAT30US,0)) as MAT30,sum(isnull(MAT31US,0)) as
MAT31,sum(isnull(MAT32US,0)) as MAT32,sum(isnull(MAT33US,0)) as
MAT33,sum(isnull(MAT34US,0)) as MAT34,sum(isnull(MAT35US,0)) as
MAT35,sum(isnull(MAT36US,0)) as MAT36,sum(isnull(MAT37US,0)) as
MAT37,sum(isnull(MAT38US,0)) as MAT38,sum(isnull(MAT39US,0)) as
MAT39,sum(isnull(MAT40US,0)) as MAT40,sum(isnull(MAT41US,0)) as
MAT41,sum(isnull(MAT42US,0)) as MAT42,sum(isnull(MAT43US,0)) as
MAT43,sum(isnull(MAT44US,0)) as MAT44,sum(isnull(MAT45US,0)) as
MAT45,sum(isnull(MAT46US,0)) as MAT46,sum(isnull(MAT47US,0)) as
MAT47,sum(isnull(MAT48US,0)) as MAT48, sum(isnull(YTD00US,0)) as
YTD00,sum(isnull(YTD01US,0)) as YTD01,sum(isnull(YTD02US,0)) as
YTD02,sum(isnull(YTD03US,0)) as YTD03,sum(isnull(YTD04US,0)) as
YTD04,sum(isnull(YTD05US,0)) as YTD05,sum(isnull(YTD06US,0)) as
YTD06,sum(isnull(YTD07US,0)) as YTD07,sum(isnull(YTD08US,0)) as
YTD08,sum(isnull(YTD09US,0)) as YTD09,sum(isnull(YTD10US,0)) as
YTD10,sum(isnull(YTD11US,0)) as YTD11,sum(isnull(YTD12US,0)) as
YTD12,sum(isnull(YTD13US,0)) as YTD13,sum(isnull(YTD14US,0)) as
YTD14,sum(isnull(YTD15US,0)) as YTD15,sum(isnull(YTD16US,0)) as
YTD16,sum(isnull(YTD17US,0)) as YTD17,sum(isnull(YTD18US,0)) as
YTD18,sum(isnull(YTD19US,0)) as YTD19,sum(isnull(YTD20US,0)) as
YTD20,sum(isnull(YTD21US,0)) as YTD21,sum(isnull(YTD22US,0)) as
YTD22,sum(isnull(YTD23US,0)) as YTD23,sum(isnull(YTD24US,0)) as
YTD24,sum(isnull(YTD25US,0)) as YTD25,sum(isnull(YTD26US,0)) as
YTD26,sum(isnull(YTD27US,0)) as YTD27,sum(isnull(YTD28US,0)) as
YTD28,sum(isnull(YTD29US,0)) as YTD29,sum(isnull(YTD30US,0)) as
YTD30,sum(isnull(YTD31US,0)) as YTD31,sum(isnull(YTD32US,0)) as
YTD32,sum(isnull(YTD33US,0)) as YTD33,sum(isnull(YTD34US,0)) as
YTD34,sum(isnull(YTD35US,0)) as YTD35,sum(isnull(YTD36US,0)) as
YTD36,sum(isnull(YTD37US,0)) as YTD37,sum(isnull(YTD38US,0)) as
YTD38,sum(isnull(YTD39US,0)) as YTD39,sum(isnull(YTD40US,0)) as
YTD40,sum(isnull(YTD41US,0)) as YTD41,sum(isnull(YTD42US,0)) as
YTD42,sum(isnull(YTD43US,0)) as YTD43,sum(isnull(YTD44US,0)) as
YTD44,sum(isnull(YTD45US,0)) as YTD45,sum(isnull(YTD46US,0)) as
YTD46,sum(isnull(YTD47US,0)) as YTD47,sum(isnull(YTD48US,0)) as YTD48,
sum(isnull(Qtr00US,0)) as Qtr00,sum(isnull(Qtr01US,0)) as
Qtr01,sum(isnull(Qtr02US,0)) as Qtr02,sum(isnull(Qtr03US,0)) as
Qtr03,sum(isnull(Qtr04US,0)) as Qtr04,sum(isnull(Qtr05US,0)) as
Qtr05,sum(isnull(Qtr06US,0)) as Qtr06,sum(isnull(Qtr07US,0)) as
Qtr07,sum(isnull(Qtr08US,0)) as Qtr08,sum(isnull(Qtr09US,0)) as
Qtr09,sum(isnull(Qtr10US,0)) as Qtr10,sum(isnull(Qtr11US,0)) as
Qtr11,sum(isnull(Qtr12US,0)) as Qtr12,sum(isnull(Qtr13US,0)) as
Qtr13,sum(isnull(Qtr14US,0)) as Qtr14,sum(isnull(Qtr15US,0)) as
Qtr15,sum(isnull(Qtr16US,0)) as Qtr16,sum(isnull(Qtr17US,0)) as
Qtr17,sum(isnull(Qtr18US,0)) as Qtr18,sum(isnull(Qtr19US,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina_Mole B
on A.pack_cod=B.pack_cod where B.Active='Y'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(18 rows affected)
LC
insert into TempCHPAPreReports_Mole 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'LC' as Moneytype, sum(isnull(R3M00LC,0)) as R3M00,sum(isnull(R3M01LC,0)) as
R3M01,sum(isnull(R3M02LC,0)) as R3M02,sum(isnull(R3M03LC,0)) as
R3M03,sum(isnull(R3M04LC,0)) as R3M04,sum(isnull(R3M05LC,0)) as
R3M05,sum(isnull(R3M06LC,0)) as R3M06,sum(isnull(R3M07LC,0)) as
R3M07,sum(isnull(R3M08LC,0)) as R3M08,sum(isnull(R3M09LC,0)) as
R3M09,sum(isnull(R3M10LC,0)) as R3M10,sum(isnull(R3M11LC,0)) as
R3M11,sum(isnull(R3M12LC,0)) as R3M12,sum(isnull(R3M13LC,0)) as
R3M13,sum(isnull(R3M14LC,0)) as R3M14,sum(isnull(R3M15LC,0)) as
R3M15,sum(isnull(R3M16LC,0)) as R3M16,sum(isnull(R3M17LC,0)) as
R3M17,sum(isnull(R3M18LC,0)) as R3M18,sum(isnull(R3M19LC,0)) as
R3M19,sum(isnull(R3M20LC,0)) as R3M20,sum(isnull(R3M21LC,0)) as
R3M21,sum(isnull(R3M22LC,0)) as R3M22,sum(isnull(R3M23LC,0)) as
R3M23,sum(isnull(R3M24LC,0)) as R3M24,sum(isnull(R3M25LC,0)) as
R3M25,sum(isnull(R3M26LC,0)) as R3M26,sum(isnull(R3M27LC,0)) as
R3M27,sum(isnull(R3M28LC,0)) as R3M28,sum(isnull(R3M29LC,0)) as
R3M29,sum(isnull(R3M30LC,0)) as R3M30,sum(isnull(R3M31LC,0)) as
R3M31,sum(isnull(R3M32LC,0)) as R3M32,sum(isnull(R3M33LC,0)) as
R3M33,sum(isnull(R3M34LC,0)) as R3M34,sum(isnull(R3M35LC,0)) as
R3M35,sum(isnull(R3M36LC,0)) as R3M36,sum(isnull(R3M37LC,0)) as
R3M37,sum(isnull(R3M38LC,0)) as R3M38,sum(isnull(R3M39LC,0)) as
R3M39,sum(isnull(R3M40LC,0)) as R3M40,sum(isnull(R3M41LC,0)) as
R3M41,sum(isnull(R3M42LC,0)) as R3M42,sum(isnull(R3M43LC,0)) as
R3M43,sum(isnull(R3M44LC,0)) as R3M44,sum(isnull(R3M45LC,0)) as
R3M45,sum(isnull(R3M46LC,0)) as R3M46,sum(isnull(R3M47LC,0)) as
R3M47,sum(isnull(R3M48LC,0)) as R3M48, sum(isnull(MTH00LC,0)) as
MTH00,sum(isnull(MTH01LC,0)) as MTH01,sum(isnull(MTH02LC,0)) as
MTH02,sum(isnull(MTH03LC,0)) as MTH03,sum(isnull(MTH04LC,0)) as
MTH04,sum(isnull(MTH05LC,0)) as MTH05,sum(isnull(MTH06LC,0)) as
MTH06,sum(isnull(MTH07LC,0)) as MTH07,sum(isnull(MTH08LC,0)) as
MTH08,sum(isnull(MTH09LC,0)) as MTH09,sum(isnull(MTH10LC,0)) as
MTH10,sum(isnull(MTH11LC,0)) as MTH11,sum(isnull(MTH12LC,0)) as
MTH12,sum(isnull(MTH13LC,0)) as MTH13,sum(isnull(MTH14LC,0)) as
MTH14,sum(isnull(MTH15LC,0)) as MTH15,sum(isnull(MTH16LC,0)) as
MTH16,sum(isnull(MTH17LC,0)) as MTH17,sum(isnull(MTH18LC,0)) as
MTH18,sum(isnull(MTH19LC,0)) as MTH19,sum(isnull(MTH20LC,0)) as
MTH20,sum(isnull(MTH21LC,0)) as MTH21,sum(isnull(MTH22LC,0)) as
MTH22,sum(isnull(MTH23LC,0)) as MTH23,sum(isnull(MTH24LC,0)) as
MTH24,sum(isnull(MTH25LC,0)) as MTH25,sum(isnull(MTH26LC,0)) as
MTH26,sum(isnull(MTH27LC,0)) as MTH27,sum(isnull(MTH28LC,0)) as
MTH28,sum(isnull(MTH29LC,0)) as MTH29,sum(isnull(MTH30LC,0)) as
MTH30,sum(isnull(MTH31LC,0)) as MTH31,sum(isnull(MTH32LC,0)) as
MTH32,sum(isnull(MTH33LC,0)) as MTH33,sum(isnull(MTH34LC,0)) as
MTH34,sum(isnull(MTH35LC,0)) as MTH35,sum(isnull(MTH36LC,0)) as
MTH36,sum(isnull(MTH37LC,0)) as MTH37,sum(isnull(MTH38LC,0)) as
MTH38,sum(isnull(MTH39LC,0)) as MTH39,sum(isnull(MTH40LC,0)) as
MTH40,sum(isnull(MTH41LC,0)) as MTH41,sum(isnull(MTH42LC,0)) as
MTH42,sum(isnull(MTH43LC,0)) as MTH43,sum(isnull(MTH44LC,0)) as
MTH44,sum(isnull(MTH45LC,0)) as MTH45,sum(isnull(MTH46LC,0)) as
MTH46,sum(isnull(MTH47LC,0)) as MTH47,sum(isnull(MTH48LC,0)) as MTH48,
sum(isnull(MAT00LC,0)) as MAT00,sum(isnull(MAT01LC,0)) as
MAT01,sum(isnull(MAT02LC,0)) as MAT02,sum(isnull(MAT03LC,0)) as
MAT03,sum(isnull(MAT04LC,0)) as MAT04,sum(isnull(MAT05LC,0)) as
MAT05,sum(isnull(MAT06LC,0)) as MAT06,sum(isnull(MAT07LC,0)) as
MAT07,sum(isnull(MAT08LC,0)) as MAT08,sum(isnull(MAT09LC,0)) as
MAT09,sum(isnull(MAT10LC,0)) as MAT10,sum(isnull(MAT11LC,0)) as
MAT11,sum(isnull(MAT12LC,0)) as MAT12,sum(isnull(MAT13LC,0)) as
MAT13,sum(isnull(MAT14LC,0)) as MAT14,sum(isnull(MAT15LC,0)) as
MAT15,sum(isnull(MAT16LC,0)) as MAT16,sum(isnull(MAT17LC,0)) as
MAT17,sum(isnull(MAT18LC,0)) as MAT18,sum(isnull(MAT19LC,0)) as
MAT19,sum(isnull(MAT20LC,0)) as MAT20,sum(isnull(MAT21LC,0)) as
MAT21,sum(isnull(MAT22LC,0)) as MAT22,sum(isnull(MAT23LC,0)) as
MAT23,sum(isnull(MAT24LC,0)) as MAT24,sum(isnull(MAT25LC,0)) as
MAT25,sum(isnull(MAT26LC,0)) as MAT26,sum(isnull(MAT27LC,0)) as
MAT27,sum(isnull(MAT28LC,0)) as MAT28,sum(isnull(MAT29LC,0)) as
MAT29,sum(isnull(MAT30LC,0)) as MAT30,sum(isnull(MAT31LC,0)) as
MAT31,sum(isnull(MAT32LC,0)) as MAT32,sum(isnull(MAT33LC,0)) as
MAT33,sum(isnull(MAT34LC,0)) as MAT34,sum(isnull(MAT35LC,0)) as
MAT35,sum(isnull(MAT36LC,0)) as MAT36,sum(isnull(MAT37LC,0)) as
MAT37,sum(isnull(MAT38LC,0)) as MAT38,sum(isnull(MAT39LC,0)) as
MAT39,sum(isnull(MAT40LC,0)) as MAT40,sum(isnull(MAT41LC,0)) as
MAT41,sum(isnull(MAT42LC,0)) as MAT42,sum(isnull(MAT43LC,0)) as
MAT43,sum(isnull(MAT44LC,0)) as MAT44,sum(isnull(MAT45LC,0)) as
MAT45,sum(isnull(MAT46LC,0)) as MAT46,sum(isnull(MAT47LC,0)) as
MAT47,sum(isnull(MAT48LC,0)) as MAT48, sum(isnull(YTD00LC,0)) as
YTD00,sum(isnull(YTD01LC,0)) as YTD01,sum(isnull(YTD02LC,0)) as
YTD02,sum(isnull(YTD03LC,0)) as YTD03,sum(isnull(YTD04LC,0)) as
YTD04,sum(isnull(YTD05LC,0)) as YTD05,sum(isnull(YTD06LC,0)) as
YTD06,sum(isnull(YTD07LC,0)) as YTD07,sum(isnull(YTD08LC,0)) as
YTD08,sum(isnull(YTD09LC,0)) as YTD09,sum(isnull(YTD10LC,0)) as
YTD10,sum(isnull(YTD11LC,0)) as YTD11,sum(isnull(YTD12LC,0)) as
YTD12,sum(isnull(YTD13LC,0)) as YTD13,sum(isnull(YTD14LC,0)) as
YTD14,sum(isnull(YTD15LC,0)) as YTD15,sum(isnull(YTD16LC,0)) as
YTD16,sum(isnull(YTD17LC,0)) as YTD17,sum(isnull(YTD18LC,0)) as
YTD18,sum(isnull(YTD19LC,0)) as YTD19,sum(isnull(YTD20LC,0)) as
YTD20,sum(isnull(YTD21LC,0)) as YTD21,sum(isnull(YTD22LC,0)) as
YTD22,sum(isnull(YTD23LC,0)) as YTD23,sum(isnull(YTD24LC,0)) as
YTD24,sum(isnull(YTD25LC,0)) as YTD25,sum(isnull(YTD26LC,0)) as
YTD26,sum(isnull(YTD27LC,0)) as YTD27,sum(isnull(YTD28LC,0)) as
YTD28,sum(isnull(YTD29LC,0)) as YTD29,sum(isnull(YTD30LC,0)) as
YTD30,sum(isnull(YTD31LC,0)) as YTD31,sum(isnull(YTD32LC,0)) as
YTD32,sum(isnull(YTD33LC,0)) as YTD33,sum(isnull(YTD34LC,0)) as
YTD34,sum(isnull(YTD35LC,0)) as YTD35,sum(isnull(YTD36LC,0)) as
YTD36,sum(isnull(YTD37LC,0)) as YTD37,sum(isnull(YTD38LC,0)) as
YTD38,sum(isnull(YTD39LC,0)) as YTD39,sum(isnull(YTD40LC,0)) as
YTD40,sum(isnull(YTD41LC,0)) as YTD41,sum(isnull(YTD42LC,0)) as
YTD42,sum(isnull(YTD43LC,0)) as YTD43,sum(isnull(YTD44LC,0)) as
YTD44,sum(isnull(YTD45LC,0)) as YTD45,sum(isnull(YTD46LC,0)) as
YTD46,sum(isnull(YTD47LC,0)) as YTD47,sum(isnull(YTD48LC,0)) as YTD48,
sum(isnull(Qtr00LC,0)) as Qtr00,sum(isnull(Qtr01LC,0)) as
Qtr01,sum(isnull(Qtr02LC,0)) as Qtr02,sum(isnull(Qtr03LC,0)) as
Qtr03,sum(isnull(Qtr04LC,0)) as Qtr04,sum(isnull(Qtr05LC,0)) as
Qtr05,sum(isnull(Qtr06LC,0)) as Qtr06,sum(isnull(Qtr07LC,0)) as
Qtr07,sum(isnull(Qtr08LC,0)) as Qtr08,sum(isnull(Qtr09LC,0)) as
Qtr09,sum(isnull(Qtr10LC,0)) as Qtr10,sum(isnull(Qtr11LC,0)) as
Qtr11,sum(isnull(Qtr12LC,0)) as Qtr12,sum(isnull(Qtr13LC,0)) as
Qtr13,sum(isnull(Qtr14LC,0)) as Qtr14,sum(isnull(Qtr15LC,0)) as
Qtr15,sum(isnull(Qtr16LC,0)) as Qtr16,sum(isnull(Qtr17LC,0)) as
Qtr17,sum(isnull(Qtr18LC,0)) as Qtr18,sum(isnull(Qtr19LC,0)) as Qtr19
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina_Mole B
on A.pack_cod=B.pack_cod where B.Active='Y'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(18 rows affected)
UN
insert into TempCHPAPreReports_Mole 
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
--         A.MNFL_COD,B.Gene_cod,
'UN' as Moneytype, sum(isnull(R3M00UN/b.rat,0)) as
R3M00,sum(isnull(R3M01UN/b.rat,0)) as R3M01,sum(isnull(R3M02UN/b.rat,0)) as
R3M02,sum(isnull(R3M03UN/b.rat,0)) as R3M03,sum(isnull(R3M04UN/b.rat,0)) as
R3M04,sum(isnull(R3M05UN/b.rat,0)) as R3M05,sum(isnull(R3M06UN/b.rat,0)) as
R3M06,sum(isnull(R3M07UN/b.rat,0)) as R3M07,sum(isnull(R3M08UN/b.rat,0)) as
R3M08,sum(isnull(R3M09UN/b.rat,0)) as R3M09,sum(isnull(R3M10UN/b.rat,0)) as
R3M10,sum(isnull(R3M11UN/b.rat,0)) as R3M11,sum(isnull(R3M12UN/b.rat,0)) as
R3M12,sum(isnull(R3M13UN/b.rat,0)) as R3M13,sum(isnull(R3M14UN/b.rat,0)) as
R3M14,sum(isnull(R3M15UN/b.rat,0)) as R3M15,sum(isnull(R3M16UN/b.rat,0)) as
R3M16,sum(isnull(R3M17UN/b.rat,0)) as R3M17,sum(isnull(R3M18UN/b.rat,0)) as
R3M18,sum(isnull(R3M19UN/b.rat,0)) as R3M19,sum(isnull(R3M20UN/b.rat,0)) as
R3M20,sum(isnull(R3M21UN/b.rat,0)) as R3M21,sum(isnull(R3M22UN/b.rat,0)) as
R3M22,sum(isnull(R3M23UN/b.rat,0)) as R3M23,sum(isnull(R3M24UN/b.rat,0)) as
R3M24,sum(isnull(R3M25UN/b.rat,0)) as R3M25,sum(isnull(R3M26UN/b.rat,0)) as
R3M26,sum(isnull(R3M27UN/b.rat,0)) as R3M27,sum(isnull(R3M28UN/b.rat,0)) as
R3M28,sum(isnull(R3M29UN/b.rat,0)) as R3M29,sum(isnull(R3M30UN/b.rat,0)) as
R3M30,sum(isnull(R3M31UN/b.rat,0)) as R3M31,sum(isnull(R3M32UN/b.rat,0)) as
R3M32,sum(isnull(R3M33UN/b.rat,0)) as R3M33,sum(isnull(R3M34UN/b.rat,0)) as
R3M34,sum(isnull(R3M35UN/b.rat,0)) as R3M35,sum(isnull(R3M36UN/b.rat,0)) as
R3M36,sum(isnull(R3M37UN/b.rat,0)) as R3M37,sum(isnull(R3M38UN/b.rat,0)) as
R3M38,sum(isnull(R3M39UN/b.rat,0)) as R3M39,sum(isnull(R3M40UN/b.rat,0)) as
R3M40,sum(isnull(R3M41UN/b.rat,0)) as R3M41,sum(isnull(R3M42UN/b.rat,0)) as
R3M42,sum(isnull(R3M43UN/b.rat,0)) as R3M43,sum(isnull(R3M44UN/b.rat,0)) as
R3M44,sum(isnull(R3M45UN/b.rat,0)) as R3M45,sum(isnull(R3M46UN/b.rat,0)) as
R3M46,sum(isnull(R3M47UN/b.rat,0)) as R3M47,sum(isnull(R3M48UN/b.rat,0)) as
R3M48, sum(isnull(MTH00UN/b.rat,0)) as MTH00,sum(isnull(MTH01UN/b.rat,0)) as
MTH01,sum(isnull(MTH02UN/b.rat,0)) as MTH02,sum(isnull(MTH03UN/b.rat,0)) as
MTH03,sum(isnull(MTH04UN/b.rat,0)) as MTH04,sum(isnull(MTH05UN/b.rat,0)) as
MTH05,sum(isnull(MTH06UN/b.rat,0)) as MTH06,sum(isnull(MTH07UN/b.rat,0)) as
MTH07,sum(isnull(MTH08UN/b.rat,0)) as MTH08,sum(isnull(MTH09UN/b.rat,0)) as
MTH09,sum(isnull(MTH10UN/b.rat,0)) as MTH10,sum(isnull(MTH11UN/b.rat,0)) as
MTH11,sum(isnull(MTH12UN/b.rat,0)) as MTH12,sum(isnull(MTH13UN/b.rat,0)) as
MTH13,sum(isnull(MTH14UN/b.rat,0)) as MTH14,sum(isnull(MTH15UN/b.rat,0)) as
MTH15,sum(isnull(MTH16UN/b.rat,0)) as MTH16,sum(isnull(MTH17UN/b.rat,0)) as
MTH17,sum(isnull(MTH18UN/b.rat,0)) as MTH18,sum(isnull(MTH19UN/b.rat,0)) as
MTH19,sum(isnull(MTH20UN/b.rat,0)) as MTH20,sum(isnull(MTH21UN/b.rat,0)) as
MTH21,sum(isnull(MTH22UN/b.rat,0)) as MTH22,sum(isnull(MTH23UN/b.rat,0)) as
MTH23,sum(isnull(MTH24UN/b.rat,0)) as MTH24,sum(isnull(MTH25UN/b.rat,0)) as
MTH25,sum(isnull(MTH26UN/b.rat,0)) as MTH26,sum(isnull(MTH27UN/b.rat,0)) as
MTH27,sum(isnull(MTH28UN/b.rat,0)) as MTH28,sum(isnull(MTH29UN/b.rat,0)) as
MTH29,sum(isnull(MTH30UN/b.rat,0)) as MTH30,sum(isnull(MTH31UN/b.rat,0)) as
MTH31,sum(isnull(MTH32UN/b.rat,0)) as MTH32,sum(isnull(MTH33UN/b.rat,0)) as
MTH33,sum(isnull(MTH34UN/b.rat,0)) as MTH34,sum(isnull(MTH35UN/b.rat,0)) as
MTH35,sum(isnull(MTH36UN/b.rat,0)) as MTH36,sum(isnull(MTH37UN/b.rat,0)) as
MTH37,sum(isnull(MTH38UN/b.rat,0)) as MTH38,sum(isnull(MTH39UN/b.rat,0)) as
MTH39,sum(isnull(MTH40UN/b.rat,0)) as MTH40,sum(isnull(MTH41UN/b.rat,0)) as
MTH41,sum(isnull(MTH42UN/b.rat,0)) as MTH42,sum(isnull(MTH43UN/b.rat,0)) as
MTH43,sum(isnull(MTH44UN/b.rat,0)) as MTH44,sum(isnull(MTH45UN/b.rat,0)) as
MTH45,sum(isnull(MTH46UN/b.rat,0)) as MTH46,sum(isnull(MTH47UN/b.rat,0)) as
MTH47,sum(isnull(MTH48UN/b.rat,0)) as MTH48, sum(isnull(MAT00UN/b.rat,0)) as
MAT00,sum(isnull(MAT01UN/b.rat,0)) as MAT01,sum(isnull(MAT02UN/b.rat,0)) as
MAT02,sum(isnull(MAT03UN/b.rat,0)) as MAT03,sum(isnull(MAT04UN/b.rat,0)) as
MAT04,sum(isnull(MAT05UN/b.rat,0)) as MAT05,sum(isnull(MAT06UN/b.rat,0)) as
MAT06,sum(isnull(MAT07UN/b.rat,0)) as MAT07,sum(isnull(MAT08UN/b.rat,0)) as
MAT08,sum(isnull(MAT09UN/b.rat,0)) as MAT09,sum(isnull(MAT10UN/b.rat,0)) as
MAT10,sum(isnull(MAT11UN/b.rat,0)) as MAT11,sum(isnull(MAT12UN/b.rat,0)) as
MAT12,sum(isnull(MAT13UN/b.rat,0)) as MAT13,sum(isnull(MAT14UN/b.rat,0)) as
MAT14,sum(isnull(MAT15UN/b.rat,0)) as MAT15,sum(isnull(MAT16UN/b.rat,0)) as
MAT16,sum(isnull(MAT17UN/b.rat,0)) as MAT17,sum(isnull(MAT18UN/b.rat,0)) as
MAT18,sum(isnull(MAT19UN/b.rat,0)) as MAT19,sum(isnull(MAT20UN/b.rat,0)) as
MAT20,sum(isnull(MAT21UN/b.rat,0)) as MAT21,sum(isnull(MAT22UN/b.rat,0)) as
MAT22,sum(isnull(MAT23UN/b.rat,0)) as MAT23,sum(isnull(MAT24UN/b.rat,0)) as
MAT24,sum(isnull(MAT25UN/b.rat,0)) as MAT25,sum(isnull(MAT26UN/b.rat,0)) as
MAT26,sum(isnull(MAT27UN/b.rat,0)) as MAT27,sum(isnull(MAT28UN/b.rat,0)) as
MAT28,sum(isnull(MAT29UN/b.rat,0)) as MAT29,sum(isnull(MAT30UN/b.rat,0)) as
MAT30,sum(isnull(MAT31UN/b.rat,0)) as MAT31,sum(isnull(MAT32UN/b.rat,0)) as
MAT32,sum(isnull(MAT33UN/b.rat,0)) as MAT33,sum(isnull(MAT34UN/b.rat,0)) as
MAT34,sum(isnull(MAT35UN/b.rat,0)) as MAT35,sum(isnull(MAT36UN/b.rat,0)) as
MAT36,sum(isnull(MAT37UN/b.rat,0)) as MAT37,sum(isnull(MAT38UN/b.rat,0)) as
MAT38,sum(isnull(MAT39UN/b.rat,0)) as MAT39,sum(isnull(MAT40UN/b.rat,0)) as
MAT40,sum(isnull(MAT41UN/b.rat,0)) as MAT41,sum(isnull(MAT42UN/b.rat,0)) as
MAT42,sum(isnull(MAT43UN/b.rat,0)) as MAT43,sum(isnull(MAT44UN/b.rat,0)) as
MAT44,sum(isnull(MAT45UN/b.rat,0)) as MAT45,sum(isnull(MAT46UN/b.rat,0)) as
MAT46,sum(isnull(MAT47UN/b.rat,0)) as MAT47,sum(isnull(MAT48UN/b.rat,0)) as
MAT48, sum(isnull(YTD00UN/b.rat,0)) as YTD00,sum(isnull(YTD01UN/b.rat,0)) as
YTD01,sum(isnull(YTD02UN/b.rat,0)) as YTD02,sum(isnull(YTD03UN/b.rat,0)) as
YTD03,sum(isnull(YTD04UN/b.rat,0)) as YTD04,sum(isnull(YTD05UN/b.rat,0)) as
YTD05,sum(isnull(YTD06UN/b.rat,0)) as YTD06,sum(isnull(YTD07UN/b.rat,0)) as
YTD07,sum(isnull(YTD08UN/b.rat,0)) as YTD08,sum(isnull(YTD09UN/b.rat,0)) as
YTD09,sum(isnull(YTD10UN/b.rat,0)) as YTD10,sum(isnull(YTD11UN/b.rat,0)) as
YTD11,sum(isnull(YTD12UN/b.rat,0)) as YTD12,sum(isnull(YTD13UN/b.rat,0)) as
YTD13,sum(isnull(YTD14UN/b.rat,0)) as YTD14,sum(isnull(YTD15UN/b.rat,0)) as
YTD15,sum(isnull(YTD16UN/b.rat,0)) as YTD16,sum(isnull(YTD17UN/b.rat,0)) as
YTD17,sum(isnull(YTD18UN/b.rat,0)) as YTD18,sum(isnull(YTD19UN/b.rat,0)) as
YTD19,sum(isnull(YTD20UN/b.rat,0)) as YTD20,sum(isnull(YTD21UN/b.rat,0)) as
YTD21,sum(isnull(YTD22UN/b.rat,0)) as YTD22,sum(isnull(YTD23UN/b.rat,0)) as
YTD23,sum(isnull(YTD24UN/b.rat,0)) as YTD24,sum(isnull(YTD25UN/b.rat,0)) as
YTD25,sum(isnull(YTD26UN/b.rat,0)) as YTD26,sum(isnull(YTD27UN/b.rat,0)) as
YTD27,sum(isnull(YTD28UN/b.rat,0)) as YTD28,sum(isnull(YTD29UN/b.rat,0)) as
YTD29,sum(isnull(YTD30UN/b.rat,0)) as YTD30,sum(isnull(YTD31UN/b.rat,0)) as
YTD31,sum(isnull(YTD32UN/b.rat,0)) as YTD32,sum(isnull(YTD33UN/b.rat,0)) as
YTD33,sum(isnull(YTD34UN/b.rat,0)) as YTD34,sum(isnull(YTD35UN/b.rat,0)) as
YTD35,sum(isnull(YTD36UN/b.rat,0)) as YTD36,sum(isnull(YTD37UN/b.rat,0)) as
YTD37,sum(isnull(YTD38UN/b.rat,0)) as YTD38,sum(isnull(YTD39UN/b.rat,0)) as
YTD39,sum(isnull(YTD40UN/b.rat,0)) as YTD40,sum(isnull(YTD41UN/b.rat,0)) as
YTD41,sum(isnull(YTD42UN/b.rat,0)) as YTD42,sum(isnull(YTD43UN/b.rat,0)) as
YTD43,sum(isnull(YTD44UN/b.rat,0)) as YTD44,sum(isnull(YTD45UN/b.rat,0)) as
YTD45,sum(isnull(YTD46UN/b.rat,0)) as YTD46,sum(isnull(YTD47UN/b.rat,0)) as
YTD47,sum(isnull(YTD48UN/b.rat,0)) as YTD48, sum(isnull(Qtr00UN/b.rat,0)) as
Qtr00,sum(isnull(Qtr01UN/b.rat,0)) as Qtr01,sum(isnull(Qtr02UN/b.rat,0)) as
Qtr02,sum(isnull(Qtr03UN/b.rat,0)) as Qtr03,sum(isnull(Qtr04UN/b.rat,0)) as
Qtr04,sum(isnull(Qtr05UN/b.rat,0)) as Qtr05,sum(isnull(Qtr06UN/b.rat,0)) as
Qtr06,sum(isnull(Qtr07UN/b.rat,0)) as Qtr07,sum(isnull(Qtr08UN/b.rat,0)) as
Qtr08,sum(isnull(Qtr09UN/b.rat,0)) as
(18 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (72 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> 261> 262> 263> 264> 265> 266> 267> 268> 1> 2> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> (1 row affected)
PN
(486 rows affected)
US
(486 rows affected)
LC
(486 rows affected)
UN
(486 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> PN
(0 rows affected)
US
(0 rows affected)
LC
(0 rows affected)
UN
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (1944 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (1944 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> (16 rows affected)
1> 2> 3> 4> 5> 6> (1960 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> (1 row affected)
PN
(122 rows affected)
US
(122 rows affected)
LC
(122 rows affected)
UN
(122 rows affected)
1> 2> 3> 4> 5> (488 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (488 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> (16 rows affected)
1> 2> 3> 4> (504 rows affected)
1> 2> 3> 4> 5> 1> 2> (1960 rows affected)
1> 2> 3> 4> 1> 2> (1960 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (1484 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 1> 2> (0 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> (476 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (0 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> (1 row affected)
(476 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> (68 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> 237> 238> 239> 240> 241> 242> 243> 244> 245> 246> 247> 248> 249> 250> 251> 252> 253> 254> 255> 256> 257> 258> 259> 260> 261> 262> 263> 264> 265> 266> 267> 268> 269> 270> 271> 272> 273> 274> 275> 276> 277> 278> 279> 280> 281> 282> 283> 284> 285> 286> 287> 288> 289> 290> 291> 292> 293> 294> 295> 296> 297> 298> 299> 300> 301> 302> 303> 304> 305> 306> 307> 308> 309> 310> 311> 312> 313> 314> 315> 316> 317> 318> 319> 320> 321> 322> 323> 324> 325> 326> 327> 328> 329> 330> 331> 332> 333> 334> 335> 336> 337> 338> 339> 340> 341> 342> 343> 344> 345> 346> 347> 348> 349> 350> 351> 352> 353> 354> 355> 356> 357> 358> 359> 360> 361> 362> 363> 364> 365> 366> 367> 368> 369> 370> 371> 372> 373> 374> 375> 376> 377> 378> 379> 380> 381> 382> 383> 384> 385> 386> 387> 388> 389> 390> 391> 392> 393> 394> 395> 396> 397> 398> 399> 400> 401> 402> 403> 404> 405> 406> 407> 408> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> (364 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (364 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> (336 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> 4> 5> 6> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> (364 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (364 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> (336 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> (448 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> (180 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (3 rows affected)
(15 rows affected)
(0 rows affected)
(0 rows affected)
(18 rows affected)
(9 rows affected)
(9 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> (24 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> (71 rows affected)
(550 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (1171 rows affected)
1> 2> 3> (550 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> (0 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> 5> (369 rows affected)
1> 2> 3> (369 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> (952 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> (210 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> (472 rows affected)
(177 rows affected)
(15 rows affected)
(0 rows affected)
(0 rows affected)
(9 rows affected)
(12 rows affected)
(21 rows affected)
(0 rows affected)
(30 rows affected)
(12 rows affected)
(3 rows affected)
(18 rows affected)
(0 rows affected)
1> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> (0 rows affected)
1> 2> 3> 4> (3 rows affected)
1> 2> 3> 4> (3 rows affected)
1> 2> 3> 4> 5> (0 rows affected)
1> 2> 3> 4> (9 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (384 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 1> 2> 3> 4> (216 rows affected)
1> 2> (216 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> (476 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> (364 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> (476 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> (364 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> (336 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> (0 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> need update table tblD080OutputProduct
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (952 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> (0 rows affected)
1> 2> 3> 4> 5> (0 rows affected)
1> 2> 3> 4> 5> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (210 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> (3 rows affected)
1> 2> 3> (3 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> (141 rows affected)
1> 2> 3> 4> 5> 6> (30 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> (210 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> (171 rows affected)
(141 rows affected)
1> 2> 3> 4> 1> 2> (903 rows affected)
1> 2> 3> 4> 5> (3 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> (171 rows affected)
(174 rows affected)
(3 rows affected)
(3 rows affected)
(162 rows affected)
(0 rows affected)
(21 rows affected)
(3 rows affected)
(81 rows affected)
(57 rows affected)
(0 rows affected)
(15 rows affected)
(3 rows affected)
(0 rows affected)
(0 rows affected)
(60 rows affected)
(0 rows affected)
(6 rows affected)
(18 rows affected)
(42 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> 6> (6 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> 5> 6> (138 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> (138 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (138 rows affected)
1> 2> 3> 4> (138 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (138 rows affected)
1> 2> 3> 4> 5> 6> (3 rows affected)
1> 2> 3> 4> 5> 6> 1> 2> (903 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> (60 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> need update table tblR050OutputProduct
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (456 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (90 rows affected)
1> 2> 3> 4> 5> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> (12 rows affected)
1> 2> 3> 4> 5> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> (112 rows affected)
(112 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> (0 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> (168 rows affected)
(168 rows affected)
(168 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> (224 rows affected)
1> 2> 3> 1> 2> 3> (224 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> (224 rows affected)
1> 2> 3> 4> 5> 6> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (224 rows affected)
1> 2> 3> (224 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (224 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> (56 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (0 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> 7> (56 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (14 rows affected)
1> 2> (14 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (21 rows affected)
1> 2> 3> 1> 2> 3> 4> (21 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (21 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> (21 rows affected)
1> 2> 3> 4> 5> 6> (21 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 
	select 'MAT' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.MAT00) when 0 then null else sum(B.MAT00)*1.0/sum(A.MAT00) end as
MAT00,
	case sum(A.MAT01) when 0 then null else sum(B.MAT01)*1.0/sum(A.MAT01) end as
MAT01,
	case sum(A.MAT02) when 0 then null else sum(B.MAT02)*1.0/sum(A.MAT02) end as
MAT02,
	case sum(A.MAT03) when 0 then null else sum(B.MAT03)*1.0/sum(A.MAT03) end as
MAT03,
	case sum(A.MAT04) when 0 then null else sum(B.MAT04)*1.0/sum(A.MAT04) end as
MAT04,
	case sum(A.MAT05) when 0 then null else sum(B.MAT05)*1.0/sum(A.MAT05) end as
MAT05,
	case sum(A.MAT06) when 0 then null else sum(B.MAT06)*1.0/sum(A.MAT06) end as
MAT06,
	case sum(A.MAT07) when 0 then null else sum(B.MAT07)*1.0/sum(A.MAT07) end as
MAT07,
	case sum(A.MAT08) when 0 then null else sum(B.MAT08)*1.0/sum(A.MAT08) end as
MAT08,
	case sum(A.MAT09) when 0 then null else sum(B.MAT09)*1.0/sum(A.MAT09) end as
MAT09,
	case sum(A.MAT10) when 0 then null else sum(B.MAT10)*1.0/sum(A.MAT10) end as
MAT10,
	case sum(A.MAT11) when 0 then null else sum(B.MAT11)*1.0/sum(A.MAT11) end as
MAT11,
	case sum(A.MAT12) when 0 then null else sum(B.MAT12)*1.0/sum(A.MAT12) end as
MAT12,
	case sum(A.MAT13) when 0 then null else sum(B.MAT13)*1.0/sum(A.MAT13) end as
MAT13,
	case sum(A.MAT14) when 0 then null else sum(B.MAT14)*1.0/sum(A.MAT14) end as
MAT14,
	case sum(A.MAT15) when 0 then null else sum(B.MAT15)*1.0/sum(A.MAT15) end as
MAT15,
	case sum(A.MAT16) when 0 then null else sum(B.MAT16)*1.0/sum(A.MAT16) end as
MAT16,
	case sum(A.MAT17) when 0 then null else sum(B.MAT17)*1.0/sum(A.MAT17) end as
MAT17,
	case sum(A.MAT18) when 0 then null else sum(B.MAT18)*1.0/sum(A.MAT18) end as
MAT18,
	case sum(A.MAT19) when 0 then null else sum(B.MAT19)*1.0/sum(A.MAT19) end as
MAT19,
	case sum(A.MAT20) when 0 then null else sum(B.MAT20)*1.0/sum(A.MAT20) end as
MAT20,
	case sum(A.MAT21) when 0 then null else sum(B.MAT21)*1.0/sum(A.MAT21) end as
MAT21,
	case sum(A.MAT22) when 0 then null else sum(B.MAT22)*1.0/sum(A.MAT22) end as
MAT22,
	case sum(A.MAT23) when 0 then null else sum(B.MAT23)*1.0/sum(A.MAT23) end as
MAT23,
	case sum(A.MAT24) when 0 then null else sum(B.MAT24)*1.0/sum(A.MAT24) end as
MAT24 into OutputKeyBrandPerformance from TempCHPAPreReports A inner join
TempCHPAPreReports B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
	and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.class='N' and B.Molecule='N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(81 rows affected)
insert into OutputKeyBrandPerformance
select 'MQT' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
case sum(A.R3M00) when 0 then null else sum(B.R3M00)*1.0/sum(A.R3M00) end,
case sum(A.R3M01) when 0 then null else sum(B.R3M01)*1.0/sum(A.R3M01) end,
case sum(A.R3M02) when 0 then null else sum(B.R3M02)*1.0/sum(A.R3M02) end,
case sum(A.R3M03) when 0 then null else sum(B.R3M03)*1.0/sum(A.R3M03) end,
case sum(A.R3M04) when 0 then null else sum(B.R3M04)*1.0/sum(A.R3M04) end,
case sum(A.R3M05) when 0 then null else sum(B.R3M05)*1.0/sum(A.R3M05) end,
case sum(A.R3M06) when 0 then null else sum(B.R3M06)*1.0/sum(A.R3M06) end,
case sum(A.R3M07) when 0 then null else sum(B.R3M07)*1.0/sum(A.R3M07) end,
case sum(A.R3M08) when 0 then null else sum(B.R3M08)*1.0/sum(A.R3M08) end,
case sum(A.R3M09) when 0 then null else sum(B.R3M09)*1.0/sum(A.R3M09) end,
case sum(A.R3M10) when 0 then null else sum(B.R3M10)*1.0/sum(A.R3M10) end,
case sum(A.R3M11) when 0 then null else sum(B.R3M11)*1.0/sum(A.R3M11) end,
case sum(A.R3M12) when 0 then null else sum(B.R3M12)*1.0/sum(A.R3M12) end,
case sum(A.R3M13) when 0 then null else sum(B.R3M13)*1.0/sum(A.R3M13) end,
case sum(A.R3M14) when 0 then null else sum(B.R3M14)*1.0/sum(A.R3M14) end,
case sum(A.R3M15) when 0 then null else sum(B.R3M15)*1.0/sum(A.R3M15) end,
case sum(A.R3M16) when 0 then null else sum(B.R3M16)*1.0/sum(A.R3M16) end,
case sum(A.R3M17) when 0 then null else sum(B.R3M17)*1.0/sum(A.R3M17) end,
case sum(A.R3M18) when 0 then null else sum(B.R3M18)*1.0/sum(A.R3M18) end,
case sum(A.R3M19) when 0 then null else sum(B.R3M19)*1.0/sum(A.R3M19) end,
case sum(A.R3M20) when 0 then null else sum(B.R3M20)*1.0/sum(A.R3M20) end,
case sum(A.R3M21) when 0 then null else sum(B.R3M21)*1.0/sum(A.R3M21) end,
case sum(A.R3M22) when 0 then null else sum(B.R3M22)*1.0/sum(A.R3M22) end,
case sum(A.R3M23) when 0 then null else sum(B.R3M23)*1.0/sum(A.R3M23) end,
case sum(A.R3M24) when 0 then null else sum(B.R3M24)*1.0/sum(A.R3M24) end from
TempCHPAPreReports A inner join TempCHPAPreReports B
on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
and A.Market=B.Market and A.prod='000' and B.prod<>'000'
where B.class='N' and B.Molecule='N'
group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(81 rows affected)
insert into OutputKeyBrandPerformance
select 'MTH' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
case sum(A.MTH00) when 0 then null else sum(B.MTH00)*1.0/sum(A.MTH00) end,
case sum(A.MTH01) when 0 then null else sum(B.MTH01)*1.0/sum(A.MTH01) end,
case sum(A.MTH02) when 0 then null else sum(B.MTH02)*1.0/sum(A.MTH02) end,
case sum(A.MTH03) when 0 then null else sum(B.MTH03)*1.0/sum(A.MTH03) end,
case sum(A.MTH04) when 0 then null else sum(B.MTH04)*1.0/sum(A.MTH04) end,
case sum(A.MTH05) when 0 then null else sum(B.MTH05)*1.0/sum(A.MTH05) end,
case sum(A.MTH06) when 0 then null else sum(B.MTH06)*1.0/sum(A.MTH06) end,
case sum(A.MTH07) when 0 then null else sum(B.MTH07)*1.0/sum(A.MTH07) end,
case sum(A.MTH08) when 0 then null else sum(B.MTH08)*1.0/sum(A.MTH08) end,
case sum(A.MTH09) when 0 then null else sum(B.MTH09)*1.0/sum(A.MTH09) end,
case sum(A.MTH10) when 0 then null else sum(B.MTH10)*1.0/sum(A.MTH10) end,
case sum(A.MTH11) when 0 then null else sum(B.MTH11)*1.0/sum(A.MTH11) end,
case sum(A.MTH12) when 0 then null else sum(B.MTH12)*1.0/sum(A.MTH12) end,
case sum(A.MTH13) when 0 then null else sum(B.MTH13)*1.0/sum(A.MTH13) end,
case sum(A.MTH14) when 0 then null else sum(B.MTH14)*1.0/sum(A.MTH14) end,
case sum(A.MTH15) when 0 then null else sum(B.MTH15)*1.0/sum(A.MTH15) end,
case sum(A.MTH16) when 0 then null else sum(B.MTH16)*1.0/sum(A.MTH16) end,
case sum(A.MTH17) when 0 then null else sum(B.MTH17)*1.0/sum(A.MTH17) end,
case sum(A.MTH18) when 0 then null else sum(B.MTH18)*1.0/sum(A.MTH18) end,
case sum(A.MTH19) when 0 then null else sum(B.MTH19)*1.0/sum(A.MTH19) end,
case sum(A.MTH20) when 0 then null else sum(B.MTH20)*1.0/sum(A.MTH20) end,
case sum(A.MTH21) when 0 then null else sum(B.MTH21)*1.0/sum(A.MTH21) end,
case sum(A.MTH22) when 0 then null else sum(B.MTH22)*1.0/sum(A.MTH22) end,
case sum(A.MTH23) when 0 then null else sum(B.MTH23)*1.0/sum(A.MTH23) end,
case sum(A.MTH24) when 0 then null else sum(B.MTH24)*1.0/sum(A.MTH24) end from
TempCHPAPreReports A inner join TempCHPAPreReports B
on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
and A.Market=B.Market and A.prod='000' and B.prod<>'000'
where B.class='N' and B.Molecule='N'
group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(81 rows affected)
insert into OutputKeyBrandPerformance
select 'YTD' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
case sum(A.YTD00) when 0 then null else sum(B.YTD00)*1.0/sum(A.YTD00) end,
case sum(A.YTD01) when 0 then null else sum(B.YTD01)*1.0/sum(A.YTD01) end,
case sum(A.YTD02) when 0 then null else sum(B.YTD02)*1.0/sum(A.YTD02) end,
case sum(A.YTD03) when 0 then null else sum(B.YTD03)*1.0/sum(A.YTD03) end,
case sum(A.YTD04) when 0 then null else sum(B.YTD04)*1.0/sum(A.YTD04) end,
case sum(A.YTD05) when 0 then null else sum(B.YTD05)*1.0/sum(A.YTD05) end,
case sum(A.YTD06) when 0 then null else sum(B.YTD06)*1.0/sum(A.YTD06) end,
case sum(A.YTD07) when 0 then null else sum(B.YTD07)*1.0/sum(A.YTD07) end,
case sum(A.YTD08) when 0 then null else sum(B.YTD08)*1.0/sum(A.YTD08) end,
case sum(A.YTD09) when 0 then null else sum(B.YTD09)*1.0/sum(A.YTD09) end,
case sum(A.YTD10) when 0 then null else sum(B.YTD10)*1.0/sum(A.YTD10) end,
case sum(A.YTD11) when 0 then null else sum(B.YTD11)*1.0/sum(A.YTD11) end,
case sum(A.YTD12) when 0 then null else sum(B.YTD12)*1.0/sum(A.YTD12) end,
case sum(A.YTD13) when 0 then null else sum(B.YTD13)*1.0/sum(A.YTD13) end,
case sum(A.YTD14) when 0 then null else sum(B.YTD14)*1.0/sum(A.YTD14) end,
case sum(A.YTD15) when 0 then null else sum(B.YTD15)*1.0/sum(A.YTD15) end,
case sum(A.YTD16) when 0 then null else sum(B.YTD16)*1.0/sum(A.YTD16) end,
case sum(A.YTD17) when 0 then null else sum(B.YTD17)*1.0/sum(A.YTD17) end,
case sum(A.YTD18) when 0 then null else sum(B.YTD18)*1.0/sum(A.YTD18) end,
case sum(A.YTD19) when 0 then null else sum(B.YTD19)*1.0/sum(A.YTD19) end,
case sum(A.YTD20) when 0 then null else sum(B.YTD20)*1.0/sum(A.YTD20) end,
case sum(A.YTD21) when 0 then null else sum(B.YTD21)*1.0/sum(A.YTD21) end,
case sum(A.YTD22) when 0 then null else sum(B.YTD22)*1.0/sum(A.YTD22) end,
case sum(A.YTD23) when 0 then null else sum(B.YTD23)*1.0/sum(A.YTD23) end,
case sum(A.YTD24) when 0 then null else sum(B.YTD24)*1.0/sum(A.YTD24) end from
TempCHPAPreReports A inner join TempCHPAPreReports B
on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
and A.Market=B.Market and A.prod='000' and B.prod<>'000'
where B.class='N' and B.Molecule='N'
group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(81 rows affected)
1> 2> 3> (0 rows affected)
(72 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (66 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (66 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (66 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (66 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> (132 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> (66 rows affected)
(66 rows affected)
(264 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> (24 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (24 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> 5> 6> 7> 8> (12 rows affected)
1> 2> 3> (24 rows affected)
1> 2> 3> (36 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> (36 rows affected)
(36 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> (36 rows affected)
1> 2> 3> 1> 2> 3> 4> (36 rows affected)
1> 2> 3> 4> (36 rows affected)
1> 2> 3> 4> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> (9 rows affected)
1> 2> 3> 4> 5> 6> (36 rows affected)
1> 2> 3> 4> (36 rows affected)
1> 2> 3> 4> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (9 rows affected)
1> 2> 3> 4> 5> 6> (24 rows affected)
(24 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (186 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (186 rows affected)
(186 rows affected)
(186 rows affected)
1> 2> 3> 4> (18 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> (72 rows affected)
(72 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> (36 rows affected)
1> 2> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> (66 rows affected)
1> 2> 3> (102 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 1> 2> 3> 4> 5> 6> 7> 8> 9> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (336 rows affected)
1> 2> 3> 4> (420 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (336 rows affected)
1> 2> 3> (336 rows affected)
1> 2> 3> (84 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (588 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 1> 2> 3> 4> (588 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (504 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (868 rows affected)
1> 2> 3> 4> (868 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (112 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (756 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (112 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (756 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (868 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (868 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> (124 rows affected)
1> 2> 3> 4> (124 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> (124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
(124 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> 5> 6> 7> 8> 9> (952 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (588 rows affected)
1> 2> 3> 4> (588 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (504 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> (588 rows affected)
1> 2> 3> 4> 5> (588 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (504 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> 5> 6> 7> 8> 9> (102 rows affected)
1> 2> 3> 4> 5> 6> 7> (272 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (374 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (231 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (504 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (54 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (93 rows affected)
(63 rows affected)
1> 2> 3> 4> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> (84 rows affected)
(12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (9 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (84 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (78 rows affected)
(651 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> (96 rows affected)
1> 2> 3> (156 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> (12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> (0 rows affected)
(12 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> (15 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (15 rows affected)
1> 2> (15 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> (3 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> (3 rows affected)
1> 2> 3> (6 rows affected)
1> 2> 3> (6 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> (6 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 
	select 'MAT' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.MAT00) when 0 then null else sum(B.MAT00)*1.0/sum(A.MAT00) end as
MAT00,
	case sum(A.MAT01) when 0 then null else sum(B.MAT01)*1.0/sum(A.MAT01) end as
MAT01,
	case sum(A.MAT02) when 0 then null else sum(B.MAT02)*1.0/sum(A.MAT02) end as
MAT02,
	case sum(A.MAT03) when 0 then null else sum(B.MAT03)*1.0/sum(A.MAT03) end as
MAT03,
	case sum(A.MAT04) when 0 then null else sum(B.MAT04)*1.0/sum(A.MAT04) end as
MAT04,
	case sum(A.MAT05) when 0 then null else sum(B.MAT05)*1.0/sum(A.MAT05) end as
MAT05,
	case sum(A.MAT06) when 0 then null else sum(B.MAT06)*1.0/sum(A.MAT06) end as
MAT06,
	case sum(A.MAT07) when 0 then null else sum(B.MAT07)*1.0/sum(A.MAT07) end as
MAT07,
	case sum(A.MAT08) when 0 then null else sum(B.MAT08)*1.0/sum(A.MAT08) end as
MAT08,
	case sum(A.MAT09) when 0 then null else sum(B.MAT09)*1.0/sum(A.MAT09) end as
MAT09,
	case sum(A.MAT10) when 0 then null else sum(B.MAT10)*1.0/sum(A.MAT10) end as
MAT10,
	case sum(A.MAT11) when 0 then null else sum(B.MAT11)*1.0/sum(A.MAT11) end as
MAT11,
	case sum(A.MAT12) when 0 then null else sum(B.MAT12)*1.0/sum(A.MAT12) end as
MAT12,
	case sum(A.MAT13) when 0 then null else sum(B.MAT13)*1.0/sum(A.MAT13) end as
MAT13,
	case sum(A.MAT14) when 0 then null else sum(B.MAT14)*1.0/sum(A.MAT14) end as
MAT14,
	case sum(A.MAT15) when 0 then null else sum(B.MAT15)*1.0/sum(A.MAT15) end as
MAT15,
	case sum(A.MAT16) when 0 then null else sum(B.MAT16)*1.0/sum(A.MAT16) end as
MAT16,
	case sum(A.MAT17) when 0 then null else sum(B.MAT17)*1.0/sum(A.MAT17) end as
MAT17,
	case sum(A.MAT18) when 0 then null else sum(B.MAT18)*1.0/sum(A.MAT18) end as
MAT18,
	case sum(A.MAT19) when 0 then null else sum(B.MAT19)*1.0/sum(A.MAT19) end as
MAT19,
	case sum(A.MAT20) when 0 then null else sum(B.MAT20)*1.0/sum(A.MAT20) end as
MAT20,
	case sum(A.MAT21) when 0 then null else sum(B.MAT21)*1.0/sum(A.MAT21) end as
MAT21,
	case sum(A.MAT22) when 0 then null else sum(B.MAT22)*1.0/sum(A.MAT22) end as
MAT22,
	case sum(A.MAT23) when 0 then null else sum(B.MAT23)*1.0/sum(A.MAT23) end as
MAT23,
	case sum(A.MAT24) when 0 then null else sum(B.MAT24)*1.0/sum(A.MAT24) end as
MAT24 into OutputKeyBrandPerformance_For_Baraclude_Modify from
TempCHPAPreReports A inner join TempCHPAPreReports B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
	and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.Market = 'baraclude' and B.Productname in ('Entecavir','Adefovir
Dipivoxil') and B.Molecule = 'Y' and B.Class = 'N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(6 rows affected)
insert into OutputKeyBrandPerformance_For_Baraclude_Modify
	select 'MQT' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.R3M00) when 0 then null else sum(B.R3M00)*1.0/sum(A.R3M00) end,
	case sum(A.R3M01) when 0 then null else sum(B.R3M01)*1.0/sum(A.R3M01) end,
	case sum(A.R3M02) when 0 then null else sum(B.R3M02)*1.0/sum(A.R3M02) end,
	case sum(A.R3M03) when 0 then null else sum(B.R3M03)*1.0/sum(A.R3M03) end,
	case sum(A.R3M04) when 0 then null else sum(B.R3M04)*1.0/sum(A.R3M04) end,
	case sum(A.R3M05) when 0 then null else sum(B.R3M05)*1.0/sum(A.R3M05) end,
	case sum(A.R3M06) when 0 then null else sum(B.R3M06)*1.0/sum(A.R3M06) end,
	case sum(A.R3M07) when 0 then null else sum(B.R3M07)*1.0/sum(A.R3M07) end,
	case sum(A.R3M08) when 0 then null else sum(B.R3M08)*1.0/sum(A.R3M08) end,
	case sum(A.R3M09) when 0 then null else sum(B.R3M09)*1.0/sum(A.R3M09) end,
	case sum(A.R3M10) when 0 then null else sum(B.R3M10)*1.0/sum(A.R3M10) end,
	case sum(A.R3M11) when 0 then null else sum(B.R3M11)*1.0/sum(A.R3M11) end,
	case sum(A.R3M12) when 0 then null else sum(B.R3M12)*1.0/sum(A.R3M12) end,
	case sum(A.R3M13) when 0 then null else sum(B.R3M13)*1.0/sum(A.R3M13) end,
	case sum(A.R3M14) when 0 then null else sum(B.R3M14)*1.0/sum(A.R3M14) end,
	case sum(A.R3M15) when 0 then null else sum(B.R3M15)*1.0/sum(A.R3M15) end,
	case sum(A.R3M16) when 0 then null else sum(B.R3M16)*1.0/sum(A.R3M16) end,
	case sum(A.R3M17) when 0 then null else sum(B.R3M17)*1.0/sum(A.R3M17) end,
	case sum(A.R3M18) when 0 then null else sum(B.R3M18)*1.0/sum(A.R3M18) end,
	case sum(A.R3M19) when 0 then null else sum(B.R3M19)*1.0/sum(A.R3M19) end,
	case sum(A.R3M20) when 0 then null else sum(B.R3M20)*1.0/sum(A.R3M20) end,
	case sum(A.R3M21) when 0 then null else sum(B.R3M21)*1.0/sum(A.R3M21) end,
	case sum(A.R3M22) when 0 then null else sum(B.R3M22)*1.0/sum(A.R3M22) end,
	case sum(A.R3M23) when 0 then null else sum(B.R3M23)*1.0/sum(A.R3M23) end,
	case sum(A.R3M24) when 0 then null else sum(B.R3M24)*1.0/sum(A.R3M24) end
from TempCHPAPreReports A inner join TempCHPAPreReports B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
	and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.Market = 'baraclude' and B.Productname in ('Entecavir','Adefovir
Dipivoxil') and B.Molecule = 'Y' and B.Class = 'N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(6 rows affected)
insert into OutputKeyBrandPerformance_For_Baraclude_Modify
	select 'MTH' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.MTH00) when 0 then null else sum(B.MTH00)*1.0/sum(A.MTH00) end,
	case sum(A.MTH01) when 0 then null else sum(B.MTH01)*1.0/sum(A.MTH01) end,
	case sum(A.MTH02) when 0 then null else sum(B.MTH02)*1.0/sum(A.MTH02) end,
	case sum(A.MTH03) when 0 then null else sum(B.MTH03)*1.0/sum(A.MTH03) end,
	case sum(A.MTH04) when 0 then null else sum(B.MTH04)*1.0/sum(A.MTH04) end,
	case sum(A.MTH05) when 0 then null else sum(B.MTH05)*1.0/sum(A.MTH05) end,
	case sum(A.MTH06) when 0 then null else sum(B.MTH06)*1.0/sum(A.MTH06) end,
	case sum(A.MTH07) when 0 then null else sum(B.MTH07)*1.0/sum(A.MTH07) end,
	case sum(A.MTH08) when 0 then null else sum(B.MTH08)*1.0/sum(A.MTH08) end,
	case sum(A.MTH09) when 0 then null else sum(B.MTH09)*1.0/sum(A.MTH09) end,
	case sum(A.MTH10) when 0 then null else sum(B.MTH10)*1.0/sum(A.MTH10) end,
	case sum(A.MTH11) when 0 then null else sum(B.MTH11)*1.0/sum(A.MTH11) end,
	case sum(A.MTH12) when 0 then null else sum(B.MTH12)*1.0/sum(A.MTH12) end,
	case sum(A.MTH13) when 0 then null else sum(B.MTH13)*1.0/sum(A.MTH13) end,
	case sum(A.MTH14) when 0 then null else sum(B.MTH14)*1.0/sum(A.MTH14) end,
	case sum(A.MTH15) when 0 then null else sum(B.MTH15)*1.0/sum(A.MTH15) end,
	case sum(A.MTH16) when 0 then null else sum(B.MTH16)*1.0/sum(A.MTH16) end,
	case sum(A.MTH17) when 0 then null else sum(B.MTH17)*1.0/sum(A.MTH17) end,
	case sum(A.MTH18) when 0 then null else sum(B.MTH18)*1.0/sum(A.MTH18) end,
	case sum(A.MTH19) when 0 then null else sum(B.MTH19)*1.0/sum(A.MTH19) end,
	case sum(A.MTH20) when 0 then null else sum(B.MTH20)*1.0/sum(A.MTH20) end,
	case sum(A.MTH21) when 0 then null else sum(B.MTH21)*1.0/sum(A.MTH21) end,
	case sum(A.MTH22) when 0 then null else sum(B.MTH22)*1.0/sum(A.MTH22) end,
	case sum(A.MTH23) when 0 then null else sum(B.MTH23)*1.0/sum(A.MTH23) end,
	case sum(A.MTH24) when 0 then null else sum(B.MTH24)*1.0/sum(A.MTH24) end
from TempCHPAPreReports A inner join TempCHPAPreReports B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
	and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.Market = 'baraclude' and B.Productname in ('Entecavir','Adefovir
Dipivoxil') and B.Molecule = 'Y' and B.Class = 'N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(6 rows affected)
insert into OutputKeyBrandPerformance_For_Baraclude_Modify
	select 'YTD' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.YTD00) when 0 then null else sum(B.YTD00)*1.0/sum(A.YTD00) end,
	case sum(A.YTD01) when 0 then null else sum(B.YTD01)*1.0/sum(A.YTD01) end,
	case sum(A.YTD02) when 0 then null else sum(B.YTD02)*1.0/sum(A.YTD02) end,
	case sum(A.YTD03) when 0 then null else sum(B.YTD03)*1.0/sum(A.YTD03) end,
	case sum(A.YTD04) when 0 then null else sum(B.YTD04)*1.0/sum(A.YTD04) end,
	case sum(A.YTD05) when 0 then null else sum(B.YTD05)*1.0/sum(A.YTD05) end,
	case sum(A.YTD06) when 0 then null else sum(B.YTD06)*1.0/sum(A.YTD06) end,
	case sum(A.YTD07) when 0 then null else sum(B.YTD07)*1.0/sum(A.YTD07) end,
	case sum(A.YTD08) when 0 then null else sum(B.YTD08)*1.0/sum(A.YTD08) end,
	case sum(A.YTD09) when 0 then null else sum(B.YTD09)*1.0/sum(A.YTD09) end,
	case sum(A.YTD10) when 0 then null else sum(B.YTD10)*1.0/sum(A.YTD10) end,
	case sum(A.YTD11) when 0 then null else sum(B.YTD11)*1.0/sum(A.YTD11) end,
	case sum(A.YTD12) when 0 then null else sum(B.YTD12)*1.0/sum(A.YTD12) end,
	case sum(A.YTD13) when 0 then null else sum(B.YTD13)*1.0/sum(A.YTD13) end,
	case sum(A.YTD14) when 0 then null else sum(B.YTD14)*1.0/sum(A.YTD14) end,
	case sum(A.YTD15) when 0 then null else sum(B.YTD15)*1.0/sum(A.YTD15) end,
	case sum(A.YTD16) when 0 then null else sum(B.YTD16)*1.0/sum(A.YTD16) end,
	case sum(A.YTD17) when 0 then null else sum(B.YTD17)*1.0/sum(A.YTD17) end,
	case sum(A.YTD18) when 0 then null else sum(B.YTD18)*1.0/sum(A.YTD18) end,
	case sum(A.YTD19) when 0 then null else sum(B.YTD19)*1.0/sum(A.YTD19) end,
	case sum(A.YTD20) when 0 then null else sum(B.YTD20)*1.0/sum(A.YTD20) end,
	case sum(A.YTD21) when 0 then null else sum(B.YTD21)*1.0/sum(A.YTD21) end,
	case sum(A.YTD22) when 0 then null else sum(B.YTD22)*1.0/sum(A.YTD22) end,
	case sum(A.YTD23) when 0 then null else sum(B.YTD23)*1.0/sum(A.YTD23) end,
	case sum(A.YTD24) when 0 then null else sum(B.YTD24)*1.0/sum(A.YTD24) end
from TempCHPAPreReports A inner join TempCHPAPreReports B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
	and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.Market = 'baraclude' and B.Productname in ('Entecavir','Adefovir
Dipivoxil') and B.Molecule = 'Y' and B.Class = 'N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(6 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 1> 2> 3> 4> 5> 6> 7> 8> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> (224 rows affected)
(56 rows affected)
(168 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> carete table finished
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> UN
insert into MID_OutputProdSalesPerformanceInChina_R777
		select 1,'Product','MTH','UN',B.mkt,a.prod_cod,''
,sum(MTH00UN)
		,sum(MTH01UN)
		,sum(MTH02UN)
		,sum(MTH03UN)
		,sum(MTH04UN)
		,sum(MTH05UN)
		,sum(MTH06UN)
		,sum(MTH07UN)
		,sum(MTH08UN)
		,sum(MTH09UN)
		,sum(MTH10UN)
		,sum(MTH11UN)
		,sum(MTH12UN)
		,sum(MTH13UN)
		,sum(MTH14UN)
		,sum(MTH15UN)
		,sum(MTH16UN)
		,sum(MTH17UN)
		,sum(MTH18UN)
		,sum(MTH19UN)
		,sum(MTH20UN)
		,sum(MTH21UN)
		,sum(MTH22UN)
		,sum(MTH23UN)
		,sum(MTH24UN)
		,sum(MTH25UN)
		,sum(MTH26UN)
		,sum(MTH27UN)
		,sum(MTH28UN)
		,sum(MTH29UN)
		,sum(MTH30UN)
		,sum(MTH31UN)
		,sum(MTH32UN)
		,sum(MTH33UN)
		,sum(MTH34UN)
		,sum(MTH35UN)		
		from mthchpa_pkau A 
inner join(
select distinct A.mkt,B.PRod_cod from tblMktDef_MRBIChina A inner join
tblProddef B
		   on A.productname=B.Product
		   where A.mkt = 'ARV' and A.prod in ('100','400')
) B
on A.PRod_cod=B.PRod_cod
group by B.mkt,a.prod_cod

insert into MID_OutputProdSalesPerformanceInChina_R777
		select 2,'Molecule','MTH','UN',B.mkt,'010',''
,sum(MTH00UN)
		,sum(MTH01UN)
		,sum(MTH02UN)
		,sum(MTH03UN)
		,sum(MTH04UN)
		,sum(MTH05UN)
		,sum(MTH06UN)
		,sum(MTH07UN)
		,sum(MTH08UN)
		,sum(MTH09UN)
		,sum(MTH10UN)
		,sum(MTH11UN)
		,sum(MTH12UN)
		,sum(MTH13UN)
		,sum(MTH14UN)
		,sum(MTH15UN)
		,sum(MTH16UN)
		,sum(MTH17UN)
		,sum(MTH18UN)
		,sum(MTH19UN)
		,sum(MTH20UN)
		,sum(MTH21UN)
		,sum(MTH22UN)
		,sum(MTH23UN)
		,sum(MTH24UN)
		,sum(MTH25UN)
		,sum(MTH26UN)
		,sum(MTH27UN)
		,sum(MTH28UN)
		,sum(MTH29UN)
		,sum(MTH30UN)
		,sum(MTH31UN)
		,sum(MTH32UN)
		,sum(MTH33UN)
		,sum(MTH34UN)
		,sum(MTH35UN)		
		from mthchpa_pkau A 
inner join(
select distinct A.mkt,A.PRod_cod from tblMktDef_MRBIChina A 
		   where A.mkt = 'ARV' and A.prod in ('010') 
) B
on A.PRod_cod=B.PRod_cod
group by B.mkt

		insert into MID_OutputProdSalesPerformanceInChina_R777
		select 3,'Market','MTH','UN',B.mkt,B.mkt,''
,sum(MTH00UN)
		,sum(MTH01UN)
		,sum(MTH02UN)
		,sum(MTH03UN)
		,sum(MTH04UN)
		,sum(MTH05UN)
		,sum(MTH06UN)
		,sum(MTH07UN)
		,sum(MTH08UN)
		,sum(MTH09UN)
		,sum(MTH10UN)
		,sum(MTH11UN)
		,sum(MTH12UN)
		,sum(MTH13UN)
		,sum(MTH14UN)
		,sum(MTH15UN)
		,sum(MTH16UN)
		,sum(MTH17UN)
		,sum(MTH18UN)
		,sum(MTH19UN)
		,sum(MTH20UN)
		,sum(MTH21UN)
		,sum(MTH22UN)
		,sum(MTH23UN)
		,sum(MTH24UN)
		,sum(MTH25UN)
		,sum(MTH26UN)
		,sum(MTH27UN)
		,sum(MTH28UN)
		,sum(MTH29UN)
		,sum(MTH30UN)
		,sum(MTH31UN)
		,sum(MTH32UN)
		,sum(MTH33UN)
		,sum(MTH34UN)
		,sum(MTH35UN)	
		from mthchpa_pkau A inner join tblMktDef_MRBIChina B
		on A.pack_cod=b.pack_cod
		where B.prod='000' and B.mkt in('ARV') and Molecule='N' and Class='N'and
B.Active='Y'
		group by B.mkt
(2 rows affected)
(1 row affected)
(1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> Insert ARV market and the three products finished
(2 rows affected)
(1 row affected)
(1 row affected)
1> 2> 3> 4> 5> 6> (4 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> (2 rows affected)
1> 2> 3> 4> (2 rows affected)
1> 2> 3> 4> 5> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (2 rows affected)
(1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> (476 rows affected)
(210 rows affected)
(1 row affected)
(1 row affected)
(1 row affected)
(1 row affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 1> 2> 3> 4> 5> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> (1 row affected)
1> 2> 3> 4> 5> 6> 7> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> (8 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> (210 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> (8 rows affected)
(10 rows affected)
(320 rows affected)
(320 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> (0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
(0 rows affected)
1> 2> 3> (0 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> (0 rows affected)
1> 2> 3> 4> 5> 6> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40>  
		select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt AS
market,B.prod,B.Productname,b.Pack_cod,
--         A.MNFL_COD,B.Gene_cod,
'UN' as Moneytype, sum(isnull(R3M00UN,0)) as R3M00,sum(isnull(R3M01UN,0)) as
R3M01,sum(isnull(R3M02UN,0)) as R3M02,sum(isnull(R3M03UN,0)) as
R3M03,sum(isnull(R3M04UN,0)) as R3M04,sum(isnull(R3M05UN,0)) as
R3M05,sum(isnull(R3M06UN,0)) as R3M06,sum(isnull(R3M07UN,0)) as
R3M07,sum(isnull(R3M08UN,0)) as R3M08,sum(isnull(R3M09UN,0)) as R3M09,
sum(isnull(MTH00UN,0)) as MTH00,sum(isnull(MTH01UN,0)) as
MTH01,sum(isnull(MTH02UN,0)) as MTH02,sum(isnull(MTH03UN,0)) as
MTH03,sum(isnull(MTH04UN,0)) as MTH04,sum(isnull(MTH05UN,0)) as
MTH05,sum(isnull(MTH06UN,0)) as MTH06,sum(isnull(MTH07UN,0)) as
MTH07,sum(isnull(MTH08UN,0)) as MTH08,sum(isnull(MTH09UN,0)) as MTH09,
sum(isnull(Qtr00UN,0)) as Qtr00,sum(isnull(Qtr01UN,0)) as
Qtr01,sum(isnull(Qtr02UN,0)) as Qtr02,sum(isnull(Qtr03UN,0)) as
Qtr03,sum(isnull(Qtr04UN,0)) as Qtr04,sum(isnull(Qtr05UN,0)) as
Qtr05,sum(isnull(Qtr06UN,0)) as Qtr06,sum(isnull(Qtr07UN,0)) as
Qtr07,sum(isnull(Qtr08UN,0)) as Qtr08,sum(isnull(Qtr09UN,0)) as Qtr09
into TempCHPA_CIA_CV_MODI_Slide2_Right
		from mthCHPA_pkau A inner join tblMktDef_MRBIChina B
on A.pack_cod=B.pack_cod where B.Active='Y' and b.mkt='Eliquis VTEp' and
b.Molecule='N' and b.Class='N' and b.Prod<>'000'
		group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname,b.Pack_cod
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 91> 92> 93> 94> 95> 96> 97> 98> 99> 100> 101> 102> 103> 104> 105> 106> 107> 108> 109> 110> 111> 112> 113> 114> 115> 116> 117> 118> 119> 120> 121> 122> 123> 124> 125> 126> 127> 128> 129> 130> 131> 132> 133> 134> 135> 136> 137> 138> 139> 140> 141> 142> 143> 144> 145> 146> 147> 148> 149> 150> 151> 152> 153> 154> 155> 156> 157> 158> 159> 160> 161> 162> 163> 164> 165> 166> 167> 168> 169> 170> 171> 172> 173> 174> 175> 176> 177> 178> 179> 180> 181> 182> 183> 184> 185> 186> 187> 188> 189> 190> 191> 192> 193> 194> 195> 196> 197> 198> 199> 200> 201> 202> 203> 204> 205> 206> 207> 208> 209> 210> 211> 212> 213> 214> 215> 216> 217> 218> 219> 220> 221> 222> 223> 224> 225> 226> 227> 228> 229> 230> 231> 232> 233> 234> 235> 236> (23 rows affected)
(67 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (420 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> PN
(22 rows affected)
US
(22 rows affected)
LC
(22 rows affected)
UN
(22 rows affected)
1> 2> 3> 4> 5> 6> (508 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (508 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> (52 rows affected)
1> 2> 3> 4> (560 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (0 rows affected)
1> 2> 3> 4> 5> (0 rows affected)
1> 2> 3> 4> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> (204 rows affected)
PN
insert into TempCHPAPreReports_For_OtherETV 
			select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
	--         A.MNFL_COD,B.Gene_cod,
			'PN' as Moneytype, sum(isnull(R3M00PN,0)) as R3M00,sum(isnull(R3M01PN,0))
as R3M01,sum(isnull(R3M02PN,0)) as R3M02,sum(isnull(R3M03PN,0)) as
R3M03,sum(isnull(R3M04PN,0)) as R3M04,sum(isnull(R3M05PN,0)) as
R3M05,sum(isnull(R3M06PN,0)) as R3M06,sum(isnull(R3M07PN,0)) as
R3M07,sum(isnull(R3M08PN,0)) as R3M08,sum(isnull(R3M09PN,0)) as
R3M09,sum(isnull(R3M10PN,0)) as R3M10,sum(isnull(R3M11PN,0)) as
R3M11,sum(isnull(R3M12PN,0)) as R3M12,sum(isnull(R3M13PN,0)) as
R3M13,sum(isnull(R3M14PN,0)) as R3M14,sum(isnull(R3M15PN,0)) as
R3M15,sum(isnull(R3M16PN,0)) as R3M16,sum(isnull(R3M17PN,0)) as
R3M17,sum(isnull(R3M18PN,0)) as R3M18,sum(isnull(R3M19PN,0)) as
R3M19,sum(isnull(R3M20PN,0)) as R3M20,sum(isnull(R3M21PN,0)) as
R3M21,sum(isnull(R3M22PN,0)) as R3M22,sum(isnull(R3M23PN,0)) as
R3M23,sum(isnull(R3M24PN,0)) as R3M24,sum(isnull(R3M25PN,0)) as
R3M25,sum(isnull(R3M26PN,0)) as R3M26,sum(isnull(R3M27PN,0)) as
R3M27,sum(isnull(R3M28PN,0)) as R3M28,sum(isnull(R3M29PN,0)) as
R3M29,sum(isnull(R3M30PN,0)) as R3M30,sum(isnull(R3M31PN,0)) as
R3M31,sum(isnull(R3M32PN,0)) as R3M32,sum(isnull(R3M33PN,0)) as
R3M33,sum(isnull(R3M34PN,0)) as R3M34,sum(isnull(R3M35PN,0)) as
R3M35,sum(isnull(R3M36PN,0)) as R3M36,sum(isnull(R3M37PN,0)) as
R3M37,sum(isnull(R3M38PN,0)) as R3M38,sum(isnull(R3M39PN,0)) as
R3M39,sum(isnull(R3M40PN,0)) as R3M40,sum(isnull(R3M41PN,0)) as
R3M41,sum(isnull(R3M42PN,0)) as R3M42,sum(isnull(R3M43PN,0)) as
R3M43,sum(isnull(R3M44PN,0)) as R3M44,sum(isnull(R3M45PN,0)) as
R3M45,sum(isnull(R3M46PN,0)) as R3M46,sum(isnull(R3M47PN,0)) as
R3M47,sum(isnull(R3M48PN,0)) as R3M48, sum(isnull(MTH00PN,0)) as
MTH00,sum(isnull(MTH01PN,0)) as MTH01,sum(isnull(MTH02PN,0)) as
MTH02,sum(isnull(MTH03PN,0)) as MTH03,sum(isnull(MTH04PN,0)) as
MTH04,sum(isnull(MTH05PN,0)) as MTH05,sum(isnull(MTH06PN,0)) as
MTH06,sum(isnull(MTH07PN,0)) as MTH07,sum(isnull(MTH08PN,0)) as
MTH08,sum(isnull(MTH09PN,0)) as MTH09,sum(isnull(MTH10PN,0)) as
MTH10,sum(isnull(MTH11PN,0)) as MTH11,sum(isnull(MTH12PN,0)) as
MTH12,sum(isnull(MTH13PN,0)) as MTH13,sum(isnull(MTH14PN,0)) as
MTH14,sum(isnull(MTH15PN,0)) as MTH15,sum(isnull(MTH16PN,0)) as
MTH16,sum(isnull(MTH17PN,0)) as MTH17,sum(isnull(MTH18PN,0)) as
MTH18,sum(isnull(MTH19PN,0)) as MTH19,sum(isnull(MTH20PN,0)) as
MTH20,sum(isnull(MTH21PN,0)) as MTH21,sum(isnull(MTH22PN,0)) as
MTH22,sum(isnull(MTH23PN,0)) as MTH23,sum(isnull(MTH24PN,0)) as
MTH24,sum(isnull(MTH25PN,0)) as MTH25,sum(isnull(MTH26PN,0)) as
MTH26,sum(isnull(MTH27PN,0)) as MTH27,sum(isnull(MTH28PN,0)) as
MTH28,sum(isnull(MTH29PN,0)) as MTH29,sum(isnull(MTH30PN,0)) as
MTH30,sum(isnull(MTH31PN,0)) as MTH31,sum(isnull(MTH32PN,0)) as
MTH32,sum(isnull(MTH33PN,0)) as MTH33,sum(isnull(MTH34PN,0)) as
MTH34,sum(isnull(MTH35PN,0)) as MTH35,sum(isnull(MTH36PN,0)) as
MTH36,sum(isnull(MTH37PN,0)) as MTH37,sum(isnull(MTH38PN,0)) as
MTH38,sum(isnull(MTH39PN,0)) as MTH39,sum(isnull(MTH40PN,0)) as
MTH40,sum(isnull(MTH41PN,0)) as MTH41,sum(isnull(MTH42PN,0)) as
MTH42,sum(isnull(MTH43PN,0)) as MTH43,sum(isnull(MTH44PN,0)) as
MTH44,sum(isnull(MTH45PN,0)) as MTH45,sum(isnull(MTH46PN,0)) as
MTH46,sum(isnull(MTH47PN,0)) as MTH47,sum(isnull(MTH48PN,0)) as MTH48,
sum(isnull(MAT00PN,0)) as MAT00,sum(isnull(MAT01PN,0)) as
MAT01,sum(isnull(MAT02PN,0)) as MAT02,sum(isnull(MAT03PN,0)) as
MAT03,sum(isnull(MAT04PN,0)) as MAT04,sum(isnull(MAT05PN,0)) as
MAT05,sum(isnull(MAT06PN,0)) as MAT06,sum(isnull(MAT07PN,0)) as
MAT07,sum(isnull(MAT08PN,0)) as MAT08,sum(isnull(MAT09PN,0)) as
MAT09,sum(isnull(MAT10PN,0)) as MAT10,sum(isnull(MAT11PN,0)) as
MAT11,sum(isnull(MAT12PN,0)) as MAT12,sum(isnull(MAT13PN,0)) as
MAT13,sum(isnull(MAT14PN,0)) as MAT14,sum(isnull(MAT15PN,0)) as
MAT15,sum(isnull(MAT16PN,0)) as MAT16,sum(isnull(MAT17PN,0)) as
MAT17,sum(isnull(MAT18PN,0)) as MAT18,sum(isnull(MAT19PN,0)) as
MAT19,sum(isnull(MAT20PN,0)) as MAT20,sum(isnull(MAT21PN,0)) as
MAT21,sum(isnull(MAT22PN,0)) as MAT22,sum(isnull(MAT23PN,0)) as
MAT23,sum(isnull(MAT24PN,0)) as MAT24,sum(isnull(MAT25PN,0)) as
MAT25,sum(isnull(MAT26PN,0)) as MAT26,sum(isnull(MAT27PN,0)) as
MAT27,sum(isnull(MAT28PN,0)) as MAT28,sum(isnull(MAT29PN,0)) as
MAT29,sum(isnull(MAT30PN,0)) as MAT30,sum(isnull(MAT31PN,0)) as
MAT31,sum(isnull(MAT32PN,0)) as MAT32,sum(isnull(MAT33PN,0)) as
MAT33,sum(isnull(MAT34PN,0)) as MAT34,sum(isnull(MAT35PN,0)) as
MAT35,sum(isnull(MAT36PN,0)) as MAT36,sum(isnull(MAT37PN,0)) as
MAT37,sum(isnull(MAT38PN,0)) as MAT38,sum(isnull(MAT39PN,0)) as
MAT39,sum(isnull(MAT40PN,0)) as MAT40,sum(isnull(MAT41PN,0)) as
MAT41,sum(isnull(MAT42PN,0)) as MAT42,sum(isnull(MAT43PN,0)) as
MAT43,sum(isnull(MAT44PN,0)) as MAT44,sum(isnull(MAT45PN,0)) as
MAT45,sum(isnull(MAT46PN,0)) as MAT46,sum(isnull(MAT47PN,0)) as
MAT47,sum(isnull(MAT48PN,0)) as MAT48, sum(isnull(YTD00PN,0)) as
YTD00,sum(isnull(YTD01PN,0)) as YTD01,sum(isnull(YTD02PN,0)) as
YTD02,sum(isnull(YTD03PN,0)) as YTD03,sum(isnull(YTD04PN,0)) as
YTD04,sum(isnull(YTD05PN,0)) as YTD05,sum(isnull(YTD06PN,0)) as
YTD06,sum(isnull(YTD07PN,0)) as YTD07,sum(isnull(YTD08PN,0)) as
YTD08,sum(isnull(YTD09PN,0)) as YTD09,sum(isnull(YTD10PN,0)) as
YTD10,sum(isnull(YTD11PN,0)) as YTD11,sum(isnull(YTD12PN,0)) as
YTD12,sum(isnull(YTD13PN,0)) as YTD13,sum(isnull(YTD14PN,0)) as
YTD14,sum(isnull(YTD15PN,0)) as YTD15,sum(isnull(YTD16PN,0)) as
YTD16,sum(isnull(YTD17PN,0)) as YTD17,sum(isnull(YTD18PN,0)) as
YTD18,sum(isnull(YTD19PN,0)) as YTD19,sum(isnull(YTD20PN,0)) as
YTD20,sum(isnull(YTD21PN,0)) as YTD21,sum(isnull(YTD22PN,0)) as
YTD22,sum(isnull(YTD23PN,0)) as YTD23,sum(isnull(YTD24PN,0)) as
YTD24,sum(isnull(YTD25PN,0)) as YTD25,sum(isnull(YTD26PN,0)) as
YTD26,sum(isnull(YTD27PN,0)) as YTD27,sum(isnull(YTD28PN,0)) as
YTD28,sum(isnull(YTD29PN,0)) as YTD29,sum(isnull(YTD30PN,0)) as
YTD30,sum(isnull(YTD31PN,0)) as YTD31,sum(isnull(YTD32PN,0)) as
YTD32,sum(isnull(YTD33PN,0)) as YTD33,sum(isnull(YTD34PN,0)) as
YTD34,sum(isnull(YTD35PN,0)) as YTD35,sum(isnull(YTD36PN,0)) as
YTD36,sum(isnull(YTD37PN,0)) as YTD37,sum(isnull(YTD38PN,0)) as
YTD38,sum(isnull(YTD39PN,0)) as YTD39,sum(isnull(YTD40PN,0)) as
YTD40,sum(isnull(YTD41PN,0)) as YTD41,sum(isnull(YTD42PN,0)) as
YTD42,sum(isnull(YTD43PN,0)) as YTD43,sum(isnull(YTD44PN,0)) as
YTD44,sum(isnull(YTD45PN,0)) as YTD45,sum(isnull(YTD46PN,0)) as
YTD46,sum(isnull(YTD47PN,0)) as YTD47,sum(isnull(YTD48PN,0)) as YTD48,
sum(isnull(Qtr00PN,0)) as Qtr00,sum(isnull(Qtr01PN,0)) as
Qtr01,sum(isnull(Qtr02PN,0)) as Qtr02,sum(isnull(Qtr03PN,0)) as
Qtr03,sum(isnull(Qtr04PN,0)) as Qtr04,sum(isnull(Qtr05PN,0)) as
Qtr05,sum(isnull(Qtr06PN,0)) as Qtr06,sum(isnull(Qtr07PN,0)) as
Qtr07,sum(isnull(Qtr08PN,0)) as Qtr08,sum(isnull(Qtr09PN,0)) as
Qtr09,sum(isnull(Qtr10PN,0)) as Qtr10,sum(isnull(Qtr11PN,0)) as
Qtr11,sum(isnull(Qtr12PN,0)) as Qtr12,sum(isnull(Qtr13PN,0)) as
Qtr13,sum(isnull(Qtr14PN,0)) as Qtr14,sum(isnull(Qtr15PN,0)) as
Qtr15,sum(isnull(Qtr16PN,0)) as Qtr16,sum(isnull(Qtr17PN,0)) as
Qtr17,sum(isnull(Qtr18PN,0)) as Qtr18,sum(isnull(Qtr19PN,0)) as Qtr19
			from mthCHPA_pkau A inner join tblMktDef_MRBIChina_For_OtherETV B
			on A.pack_cod=B.pack_cod where B.Active='Y'
			group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(5 rows affected)
US
insert into TempCHPAPreReports_For_OtherETV 
			select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
	--         A.MNFL_COD,B.Gene_cod,
			'US' as Moneytype, sum(isnull(R3M00US,0)) as R3M00,sum(isnull(R3M01US,0))
as R3M01,sum(isnull(R3M02US,0)) as R3M02,sum(isnull(R3M03US,0)) as
R3M03,sum(isnull(R3M04US,0)) as R3M04,sum(isnull(R3M05US,0)) as
R3M05,sum(isnull(R3M06US,0)) as R3M06,sum(isnull(R3M07US,0)) as
R3M07,sum(isnull(R3M08US,0)) as R3M08,sum(isnull(R3M09US,0)) as
R3M09,sum(isnull(R3M10US,0)) as R3M10,sum(isnull(R3M11US,0)) as
R3M11,sum(isnull(R3M12US,0)) as R3M12,sum(isnull(R3M13US,0)) as
R3M13,sum(isnull(R3M14US,0)) as R3M14,sum(isnull(R3M15US,0)) as
R3M15,sum(isnull(R3M16US,0)) as R3M16,sum(isnull(R3M17US,0)) as
R3M17,sum(isnull(R3M18US,0)) as R3M18,sum(isnull(R3M19US,0)) as
R3M19,sum(isnull(R3M20US,0)) as R3M20,sum(isnull(R3M21US,0)) as
R3M21,sum(isnull(R3M22US,0)) as R3M22,sum(isnull(R3M23US,0)) as
R3M23,sum(isnull(R3M24US,0)) as R3M24,sum(isnull(R3M25US,0)) as
R3M25,sum(isnull(R3M26US,0)) as R3M26,sum(isnull(R3M27US,0)) as
R3M27,sum(isnull(R3M28US,0)) as R3M28,sum(isnull(R3M29US,0)) as
R3M29,sum(isnull(R3M30US,0)) as R3M30,sum(isnull(R3M31US,0)) as
R3M31,sum(isnull(R3M32US,0)) as R3M32,sum(isnull(R3M33US,0)) as
R3M33,sum(isnull(R3M34US,0)) as R3M34,sum(isnull(R3M35US,0)) as
R3M35,sum(isnull(R3M36US,0)) as R3M36,sum(isnull(R3M37US,0)) as
R3M37,sum(isnull(R3M38US,0)) as R3M38,sum(isnull(R3M39US,0)) as
R3M39,sum(isnull(R3M40US,0)) as R3M40,sum(isnull(R3M41US,0)) as
R3M41,sum(isnull(R3M42US,0)) as R3M42,sum(isnull(R3M43US,0)) as
R3M43,sum(isnull(R3M44US,0)) as R3M44,sum(isnull(R3M45US,0)) as
R3M45,sum(isnull(R3M46US,0)) as R3M46,sum(isnull(R3M47US,0)) as
R3M47,sum(isnull(R3M48US,0)) as R3M48, sum(isnull(MTH00US,0)) as
MTH00,sum(isnull(MTH01US,0)) as MTH01,sum(isnull(MTH02US,0)) as
MTH02,sum(isnull(MTH03US,0)) as MTH03,sum(isnull(MTH04US,0)) as
MTH04,sum(isnull(MTH05US,0)) as MTH05,sum(isnull(MTH06US,0)) as
MTH06,sum(isnull(MTH07US,0)) as MTH07,sum(isnull(MTH08US,0)) as
MTH08,sum(isnull(MTH09US,0)) as MTH09,sum(isnull(MTH10US,0)) as
MTH10,sum(isnull(MTH11US,0)) as MTH11,sum(isnull(MTH12US,0)) as
MTH12,sum(isnull(MTH13US,0)) as MTH13,sum(isnull(MTH14US,0)) as
MTH14,sum(isnull(MTH15US,0)) as MTH15,sum(isnull(MTH16US,0)) as
MTH16,sum(isnull(MTH17US,0)) as MTH17,sum(isnull(MTH18US,0)) as
MTH18,sum(isnull(MTH19US,0)) as MTH19,sum(isnull(MTH20US,0)) as
MTH20,sum(isnull(MTH21US,0)) as MTH21,sum(isnull(MTH22US,0)) as
MTH22,sum(isnull(MTH23US,0)) as MTH23,sum(isnull(MTH24US,0)) as
MTH24,sum(isnull(MTH25US,0)) as MTH25,sum(isnull(MTH26US,0)) as
MTH26,sum(isnull(MTH27US,0)) as MTH27,sum(isnull(MTH28US,0)) as
MTH28,sum(isnull(MTH29US,0)) as MTH29,sum(isnull(MTH30US,0)) as
MTH30,sum(isnull(MTH31US,0)) as MTH31,sum(isnull(MTH32US,0)) as
MTH32,sum(isnull(MTH33US,0)) as MTH33,sum(isnull(MTH34US,0)) as
MTH34,sum(isnull(MTH35US,0)) as MTH35,sum(isnull(MTH36US,0)) as
MTH36,sum(isnull(MTH37US,0)) as MTH37,sum(isnull(MTH38US,0)) as
MTH38,sum(isnull(MTH39US,0)) as MTH39,sum(isnull(MTH40US,0)) as
MTH40,sum(isnull(MTH41US,0)) as MTH41,sum(isnull(MTH42US,0)) as
MTH42,sum(isnull(MTH43US,0)) as MTH43,sum(isnull(MTH44US,0)) as
MTH44,sum(isnull(MTH45US,0)) as MTH45,sum(isnull(MTH46US,0)) as
MTH46,sum(isnull(MTH47US,0)) as MTH47,sum(isnull(MTH48US,0)) as MTH48,
sum(isnull(MAT00US,0)) as MAT00,sum(isnull(MAT01US,0)) as
MAT01,sum(isnull(MAT02US,0)) as MAT02,sum(isnull(MAT03US,0)) as
MAT03,sum(isnull(MAT04US,0)) as MAT04,sum(isnull(MAT05US,0)) as
MAT05,sum(isnull(MAT06US,0)) as MAT06,sum(isnull(MAT07US,0)) as
MAT07,sum(isnull(MAT08US,0)) as MAT08,sum(isnull(MAT09US,0)) as
MAT09,sum(isnull(MAT10US,0)) as MAT10,sum(isnull(MAT11US,0)) as
MAT11,sum(isnull(MAT12US,0)) as MAT12,sum(isnull(MAT13US,0)) as
MAT13,sum(isnull(MAT14US,0)) as MAT14,sum(isnull(MAT15US,0)) as
MAT15,sum(isnull(MAT16US,0)) as MAT16,sum(isnull(MAT17US,0)) as
MAT17,sum(isnull(MAT18US,0)) as MAT18,sum(isnull(MAT19US,0)) as
MAT19,sum(isnull(MAT20US,0)) as MAT20,sum(isnull(MAT21US,0)) as
MAT21,sum(isnull(MAT22US,0)) as MAT22,sum(isnull(MAT23US,0)) as
MAT23,sum(isnull(MAT24US,0)) as MAT24,sum(isnull(MAT25US,0)) as
MAT25,sum(isnull(MAT26US,0)) as MAT26,sum(isnull(MAT27US,0)) as
MAT27,sum(isnull(MAT28US,0)) as MAT28,sum(isnull(MAT29US,0)) as
MAT29,sum(isnull(MAT30US,0)) as MAT30,sum(isnull(MAT31US,0)) as
MAT31,sum(isnull(MAT32US,0)) as MAT32,sum(isnull(MAT33US,0)) as
MAT33,sum(isnull(MAT34US,0)) as MAT34,sum(isnull(MAT35US,0)) as
MAT35,sum(isnull(MAT36US,0)) as MAT36,sum(isnull(MAT37US,0)) as
MAT37,sum(isnull(MAT38US,0)) as MAT38,sum(isnull(MAT39US,0)) as
MAT39,sum(isnull(MAT40US,0)) as MAT40,sum(isnull(MAT41US,0)) as
MAT41,sum(isnull(MAT42US,0)) as MAT42,sum(isnull(MAT43US,0)) as
MAT43,sum(isnull(MAT44US,0)) as MAT44,sum(isnull(MAT45US,0)) as
MAT45,sum(isnull(MAT46US,0)) as MAT46,sum(isnull(MAT47US,0)) as
MAT47,sum(isnull(MAT48US,0)) as MAT48, sum(isnull(YTD00US,0)) as
YTD00,sum(isnull(YTD01US,0)) as YTD01,sum(isnull(YTD02US,0)) as
YTD02,sum(isnull(YTD03US,0)) as YTD03,sum(isnull(YTD04US,0)) as
YTD04,sum(isnull(YTD05US,0)) as YTD05,sum(isnull(YTD06US,0)) as
YTD06,sum(isnull(YTD07US,0)) as YTD07,sum(isnull(YTD08US,0)) as
YTD08,sum(isnull(YTD09US,0)) as YTD09,sum(isnull(YTD10US,0)) as
YTD10,sum(isnull(YTD11US,0)) as YTD11,sum(isnull(YTD12US,0)) as
YTD12,sum(isnull(YTD13US,0)) as YTD13,sum(isnull(YTD14US,0)) as
YTD14,sum(isnull(YTD15US,0)) as YTD15,sum(isnull(YTD16US,0)) as
YTD16,sum(isnull(YTD17US,0)) as YTD17,sum(isnull(YTD18US,0)) as
YTD18,sum(isnull(YTD19US,0)) as YTD19,sum(isnull(YTD20US,0)) as
YTD20,sum(isnull(YTD21US,0)) as YTD21,sum(isnull(YTD22US,0)) as
YTD22,sum(isnull(YTD23US,0)) as YTD23,sum(isnull(YTD24US,0)) as
YTD24,sum(isnull(YTD25US,0)) as YTD25,sum(isnull(YTD26US,0)) as
YTD26,sum(isnull(YTD27US,0)) as YTD27,sum(isnull(YTD28US,0)) as
YTD28,sum(isnull(YTD29US,0)) as YTD29,sum(isnull(YTD30US,0)) as
YTD30,sum(isnull(YTD31US,0)) as YTD31,sum(isnull(YTD32US,0)) as
YTD32,sum(isnull(YTD33US,0)) as YTD33,sum(isnull(YTD34US,0)) as
YTD34,sum(isnull(YTD35US,0)) as YTD35,sum(isnull(YTD36US,0)) as
YTD36,sum(isnull(YTD37US,0)) as YTD37,sum(isnull(YTD38US,0)) as
YTD38,sum(isnull(YTD39US,0)) as YTD39,sum(isnull(YTD40US,0)) as
YTD40,sum(isnull(YTD41US,0)) as YTD41,sum(isnull(YTD42US,0)) as
YTD42,sum(isnull(YTD43US,0)) as YTD43,sum(isnull(YTD44US,0)) as
YTD44,sum(isnull(YTD45US,0)) as YTD45,sum(isnull(YTD46US,0)) as
YTD46,sum(isnull(YTD47US,0)) as YTD47,sum(isnull(YTD48US,0)) as YTD48,
sum(isnull(Qtr00US,0)) as Qtr00,sum(isnull(Qtr01US,0)) as
Qtr01,sum(isnull(Qtr02US,0)) as Qtr02,sum(isnull(Qtr03US,0)) as
Qtr03,sum(isnull(Qtr04US,0)) as Qtr04,sum(isnull(Qtr05US,0)) as
Qtr05,sum(isnull(Qtr06US,0)) as Qtr06,sum(isnull(Qtr07US,0)) as
Qtr07,sum(isnull(Qtr08US,0)) as Qtr08,sum(isnull(Qtr09US,0)) as
Qtr09,sum(isnull(Qtr10US,0)) as Qtr10,sum(isnull(Qtr11US,0)) as
Qtr11,sum(isnull(Qtr12US,0)) as Qtr12,sum(isnull(Qtr13US,0)) as
Qtr13,sum(isnull(Qtr14US,0)) as Qtr14,sum(isnull(Qtr15US,0)) as
Qtr15,sum(isnull(Qtr16US,0)) as Qtr16,sum(isnull(Qtr17US,0)) as
Qtr17,sum(isnull(Qtr18US,0)) as Qtr18,sum(isnull(Qtr19US,0)) as Qtr19
			from mthCHPA_pkau A inner join tblMktDef_MRBIChina_For_OtherETV B
			on A.pack_cod=B.pack_cod where B.Active='Y'
			group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(5 rows affected)
LC
insert into TempCHPAPreReports_For_OtherETV 
			select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
	--         A.MNFL_COD,B.Gene_cod,
			'LC' as Moneytype, sum(isnull(R3M00LC,0)) as R3M00,sum(isnull(R3M01LC,0))
as R3M01,sum(isnull(R3M02LC,0)) as R3M02,sum(isnull(R3M03LC,0)) as
R3M03,sum(isnull(R3M04LC,0)) as R3M04,sum(isnull(R3M05LC,0)) as
R3M05,sum(isnull(R3M06LC,0)) as R3M06,sum(isnull(R3M07LC,0)) as
R3M07,sum(isnull(R3M08LC,0)) as R3M08,sum(isnull(R3M09LC,0)) as
R3M09,sum(isnull(R3M10LC,0)) as R3M10,sum(isnull(R3M11LC,0)) as
R3M11,sum(isnull(R3M12LC,0)) as R3M12,sum(isnull(R3M13LC,0)) as
R3M13,sum(isnull(R3M14LC,0)) as R3M14,sum(isnull(R3M15LC,0)) as
R3M15,sum(isnull(R3M16LC,0)) as R3M16,sum(isnull(R3M17LC,0)) as
R3M17,sum(isnull(R3M18LC,0)) as R3M18,sum(isnull(R3M19LC,0)) as
R3M19,sum(isnull(R3M20LC,0)) as R3M20,sum(isnull(R3M21LC,0)) as
R3M21,sum(isnull(R3M22LC,0)) as R3M22,sum(isnull(R3M23LC,0)) as
R3M23,sum(isnull(R3M24LC,0)) as R3M24,sum(isnull(R3M25LC,0)) as
R3M25,sum(isnull(R3M26LC,0)) as R3M26,sum(isnull(R3M27LC,0)) as
R3M27,sum(isnull(R3M28LC,0)) as R3M28,sum(isnull(R3M29LC,0)) as
R3M29,sum(isnull(R3M30LC,0)) as R3M30,sum(isnull(R3M31LC,0)) as
R3M31,sum(isnull(R3M32LC,0)) as R3M32,sum(isnull(R3M33LC,0)) as
R3M33,sum(isnull(R3M34LC,0)) as R3M34,sum(isnull(R3M35LC,0)) as
R3M35,sum(isnull(R3M36LC,0)) as R3M36,sum(isnull(R3M37LC,0)) as
R3M37,sum(isnull(R3M38LC,0)) as R3M38,sum(isnull(R3M39LC,0)) as
R3M39,sum(isnull(R3M40LC,0)) as R3M40,sum(isnull(R3M41LC,0)) as
R3M41,sum(isnull(R3M42LC,0)) as R3M42,sum(isnull(R3M43LC,0)) as
R3M43,sum(isnull(R3M44LC,0)) as R3M44,sum(isnull(R3M45LC,0)) as
R3M45,sum(isnull(R3M46LC,0)) as R3M46,sum(isnull(R3M47LC,0)) as
R3M47,sum(isnull(R3M48LC,0)) as R3M48, sum(isnull(MTH00LC,0)) as
MTH00,sum(isnull(MTH01LC,0)) as MTH01,sum(isnull(MTH02LC,0)) as
MTH02,sum(isnull(MTH03LC,0)) as MTH03,sum(isnull(MTH04LC,0)) as
MTH04,sum(isnull(MTH05LC,0)) as MTH05,sum(isnull(MTH06LC,0)) as
MTH06,sum(isnull(MTH07LC,0)) as MTH07,sum(isnull(MTH08LC,0)) as
MTH08,sum(isnull(MTH09LC,0)) as MTH09,sum(isnull(MTH10LC,0)) as
MTH10,sum(isnull(MTH11LC,0)) as MTH11,sum(isnull(MTH12LC,0)) as
MTH12,sum(isnull(MTH13LC,0)) as MTH13,sum(isnull(MTH14LC,0)) as
MTH14,sum(isnull(MTH15LC,0)) as MTH15,sum(isnull(MTH16LC,0)) as
MTH16,sum(isnull(MTH17LC,0)) as MTH17,sum(isnull(MTH18LC,0)) as
MTH18,sum(isnull(MTH19LC,0)) as MTH19,sum(isnull(MTH20LC,0)) as
MTH20,sum(isnull(MTH21LC,0)) as MTH21,sum(isnull(MTH22LC,0)) as
MTH22,sum(isnull(MTH23LC,0)) as MTH23,sum(isnull(MTH24LC,0)) as
MTH24,sum(isnull(MTH25LC,0)) as MTH25,sum(isnull(MTH26LC,0)) as
MTH26,sum(isnull(MTH27LC,0)) as MTH27,sum(isnull(MTH28LC,0)) as
MTH28,sum(isnull(MTH29LC,0)) as MTH29,sum(isnull(MTH30LC,0)) as
MTH30,sum(isnull(MTH31LC,0)) as MTH31,sum(isnull(MTH32LC,0)) as
MTH32,sum(isnull(MTH33LC,0)) as MTH33,sum(isnull(MTH34LC,0)) as
MTH34,sum(isnull(MTH35LC,0)) as MTH35,sum(isnull(MTH36LC,0)) as
MTH36,sum(isnull(MTH37LC,0)) as MTH37,sum(isnull(MTH38LC,0)) as
MTH38,sum(isnull(MTH39LC,0)) as MTH39,sum(isnull(MTH40LC,0)) as
MTH40,sum(isnull(MTH41LC,0)) as MTH41,sum(isnull(MTH42LC,0)) as
MTH42,sum(isnull(MTH43LC,0)) as MTH43,sum(isnull(MTH44LC,0)) as
MTH44,sum(isnull(MTH45LC,0)) as MTH45,sum(isnull(MTH46LC,0)) as
MTH46,sum(isnull(MTH47LC,0)) as MTH47,sum(isnull(MTH48LC,0)) as MTH48,
sum(isnull(MAT00LC,0)) as MAT00,sum(isnull(MAT01LC,0)) as
MAT01,sum(isnull(MAT02LC,0)) as MAT02,sum(isnull(MAT03LC,0)) as
MAT03,sum(isnull(MAT04LC,0)) as MAT04,sum(isnull(MAT05LC,0)) as
MAT05,sum(isnull(MAT06LC,0)) as MAT06,sum(isnull(MAT07LC,0)) as
MAT07,sum(isnull(MAT08LC,0)) as MAT08,sum(isnull(MAT09LC,0)) as
MAT09,sum(isnull(MAT10LC,0)) as MAT10,sum(isnull(MAT11LC,0)) as
MAT11,sum(isnull(MAT12LC,0)) as MAT12,sum(isnull(MAT13LC,0)) as
MAT13,sum(isnull(MAT14LC,0)) as MAT14,sum(isnull(MAT15LC,0)) as
MAT15,sum(isnull(MAT16LC,0)) as MAT16,sum(isnull(MAT17LC,0)) as
MAT17,sum(isnull(MAT18LC,0)) as MAT18,sum(isnull(MAT19LC,0)) as
MAT19,sum(isnull(MAT20LC,0)) as MAT20,sum(isnull(MAT21LC,0)) as
MAT21,sum(isnull(MAT22LC,0)) as MAT22,sum(isnull(MAT23LC,0)) as
MAT23,sum(isnull(MAT24LC,0)) as MAT24,sum(isnull(MAT25LC,0)) as
MAT25,sum(isnull(MAT26LC,0)) as MAT26,sum(isnull(MAT27LC,0)) as
MAT27,sum(isnull(MAT28LC,0)) as MAT28,sum(isnull(MAT29LC,0)) as
MAT29,sum(isnull(MAT30LC,0)) as MAT30,sum(isnull(MAT31LC,0)) as
MAT31,sum(isnull(MAT32LC,0)) as MAT32,sum(isnull(MAT33LC,0)) as
MAT33,sum(isnull(MAT34LC,0)) as MAT34,sum(isnull(MAT35LC,0)) as
MAT35,sum(isnull(MAT36LC,0)) as MAT36,sum(isnull(MAT37LC,0)) as
MAT37,sum(isnull(MAT38LC,0)) as MAT38,sum(isnull(MAT39LC,0)) as
MAT39,sum(isnull(MAT40LC,0)) as MAT40,sum(isnull(MAT41LC,0)) as
MAT41,sum(isnull(MAT42LC,0)) as MAT42,sum(isnull(MAT43LC,0)) as
MAT43,sum(isnull(MAT44LC,0)) as MAT44,sum(isnull(MAT45LC,0)) as
MAT45,sum(isnull(MAT46LC,0)) as MAT46,sum(isnull(MAT47LC,0)) as
MAT47,sum(isnull(MAT48LC,0)) as MAT48, sum(isnull(YTD00LC,0)) as
YTD00,sum(isnull(YTD01LC,0)) as YTD01,sum(isnull(YTD02LC,0)) as
YTD02,sum(isnull(YTD03LC,0)) as YTD03,sum(isnull(YTD04LC,0)) as
YTD04,sum(isnull(YTD05LC,0)) as YTD05,sum(isnull(YTD06LC,0)) as
YTD06,sum(isnull(YTD07LC,0)) as YTD07,sum(isnull(YTD08LC,0)) as
YTD08,sum(isnull(YTD09LC,0)) as YTD09,sum(isnull(YTD10LC,0)) as
YTD10,sum(isnull(YTD11LC,0)) as YTD11,sum(isnull(YTD12LC,0)) as
YTD12,sum(isnull(YTD13LC,0)) as YTD13,sum(isnull(YTD14LC,0)) as
YTD14,sum(isnull(YTD15LC,0)) as YTD15,sum(isnull(YTD16LC,0)) as
YTD16,sum(isnull(YTD17LC,0)) as YTD17,sum(isnull(YTD18LC,0)) as
YTD18,sum(isnull(YTD19LC,0)) as YTD19,sum(isnull(YTD20LC,0)) as
YTD20,sum(isnull(YTD21LC,0)) as YTD21,sum(isnull(YTD22LC,0)) as
YTD22,sum(isnull(YTD23LC,0)) as YTD23,sum(isnull(YTD24LC,0)) as
YTD24,sum(isnull(YTD25LC,0)) as YTD25,sum(isnull(YTD26LC,0)) as
YTD26,sum(isnull(YTD27LC,0)) as YTD27,sum(isnull(YTD28LC,0)) as
YTD28,sum(isnull(YTD29LC,0)) as YTD29,sum(isnull(YTD30LC,0)) as
YTD30,sum(isnull(YTD31LC,0)) as YTD31,sum(isnull(YTD32LC,0)) as
YTD32,sum(isnull(YTD33LC,0)) as YTD33,sum(isnull(YTD34LC,0)) as
YTD34,sum(isnull(YTD35LC,0)) as YTD35,sum(isnull(YTD36LC,0)) as
YTD36,sum(isnull(YTD37LC,0)) as YTD37,sum(isnull(YTD38LC,0)) as
YTD38,sum(isnull(YTD39LC,0)) as YTD39,sum(isnull(YTD40LC,0)) as
YTD40,sum(isnull(YTD41LC,0)) as YTD41,sum(isnull(YTD42LC,0)) as
YTD42,sum(isnull(YTD43LC,0)) as YTD43,sum(isnull(YTD44LC,0)) as
YTD44,sum(isnull(YTD45LC,0)) as YTD45,sum(isnull(YTD46LC,0)) as
YTD46,sum(isnull(YTD47LC,0)) as YTD47,sum(isnull(YTD48LC,0)) as YTD48,
sum(isnull(Qtr00LC,0)) as Qtr00,sum(isnull(Qtr01LC,0)) as
Qtr01,sum(isnull(Qtr02LC,0)) as Qtr02,sum(isnull(Qtr03LC,0)) as
Qtr03,sum(isnull(Qtr04LC,0)) as Qtr04,sum(isnull(Qtr05LC,0)) as
Qtr05,sum(isnull(Qtr06LC,0)) as Qtr06,sum(isnull(Qtr07LC,0)) as
Qtr07,sum(isnull(Qtr08LC,0)) as Qtr08,sum(isnull(Qtr09LC,0)) as
Qtr09,sum(isnull(Qtr10LC,0)) as Qtr10,sum(isnull(Qtr11LC,0)) as
Qtr11,sum(isnull(Qtr12LC,0)) as Qtr12,sum(isnull(Qtr13LC,0)) as
Qtr13,sum(isnull(Qtr14LC,0)) as Qtr14,sum(isnull(Qtr15LC,0)) as
Qtr15,sum(isnull(Qtr16LC,0)) as Qtr16,sum(isnull(Qtr17LC,0)) as
Qtr17,sum(isnull(Qtr18LC,0)) as Qtr18,sum(isnull(Qtr19LC,0)) as Qtr19
			from mthCHPA_pkau A inner join tblMktDef_MRBIChina_For_OtherETV B
			on A.pack_cod=B.pack_cod where B.Active='Y'
			group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(5 rows affected)
UN
insert into TempCHPAPreReports_For_OtherETV 
			select  B.Molecule,B.Class,B.mkt,B.mktname,B.mkt,B.prod,B.Productname,
	--         A.MNFL_COD,B.Gene_cod,
			'UN' as Moneytype, sum(isnull(R3M00UN,0)) as R3M00,sum(isnull(R3M01UN,0))
as R3M01,sum(isnull(R3M02UN,0)) as R3M02,sum(isnull(R3M03UN,0)) as
R3M03,sum(isnull(R3M04UN,0)) as R3M04,sum(isnull(R3M05UN,0)) as
R3M05,sum(isnull(R3M06UN,0)) as R3M06,sum(isnull(R3M07UN,0)) as
R3M07,sum(isnull(R3M08UN,0)) as R3M08,sum(isnull(R3M09UN,0)) as
R3M09,sum(isnull(R3M10UN,0)) as R3M10,sum(isnull(R3M11UN,0)) as
R3M11,sum(isnull(R3M12UN,0)) as R3M12,sum(isnull(R3M13UN,0)) as
R3M13,sum(isnull(R3M14UN,0)) as R3M14,sum(isnull(R3M15UN,0)) as
R3M15,sum(isnull(R3M16UN,0)) as R3M16,sum(isnull(R3M17UN,0)) as
R3M17,sum(isnull(R3M18UN,0)) as R3M18,sum(isnull(R3M19UN,0)) as
R3M19,sum(isnull(R3M20UN,0)) as R3M20,sum(isnull(R3M21UN,0)) as
R3M21,sum(isnull(R3M22UN,0)) as R3M22,sum(isnull(R3M23UN,0)) as
R3M23,sum(isnull(R3M24UN,0)) as R3M24,sum(isnull(R3M25UN,0)) as
R3M25,sum(isnull(R3M26UN,0)) as R3M26,sum(isnull(R3M27UN,0)) as
R3M27,sum(isnull(R3M28UN,0)) as R3M28,sum(isnull(R3M29UN,0)) as
R3M29,sum(isnull(R3M30UN,0)) as R3M30,sum(isnull(R3M31UN,0)) as
R3M31,sum(isnull(R3M32UN,0)) as R3M32,sum(isnull(R3M33UN,0)) as
R3M33,sum(isnull(R3M34UN,0)) as R3M34,sum(isnull(R3M35UN,0)) as
R3M35,sum(isnull(R3M36UN,0)) as R3M36,sum(isnull(R3M37UN,0)) as
R3M37,sum(isnull(R3M38UN,0)) as R3M38,sum(isnull(R3M39UN,0)) as
R3M39,sum(isnull(R3M40UN,0)) as R3M40,sum(isnull(R3M41UN,0)) as
R3M41,sum(isnull(R3M42UN,0)) as R3M42,sum(isnull(R3M43UN,0)) as
R3M43,sum(isnull(R3M44UN,0)) as R3M44,sum(isnull(R3M45UN,0)) as
R3M45,sum(isnull(R3M46UN,0)) as R3M46,sum(isnull(R3M47UN,0)) as
R3M47,sum(isnull(R3M48UN,0)) as R3M48, sum(isnull(MTH00UN,0)) as
MTH00,sum(isnull(MTH01UN,0)) as MTH01,sum(isnull(MTH02UN,0)) as
MTH02,sum(isnull(MTH03UN,0)) as MTH03,sum(isnull(MTH04UN,0)) as
MTH04,sum(isnull(MTH05UN,0)) as MTH05,sum(isnull(MTH06UN,0)) as
MTH06,sum(isnull(MTH07UN,0)) as MTH07,sum(isnull(MTH08UN,0)) as
MTH08,sum(isnull(MTH09UN,0)) as MTH09,sum(isnull(MTH10UN,0)) as
MTH10,sum(isnull(MTH11UN,0)) as MTH11,sum(isnull(MTH12UN,0)) as
MTH12,sum(isnull(MTH13UN,0)) as MTH13,sum(isnull(MTH14UN,0)) as
MTH14,sum(isnull(MTH15UN,0)) as MTH15,sum(isnull(MTH16UN,0)) as
MTH16,sum(isnull(MTH17UN,0)) as MTH17,sum(isnull(MTH18UN,0)) as
MTH18,sum(isnull(MTH19UN,0)) as MTH19,sum(isnull(MTH20UN,0)) as
MTH20,sum(isnull(MTH21UN,0)) as MTH21,sum(isnull(MTH22UN,0)) as
MTH22,sum(isnull(MTH23UN,0)) as MTH23,sum(isnull(MTH24UN,0)) as
MTH24,sum(isnull(MTH25UN,0)) as MTH25,sum(isnull(MTH26UN,0)) as
MTH26,sum(isnull(MTH27UN,0)) as MTH27,sum(isnull(MTH28UN,0)) as
MTH28,sum(isnull(MTH29UN,0)) as MTH29,sum(isnull(MTH30UN,0)) as
MTH30,sum(isnull(MTH31UN,0)) as MTH31,sum(isnull(MTH32UN,0)) as
MTH32,sum(isnull(MTH33UN,0)) as MTH33,sum(isnull(MTH34UN,0)) as
MTH34,sum(isnull(MTH35UN,0)) as MTH35,sum(isnull(MTH36UN,0)) as
MTH36,sum(isnull(MTH37UN,0)) as MTH37,sum(isnull(MTH38UN,0)) as
MTH38,sum(isnull(MTH39UN,0)) as MTH39,sum(isnull(MTH40UN,0)) as
MTH40,sum(isnull(MTH41UN,0)) as MTH41,sum(isnull(MTH42UN,0)) as
MTH42,sum(isnull(MTH43UN,0)) as MTH43,sum(isnull(MTH44UN,0)) as
MTH44,sum(isnull(MTH45UN,0)) as MTH45,sum(isnull(MTH46UN,0)) as
MTH46,sum(isnull(MTH47UN,0)) as MTH47,sum(isnull(MTH48UN,0)) as MTH48,
sum(isnull(MAT00UN,0)) as MAT00,sum(isnull(MAT01UN,0)) as
MAT01,sum(isnull(MAT02UN,0)) as MAT02,sum(isnull(MAT03UN,0)) as
MAT03,sum(isnull(MAT04UN,0)) as MAT04,sum(isnull(MAT05UN,0)) as
MAT05,sum(isnull(MAT06UN,0)) as MAT06,sum(isnull(MAT07UN,0)) as
MAT07,sum(isnull(MAT08UN,0)) as MAT08,sum(isnull(MAT09UN,0)) as
MAT09,sum(isnull(MAT10UN,0)) as MAT10,sum(isnull(MAT11UN,0)) as
MAT11,sum(isnull(MAT12UN,0)) as MAT12,sum(isnull(MAT13UN,0)) as
MAT13,sum(isnull(MAT14UN,0)) as MAT14,sum(isnull(MAT15UN,0)) as
MAT15,sum(isnull(MAT16UN,0)) as MAT16,sum(isnull(MAT17UN,0)) as
MAT17,sum(isnull(MAT18UN,0)) as MAT18,sum(isnull(MAT19UN,0)) as
MAT19,sum(isnull(MAT20UN,0)) as MAT20,sum(isnull(MAT21UN,0)) as
MAT21,sum(isnull(MAT22UN,0)) as MAT22,sum(isnull(MAT23UN,0)) as
MAT23,sum(isnull(MAT24UN,0)) as MAT24,sum(isnull(MAT25UN,0)) as
MAT25,sum(isnull(MAT26UN,0)) as MAT26,sum(isnull(MAT27UN,0)) as
MAT27,sum(isnull(MAT28UN,0)) as MAT28,sum(isnull(MAT29UN,0)) as
MAT29,sum(isnull(MAT30UN,0)) as MAT30,sum(isnull(MAT31UN,0)) as
MAT31,sum(isnull(MAT32UN,0)) as MAT32,sum(isnull(MAT33UN,0)) as
MAT33,sum(isnull(MAT34UN,0)) as MAT34,sum(isnull(MAT35UN,0)) as
MAT35,sum(isnull(MAT36UN,0)) as MAT36,sum(isnull(MAT37UN,0)) as
MAT37,sum(isnull(MAT38UN,0)) as MAT38,sum(isnull(MAT39UN,0)) as
MAT39,sum(isnull(MAT40UN,0)) as MAT40,sum(isnull(MAT41UN,0)) as
MAT41,sum(isnull(MAT42UN,0)) as MAT42,sum(isnull(MAT43UN,0)) as
MAT43,sum(isnull(MAT44UN,0)) as MAT44,sum(isnull(MAT45UN,0)) as
MAT45,sum(isnull(MAT46UN,0)) as MAT46,sum(isnull(MAT47UN,0)) as
MAT47,sum(isnull(MAT48UN,0)) as MAT48, sum(isnull(YTD00UN,0)) as
YTD00,sum(isnull(YTD01UN,0)) as YTD01,sum(isnull(YTD02UN,0)) as
YTD02,sum(isnull(YTD03UN,0)) as YTD03,sum(isnull(YTD04UN,0)) as
YTD04,sum(isnull(YTD05UN,0)) as YTD05,sum(isnull(YTD06UN,0)) as
YTD06,sum(isnull(YTD07UN,0)) as YTD07,sum(isnull(YTD08UN,0)) as
YTD08,sum(isnull(YTD09UN,0)) as YTD09,sum(isnull(YTD10UN,0)) as
YTD10,sum(isnull(YTD11UN,0)) as YTD11,sum(isnull(YTD12UN,0)) as
YTD12,sum(isnull(YTD13UN,0)) as YTD13,sum(isnull(YTD14UN,0)) as
YTD14,sum(isnull(YTD15UN,0)) as YTD15,sum(isnull(YTD16UN,0)) as
YTD16,sum(isnull(YTD17UN,0)) as YTD17,sum(isnull(YTD18UN,0)) as
YTD18,sum(isnull(YTD19UN,0)) as YTD19,sum(isnull(YTD20UN,0)) as
YTD20,sum(isnull(YTD21UN,0)) as YTD21,sum(isnull(YTD22UN,0)) as
YTD22,sum(isnull(YTD23UN,0)) as YTD23,sum(isnull(YTD24UN,0)) as
YTD24,sum(isnull(YTD25UN,0)) as YTD25,sum(isnull(YTD26UN,0)) as
YTD26,sum(isnull(YTD27UN,0)) as YTD27,sum(isnull(YTD28UN,0)) as
YTD28,sum(isnull(YTD29UN,0)) as YTD29,sum(isnull(YTD30UN,0)) as
YTD30,sum(isnull(YTD31UN,0)) as YTD31,sum(isnull(YTD32UN,0)) as
YTD32,sum(isnull(YTD33UN,0)) as YTD33,sum(isnull(YTD34UN,0)) as
YTD34,sum(isnull(YTD35UN,0)) as YTD35,sum(isnull(YTD36UN,0)) as
YTD36,sum(isnull(YTD37UN,0)) as YTD37,sum(isnull(YTD38UN,0)) as
YTD38,sum(isnull(YTD39UN,0)) as YTD39,sum(isnull(YTD40UN,0)) as
YTD40,sum(isnull(YTD41UN,0)) as YTD41,sum(isnull(YTD42UN,0)) as
YTD42,sum(isnull(YTD43UN,0)) as YTD43,sum(isnull(YTD44UN,0)) as
YTD44,sum(isnull(YTD45UN,0)) as YTD45,sum(isnull(YTD46UN,0)) as
YTD46,sum(isnull(YTD47UN,0)) as YTD47,sum(isnull(YTD48UN,0)) as YTD48,
sum(isnull(Qtr00UN,0)) as Qtr00,sum(isnull(Qtr01UN,0)) as
Qtr01,sum(isnull(Qtr02UN,0)) as Qtr02,sum(isnull(Qtr03UN,0)) as
Qtr03,sum(isnull(Qtr04UN,0)) as Qtr04,sum(isnull(Qtr05UN,0)) as
Qtr05,sum(isnull(Qtr06UN,0)) as Qtr06,sum(isnull(Qtr07UN,0)) as
Qtr07,sum(isnull(Qtr08UN,0)) as Qtr08,sum(isnull(Qtr09UN,0)) as
Qtr09,sum(isnull(Qtr10UN,0)) as Qtr10,sum(isnull(Qtr11UN,0)) as
Qtr11,sum(isnull(Qtr12UN,0)) as Qtr12,sum(isnull(Qtr13UN,0)) as
Qtr13,sum(isnull(Qtr14UN,0)) as Qtr14,sum(isnull(Qtr15UN,0)) as
Qtr15,sum(isnull(Qtr16UN,0)) as Qtr16,sum(isnull(Qtr17UN,0)) as
Qtr17,sum(isnull(Qtr18UN,0)) as Qtr18,sum(isnull(Qtr19UN,0)) as Qtr19
			from mthCHPA_pkau A inner join tblMktDef_MRBIChina_For_OtherETV B
			on A.pack_cod=B.pack_cod where B.Active='Y'
			group by B.Molecule,B.Class,B.mkt,B.mktname,B.prod,B.Productname
(5 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (224 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (5 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 1> 2> (0 rows affected)
1> 2> 1> 2> 3> 4> 5> 6> (560 rows affected)
1> 2> 3> 4> 5> 6> 7> (0 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> (560 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> (80 rows affected)
1> 2> 3> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> (616 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> (189 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> (3 rows affected)
(15 rows affected)
(0 rows affected)
(0 rows affected)
(18 rows affected)
(9 rows affected)
(9 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> (24 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> Warning: Null value is eliminated by an aggregate or other SET operation.
(71 rows affected)
(727 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (1525 rows affected)
1> 2> 3> 4> (727 rows affected)
(0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> (0 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> 5> 6> (462 rows affected)
1> 2> 3> (462 rows affected)
1> 2> 3> 4> 5> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> 43> 44> 45> 46> 47> 48> 49> 50> 51> 52> 53> 54> 55> 56> 57> 58> 59> 60> 61> 62> 63> 64> 65> 66> 67> 68> 69> 70> 71> 72> 73> 74> 75> 76> 77> 78> 79> 80> 81> 82> 83> 84> 85> 86> 87> 88> 89> 90> 
	select 'MAT' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.MAT00) when 0 then null else sum(B.MAT00)*1.0/sum(A.MAT00) end as
MAT00,
	case sum(A.MAT01) when 0 then null else sum(B.MAT01)*1.0/sum(A.MAT01) end as
MAT01,
	case sum(A.MAT02) when 0 then null else sum(B.MAT02)*1.0/sum(A.MAT02) end as
MAT02,
	case sum(A.MAT03) when 0 then null else sum(B.MAT03)*1.0/sum(A.MAT03) end as
MAT03,
	case sum(A.MAT04) when 0 then null else sum(B.MAT04)*1.0/sum(A.MAT04) end as
MAT04,
	case sum(A.MAT05) when 0 then null else sum(B.MAT05)*1.0/sum(A.MAT05) end as
MAT05,
	case sum(A.MAT06) when 0 then null else sum(B.MAT06)*1.0/sum(A.MAT06) end as
MAT06,
	case sum(A.MAT07) when 0 then null else sum(B.MAT07)*1.0/sum(A.MAT07) end as
MAT07,
	case sum(A.MAT08) when 0 then null else sum(B.MAT08)*1.0/sum(A.MAT08) end as
MAT08,
	case sum(A.MAT09) when 0 then null else sum(B.MAT09)*1.0/sum(A.MAT09) end as
MAT09,
	case sum(A.MAT10) when 0 then null else sum(B.MAT10)*1.0/sum(A.MAT10) end as
MAT10,
	case sum(A.MAT11) when 0 then null else sum(B.MAT11)*1.0/sum(A.MAT11) end as
MAT11,
	case sum(A.MAT12) when 0 then null else sum(B.MAT12)*1.0/sum(A.MAT12) end as
MAT12,
	case sum(A.MAT13) when 0 then null else sum(B.MAT13)*1.0/sum(A.MAT13) end as
MAT13,
	case sum(A.MAT14) when 0 then null else sum(B.MAT14)*1.0/sum(A.MAT14) end as
MAT14,
	case sum(A.MAT15) when 0 then null else sum(B.MAT15)*1.0/sum(A.MAT15) end as
MAT15,
	case sum(A.MAT16) when 0 then null else sum(B.MAT16)*1.0/sum(A.MAT16) end as
MAT16,
	case sum(A.MAT17) when 0 then null else sum(B.MAT17)*1.0/sum(A.MAT17) end as
MAT17,
	case sum(A.MAT18) when 0 then null else sum(B.MAT18)*1.0/sum(A.MAT18) end as
MAT18,
	case sum(A.MAT19) when 0 then null else sum(B.MAT19)*1.0/sum(A.MAT19) end as
MAT19,
	case sum(A.MAT20) when 0 then null else sum(B.MAT20)*1.0/sum(A.MAT20) end as
MAT20,
	case sum(A.MAT21) when 0 then null else sum(B.MAT21)*1.0/sum(A.MAT21) end as
MAT21,
	case sum(A.MAT22) when 0 then null else sum(B.MAT22)*1.0/sum(A.MAT22) end as
MAT22,
	case sum(A.MAT23) when 0 then null else sum(B.MAT23)*1.0/sum(A.MAT23) end as
MAT23,
	case sum(A.MAT24) when 0 then null else sum(B.MAT24)*1.0/sum(A.MAT24) end as
MAT24 
	into OutputKeyBrandPerformance_For_OtherETV 
	from TempCHPAPreReports_For_OtherETV A 
	inner join TempCHPAPreReports_For_OtherETV B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
		and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.class='N' and B.Molecule='N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(90 rows affected)

	insert into OutputKeyBrandPerformance_For_OtherETV
	select 'MQT' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.R3M00) when 0 then null else sum(B.R3M00)*1.0/sum(A.R3M00) end,
	case sum(A.R3M01) when 0 then null else sum(B.R3M01)*1.0/sum(A.R3M01) end,
	case sum(A.R3M02) when 0 then null else sum(B.R3M02)*1.0/sum(A.R3M02) end,
	case sum(A.R3M03) when 0 then null else sum(B.R3M03)*1.0/sum(A.R3M03) end,
	case sum(A.R3M04) when 0 then null else sum(B.R3M04)*1.0/sum(A.R3M04) end,
	case sum(A.R3M05) when 0 then null else sum(B.R3M05)*1.0/sum(A.R3M05) end,
	case sum(A.R3M06) when 0 then null else sum(B.R3M06)*1.0/sum(A.R3M06) end,
	case sum(A.R3M07) when 0 then null else sum(B.R3M07)*1.0/sum(A.R3M07) end,
	case sum(A.R3M08) when 0 then null else sum(B.R3M08)*1.0/sum(A.R3M08) end,
	case sum(A.R3M09) when 0 then null else sum(B.R3M09)*1.0/sum(A.R3M09) end,
	case sum(A.R3M10) when 0 then null else sum(B.R3M10)*1.0/sum(A.R3M10) end,
	case sum(A.R3M11) when 0 then null else sum(B.R3M11)*1.0/sum(A.R3M11) end,
	case sum(A.R3M12) when 0 then null else sum(B.R3M12)*1.0/sum(A.R3M12) end,
	case sum(A.R3M13) when 0 then null else sum(B.R3M13)*1.0/sum(A.R3M13) end,
	case sum(A.R3M14) when 0 then null else sum(B.R3M14)*1.0/sum(A.R3M14) end,
	case sum(A.R3M15) when 0 then null else sum(B.R3M15)*1.0/sum(A.R3M15) end,
	case sum(A.R3M16) when 0 then null else sum(B.R3M16)*1.0/sum(A.R3M16) end,
	case sum(A.R3M17) when 0 then null else sum(B.R3M17)*1.0/sum(A.R3M17) end,
	case sum(A.R3M18) when 0 then null else sum(B.R3M18)*1.0/sum(A.R3M18) end,
	case sum(A.R3M19) when 0 then null else sum(B.R3M19)*1.0/sum(A.R3M19) end,
	case sum(A.R3M20) when 0 then null else sum(B.R3M20)*1.0/sum(A.R3M20) end,
	case sum(A.R3M21) when 0 then null else sum(B.R3M21)*1.0/sum(A.R3M21) end,
	case sum(A.R3M22) when 0 then null else sum(B.R3M22)*1.0/sum(A.R3M22) end,
	case sum(A.R3M23) when 0 then null else sum(B.R3M23)*1.0/sum(A.R3M23) end,
	case sum(A.R3M24) when 0 then null else sum(B.R3M24)*1.0/sum(A.R3M24) end 
	from TempCHPAPreReports_For_OtherETV A 
	inner join TempCHPAPreReports_For_OtherETV B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
	and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.class='N' and B.Molecule='N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(90 rows affected)
insert into OutputKeyBrandPerformance_For_OtherETV
	select 'MTH' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
	case sum(A.MTH00) when 0 then null else sum(B.MTH00)*1.0/sum(A.MTH00) end,
	case sum(A.MTH01) when 0 then null else sum(B.MTH01)*1.0/sum(A.MTH01) end,
	case sum(A.MTH02) when 0 then null else sum(B.MTH02)*1.0/sum(A.MTH02) end,
	case sum(A.MTH03) when 0 then null else sum(B.MTH03)*1.0/sum(A.MTH03) end,
	case sum(A.MTH04) when 0 then null else sum(B.MTH04)*1.0/sum(A.MTH04) end,
	case sum(A.MTH05) when 0 then null else sum(B.MTH05)*1.0/sum(A.MTH05) end,
	case sum(A.MTH06) when 0 then null else sum(B.MTH06)*1.0/sum(A.MTH06) end,
	case sum(A.MTH07) when 0 then null else sum(B.MTH07)*1.0/sum(A.MTH07) end,
	case sum(A.MTH08) when 0 then null else sum(B.MTH08)*1.0/sum(A.MTH08) end,
	case sum(A.MTH09) when 0 then null else sum(B.MTH09)*1.0/sum(A.MTH09) end,
	case sum(A.MTH10) when 0 then null else sum(B.MTH10)*1.0/sum(A.MTH10) end,
	case sum(A.MTH11) when 0 then null else sum(B.MTH11)*1.0/sum(A.MTH11) end,
	case sum(A.MTH12) when 0 then null else sum(B.MTH12)*1.0/sum(A.MTH12) end,
	case sum(A.MTH13) when 0 then null else sum(B.MTH13)*1.0/sum(A.MTH13) end,
	case sum(A.MTH14) when 0 then null else sum(B.MTH14)*1.0/sum(A.MTH14) end,
	case sum(A.MTH15) when 0 then null else sum(B.MTH15)*1.0/sum(A.MTH15) end,
	case sum(A.MTH16) when 0 then null else sum(B.MTH16)*1.0/sum(A.MTH16) end,
	case sum(A.MTH17) when 0 then null else sum(B.MTH17)*1.0/sum(A.MTH17) end,
	case sum(A.MTH18) when 0 then null else sum(B.MTH18)*1.0/sum(A.MTH18) end,
	case sum(A.MTH19) when 0 then null else sum(B.MTH19)*1.0/sum(A.MTH19) end,
	case sum(A.MTH20) when 0 then null else sum(B.MTH20)*1.0/sum(A.MTH20) end,
	case sum(A.MTH21) when 0 then null else sum(B.MTH21)*1.0/sum(A.MTH21) end,
	case sum(A.MTH22) when 0 then null else sum(B.MTH22)*1.0/sum(A.MTH22) end,
	case sum(A.MTH23) when 0 then null else sum(B.MTH23)*1.0/sum(A.MTH23) end,
	case sum(A.MTH24) when 0 then null else sum(B.MTH24)*1.0/sum(A.MTH24) end 
	from TempCHPAPreReports_For_OtherETV A 
	inner join TempCHPAPreReports_For_OtherETV B
	on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
		and A.Market=B.Market and A.prod='000' and B.prod<>'000'
	where B.class='N' and B.Molecule='N'
	group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(90 rows affected)
insert into OutputKeyBrandPerformance_For_OtherETV
select 'YTD' as
Period,B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Produc
tname,
case sum(A.YTD00) 
	when 0 then null 
	else sum(B.YTD00)*1.0/sum(A.YTD00) end,
case sum(A.YTD01) 
	when 0 then null 
	else sum(B.YTD01)*1.0/sum(A.YTD01) end,
case sum(A.YTD02) 
	when 0 then null 
	else sum(B.YTD02)*1.0/sum(A.YTD02) end,
case sum(A.YTD03) 
	when 0 then null 
	else sum(B.YTD03)*1.0/sum(A.YTD03) end,
case sum(A.YTD04) 
	when 0 then null 
	else sum(B.YTD04)*1.0/sum(A.YTD04) end,
case sum(A.YTD05) 
	when 0 then null 
	else sum(B.YTD05)*1.0/sum(A.YTD05) end,
case sum(A.YTD06) 
	when 0 then null 
	else sum(B.YTD06)*1.0/sum(A.YTD06) end,
case sum(A.YTD07) 
	when 0 then null 
	else sum(B.YTD07)*1.0/sum(A.YTD07) end,
case sum(A.YTD08) 
	when 0 then null 
	else sum(B.YTD08)*1.0/sum(A.YTD08) end,
case sum(A.YTD09) 
	when 0 then null 
	else sum(B.YTD09)*1.0/sum(A.YTD09) end,
case sum(A.YTD10) 
	when 0 then null 
	else sum(B.YTD10)*1.0/sum(A.YTD10) end,
case sum(A.YTD11) 
	when 0 then null 
	else sum(B.YTD11)*1.0/sum(A.YTD11) end,
case sum(A.YTD12) 
	when 0 then null 
	else sum(B.YTD12)*1.0/sum(A.YTD12) end,
case sum(A.YTD13) 
	when 0 then null 
	else sum(B.YTD13)*1.0/sum(A.YTD13) end,
case sum(A.YTD14) 
	when 0 then null 
	else sum(B.YTD14)*1.0/sum(A.YTD14) end,
case sum(A.YTD15) 
	when 0 then null 
	else sum(B.YTD15)*1.0/sum(A.YTD15) end,
case sum(A.YTD16) 
	when 0 then null 
	else sum(B.YTD16)*1.0/sum(A.YTD16) end,
case sum(A.YTD17) 
	when 0 then null 
	else sum(B.YTD17)*1.0/sum(A.YTD17) end,
case sum(A.YTD18) 
	when 0 then null 
	else sum(B.YTD18)*1.0/sum(A.YTD18) end,
case sum(A.YTD19) 
	when 0 then null 
	else sum(B.YTD19)*1.0/sum(A.YTD19) end,
case sum(A.YTD20) 
	when 0 then null 
	else sum(B.YTD20)*1.0/sum(A.YTD20) end,
case sum(A.YTD21) 
	when 0 then null 
	else sum(B.YTD21)*1.0/sum(A.YTD21) end,
case sum(A.YTD22) 
	when 0 then null 
	else sum(B.YTD22)*1.0/sum(A.YTD22) end,
case sum(A.YTD23) 
	when 0 then null 
	else sum(B.YTD23)*1.0/sum(A.YTD23) end,
case sum(A.YTD24) 
	when 0 then null 
	else sum(B.YTD24)*1.0/sum(A.YTD24) end 
from TempCHPAPreReports_For_OtherETV A 
inner join TempCHPAPreReports_For_OtherETV B
on A.mkt=b.mkt and A.Moneytype=b.Moneytype and A.class=B.class and
A.Molecule=B.Molecule
	and A.Market=B.Market and A.prod='000' and B.prod<>'000'
where B.class='N' and B.Molecule='N'
group by
B.Moneytype,B.Molecule,B.Class,B.Mkt,B.Mktname,B.Market,B.Prod,B.Productname
(90 rows affected)
1> 2> 3> 4> (0 rows affected)
(72 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> Warning: Null value is eliminated by an aggregate or other SET operation.
(560 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> (448 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> (84 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> (560 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> (448 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> (0 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> 25> 26> 27> 28> 29> 30> 31> 32> 33> 34> 35> 36> 37> 38> 39> 40> 41> 42> (399 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> 14> 15> 16> 17> 18> 19> 20> 21> 22> 23> 24> (0 rows affected)
1> 2> 3> 1> 2> 3> 4> 5> 6> 7> need update table tblD080OutputProduct
1> 2> 3> 4> 5> 6> 7> 8> (1239 rows affected)
1> 2> 3> 4> 5> 6> 7> 8> 9> 10> 11> 12> 13> (0 rows affected)
1> 2> 3> 4> 5> (0 rows affected)
1> 2> 3> 4> 5> (0 rows affected)
1> 2> 3> (1 row affected)
